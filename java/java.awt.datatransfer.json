{"entries": [{"type": "Interface", "desc": "Defines the interface for classes that will provide data to a clipboard.", "name": "ClipboardOwner", "link": "ClipboardOwner"}, {"type": "Interface", "name": "FlavorListener", "link": "FlavorListener"}, {"type": "Interface", "desc": "A two-way Map between \"natives\" (Strings), which correspond to platform- specific data formats, and \"flavors\" (DataFlavors), which correspond to platform-independent MIME types.", "name": "FlavorMap", "link": "FlavorMap"}, {"type": "Interface", "desc": "A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map.", "name": "FlavorTable", "link": "FlavorTable"}, {"type": "Interface", "desc": "Defines the interface for classes that can be used to provide data for a transfer operation.", "name": "Transferable", "link": "Transferable"}, {"type": "Class", "desc": "A class that implements a mechanism to transfer data using cut/copy/paste operations.", "name": "Clipboard", "link": "Clipboard"}, {"type": "Class", "name": "DataFlavor", "link": "DataFlavor"}, {"type": "Class", "name": "FlavorEvent", "link": "FlavorEvent"}, {"type": "Class", "name": "StringSelection", "link": "StringSelection"}, {"type": "Class", "desc": "The SystemFlavorMap is a configurable map between \"natives\" (Strings), which correspond to platform-specific data formats, and \"flavors\" (DataFlavors), which correspond to platform-independent MIME types.", "name": "SystemFlavorMap", "link": "SystemFlavorMap"}, {"type": "Exception", "desc": "A class to encapsulate MimeType parsing related exceptions", "name": "MimeTypeParseException", "link": "MimeTypeParseException"}, {"type": "Exception", "desc": "Signals that the requested data is not supported in this flavor.", "name": "UnsupportedFlavorException", "link": "UnsupportedFlavorException"}], "desc": "Provides interfaces and classes for transferring data between and within applications. It defines the notion of a \"transferable\" object, which is an object capable of being transferred between or within applications. An object identifies itself as being transferable by implementing the Transferable interface. It also provides a clipboard mechanism, which is an object that temporarily holds a transferable object that can be transferred between or within an application. The clipboard is typically used for copy and paste operations. Although it is possible to create a clipboard to use within an application, most applications will use the system clipboard to ensure the data can be transferred across applications running on the platform. "}