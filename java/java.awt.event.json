{"entries": [{"type": "Interface", "desc": "The listener interface for receiving action events.", "name": "ActionListener", "link": "ActionListener"}, {"type": "Interface", "desc": "The listener interface for receiving adjustment events.", "name": "AdjustmentListener", "link": "AdjustmentListener"}, {"type": "Interface", "desc": "The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.", "name": "AWTEventListener", "link": "AWTEventListener"}, {"type": "Interface", "desc": "The listener interface for receiving component events.", "name": "ComponentListener", "link": "ComponentListener"}, {"type": "Interface", "desc": "The listener interface for receiving container events.", "name": "ContainerListener", "link": "ContainerListener"}, {"type": "Interface", "desc": "The listener interface for receiving keyboard focus events on a component.", "name": "FocusListener", "link": "FocusListener"}, {"type": "Interface", "desc": "The listener interface for receiving ancestor moved and resized events.", "name": "HierarchyBoundsListener", "link": "HierarchyBoundsListener"}, {"type": "Interface", "desc": "The listener interface for receiving hierarchy changed events.", "name": "HierarchyListener", "link": "HierarchyListener"}, {"type": "Interface", "desc": "The listener interface for receiving input method events.", "name": "InputMethodListener", "link": "InputMethodListener"}, {"type": "Interface", "desc": "The listener interface for receiving item events.", "name": "ItemListener", "link": "ItemListener"}, {"type": "Interface", "desc": "The listener interface for receiving keyboard events (keystrokes).", "name": "KeyListener", "link": "KeyListener"}, {"type": "Interface", "desc": "The listener interface for receiving \"interesting\" mouse events (press, release, click, enter, and exit) on a component.", "name": "MouseListener", "link": "MouseListener"}, {"type": "Interface", "desc": "The listener interface for receiving mouse motion events on a component.", "name": "MouseMotionListener", "link": "MouseMotionListener"}, {"type": "Interface", "desc": "The listener interface for receiving mouse wheel events on a component.", "name": "MouseWheelListener", "link": "MouseWheelListener"}, {"type": "Interface", "desc": "The listener interface for receiving text events.", "name": "TextListener", "link": "TextListener"}, {"type": "Interface", "name": "WindowFocusListener", "link": "WindowFocusListener"}, {"type": "Interface", "desc": "The listener interface for receiving window events.", "name": "WindowListener", "link": "WindowListener"}, {"type": "Interface", "desc": "The listener interface for receiving window state events.", "name": "WindowStateListener", "link": "WindowStateListener"}, {"type": "Class", "desc": "A semantic event which indicates that a component-defined action occurred.", "name": "ActionEvent", "link": "ActionEvent"}, {"type": "Class", "name": "AdjustmentEvent", "link": "AdjustmentEvent"}, {"type": "Class", "name": "AWTEventListenerProxy", "link": "AWTEventListenerProxy"}, {"type": "Class", "desc": "An abstract adapter class for receiving component events.", "name": "ComponentAdapter", "link": "ComponentAdapter"}, {"type": "Class", "desc": "A low-level event which indicates that a component moved, changed size, or changed visibility (also, the root class for the other component-level events).", "name": "ComponentEvent", "link": "ComponentEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving container events.", "name": "ContainerAdapter", "link": "ContainerAdapter"}, {"type": "Class", "desc": "A low-level event which indicates that a container's contents changed because a component was added or removed.", "name": "ContainerEvent", "link": "ContainerEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving keyboard focus events.", "name": "FocusAdapter", "link": "FocusAdapter"}, {"type": "Class", "desc": "A low-level event which indicates that a Component has gained or lost the input focus.", "name": "FocusEvent", "link": "FocusEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving ancestor moved and resized events.", "name": "HierarchyBoundsAdapter", "link": "HierarchyBoundsAdapter"}, {"type": "Class", "name": "HierarchyEvent", "link": "HierarchyEvent"}, {"type": "Class", "desc": "The root event class for all component-level input events.", "name": "InputEvent", "link": "InputEvent"}, {"type": "Class", "desc": "Input method events contain information about text that is being composed using an input method.", "name": "InputMethodEvent", "link": "InputMethodEvent"}, {"type": "Class", "name": "InvocationEvent", "link": "InvocationEvent"}, {"type": "Class", "desc": "A semantic event which indicates that an item was selected or deselected.", "name": "ItemEvent", "link": "ItemEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving keyboard events.", "name": "KeyAdapter", "link": "KeyAdapter"}, {"type": "Class", "desc": "An event which indicates that a keystroke occurred in a component.", "name": "KeyEvent", "link": "KeyEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving mouse events.", "name": "MouseAdapter", "link": "MouseAdapter"}, {"type": "Class", "desc": "An event which indicates that a mouse action occurred in a component.", "name": "MouseEvent", "link": "MouseEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving mouse motion events.", "name": "MouseMotionAdapter", "link": "MouseMotionAdapter"}, {"type": "Class", "desc": "An event which indicates that the mouse wheel was rotated in a component.", "name": "MouseWheelEvent", "link": "MouseWheelEvent"}, {"type": "Class", "desc": "The component-level paint event.", "name": "PaintEvent", "link": "PaintEvent"}, {"type": "Class", "desc": "A semantic event which indicates that an object's text changed.", "name": "TextEvent", "link": "TextEvent"}, {"type": "Class", "desc": "An abstract adapter class for receiving window events.", "name": "WindowAdapter", "link": "WindowAdapter"}, {"type": "Class", "desc": "A low-level event that indicates that a window has changed its status.", "name": "WindowEvent", "link": "WindowEvent"}], "desc": "Provides interfaces and classes for dealing with different types of events fired by AWT components. See the java.awt.AWTEvent class for details on the AWT event model. Events are fired by event sources. An event listener registers with an event source to receive notifications about the events of a particular type. This package defines events and event listeners, as well as event listener adapters, which are convenience classes to make easier the process of writing event listeners. "}