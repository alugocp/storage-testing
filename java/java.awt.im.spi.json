{"entries": [{"type": "Interface", "desc": "Defines the interface for an input method that supports complex text input.", "name": "InputMethod", "link": "InputMethod"}, {"type": "Interface", "desc": "Provides methods that input methods can use to communicate with their client components or to request other services.", "name": "InputMethodContext", "link": "InputMethodContext"}, {"type": "Interface", "desc": "Defines methods that provide sufficient information about an input method to enable selection and loading of that input method.", "name": "InputMethodDescriptor", "link": "InputMethodDescriptor"}], "desc": "Provides interfaces that enable the development of input methods that can be used with any Java runtime environment. Input methods are software components that let the user enter text in ways other than simple typing on a keyboard. They are commonly used to enter Japanese, Chinese, or Korean - languages using thousands of different characters - on keyboards with far fewer keys. However, this package also allows the development of input methods for other languages and the use of entirely different input mechanisms, such as handwriting recognition. Package Specification Input Method  Framework Specification Input  Method Engine SPI Reference Packaging Input Methods Input methods are packaged as installed extensions, as specified by the Extension Mechanism. The main JAR file of an input method must contain the file:   META-INF/services/java.awt.im.spi.InputMethodDescriptor The file should contain a list of fully-qualified class names, one per line, of classes implementing the java.awt.im.spi.InputMethodDescriptor interface. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is '#' (\\u0023); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8. For example, if the fully-qualified name of the class that implements java.awt.im.spi.InputMethodDesciptor for the Foo input method is com.sun.ime.FooInputMethodDescriptor, the file META-INF/services/java.awt.im.spi.InputMethodDescriptor contains a line:   com.sun.ime.FooInputMethodDescriptor The input method must also provide at least two classes: one class implementing the java.awt.im.spi.InputMethodDescriptor interface, one class implementing the java.awt.im.spi.InputMethod interface. The input method should separate the implementations for these interfaces, so that loading of the class implementing InputMethod can be deferred until actually needed. Loading Input Methods The input method framework will usually defer loading of input method classes until they are absolutely needed. It loads only the InputMethodDescriptor implementations during AWT initialization. It loads an InputMethod implementation when the input method has been selected. Java Input Methods and Peered Text Components The Java input method framework intends to support all combinations of input methods (host input methods and Java input methods) and components (peered and lightweight). However, because of limitations in the underlying platform, it may not always be possible to enable the communication between Java input methods and peered AWT components. Support for this specific combination is therefore platform dependent. In Sun's Java SE Runtime Environments, this combination is supported on Windows, but not on Solaris. Related Documentation For overviews, tutorials, examples, guides, and tool documentation, please see: Input  Method Framework Overview Input  Method Engine SPI Tutorial "}