{"entries": [{"type": "Interface", "desc": "An interface for events that know how to dispatch themselves.", "name": "ActiveEvent", "link": "ActiveEvent"}, {"type": "Interface", "desc": "The interface for objects which have an adjustable numeric value contained within a bounded range of values.", "name": "Adjustable", "link": "Adjustable"}, {"type": "Interface", "name": "Composite", "link": "Composite"}, {"type": "Interface", "name": "CompositeContext", "link": "CompositeContext"}, {"type": "Interface", "desc": "The interface for objects which contain a set of items for which zero or more can be selected.", "name": "ItemSelectable", "link": "ItemSelectable"}, {"type": "Interface", "desc": "A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents.", "name": "KeyEventDispatcher", "link": "KeyEventDispatcher"}, {"type": "Interface", "desc": "A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents.", "name": "KeyEventPostProcessor", "link": "KeyEventPostProcessor"}, {"type": "Interface", "name": "LayoutManager", "link": "LayoutManager"}, {"type": "Interface", "desc": "Defines an interface for classes that know how to layout Containers based on a layout constraints object.", "name": "LayoutManager2", "link": "LayoutManager2"}, {"type": "Interface", "desc": "The super class of all menu related containers.", "name": "MenuContainer", "link": "MenuContainer"}, {"type": "Interface", "name": "Paint", "link": "Paint"}, {"type": "Interface", "name": "PaintContext", "link": "PaintContext"}, {"type": "Interface", "desc": "An abstract class which provides a print graphics context for a page.", "name": "PrintGraphics", "link": "PrintGraphics"}, {"type": "Interface", "desc": "A helper interface to run the nested event loop.", "name": "SecondaryLoop", "link": "SecondaryLoop"}, {"type": "Interface", "name": "Shape", "link": "Shape"}, {"type": "Interface", "name": "Stroke", "link": "Stroke"}, {"type": "Interface", "name": "Transparency", "link": "Transparency"}, {"type": "Class", "name": "AlphaComposite", "link": "AlphaComposite"}, {"type": "Class", "desc": "The root event class for all AWT events.", "name": "AWTEvent", "link": "AWTEvent"}, {"type": "Class", "name": "AWTEventMulticaster", "link": "AWTEventMulticaster"}, {"type": "Class", "name": "AWTKeyStroke", "link": "AWTKeyStroke"}, {"type": "Class", "desc": "This class is for AWT permissions.", "name": "AWTPermission", "link": "AWTPermission"}, {"type": "Class", "name": "BasicStroke", "link": "BasicStroke"}, {"type": "Class", "desc": "A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center.", "name": "BorderLayout", "link": "BorderLayout"}, {"type": "Class", "desc": "Capabilities and properties of buffers.", "name": "BufferCapabilities", "link": "BufferCapabilities"}, {"type": "Class", "desc": "A type-safe enumeration of the possible back buffer contents after page-flipping", "name": "BufferCapabilities.FlipContents", "link": "BufferCapabilities.FlipContents"}, {"type": "Class", "desc": "This class creates a labeled button.", "name": "Button", "link": "Button"}, {"type": "Class", "name": "Canvas", "link": "Canvas"}, {"type": "Class", "name": "CardLayout", "link": "CardLayout"}, {"type": "Class", "name": "Checkbox", "link": "Checkbox"}, {"type": "Class", "name": "CheckboxGroup", "link": "CheckboxGroup"}, {"type": "Class", "desc": "This class represents a check box that can be included in a menu.", "name": "CheckboxMenuItem", "link": "CheckboxMenuItem"}, {"type": "Class", "name": "Choice", "link": "Choice"}, {"type": "Class", "name": "Color", "link": "Color"}, {"type": "Class", "name": "Component", "link": "Component"}, {"type": "Class", "desc": "The ComponentOrientation class encapsulates the language-sensitive orientation that is to be used to order the elements of a component or of text.", "name": "ComponentOrientation", "link": "ComponentOrientation"}, {"type": "Class", "desc": "A generic Abstract Window Toolkit(AWT) container object is a component that can contain other AWT components.", "name": "Container", "link": "Container"}, {"type": "Class", "desc": "A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container.", "name": "ContainerOrderFocusTraversalPolicy", "link": "ContainerOrderFocusTraversalPolicy"}, {"type": "Class", "desc": "A class to encapsulate the bitmap representation of the mouse cursor.", "name": "Cursor", "link": "Cursor"}, {"type": "Class", "desc": "A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container.", "name": "DefaultFocusTraversalPolicy", "link": "DefaultFocusTraversalPolicy"}, {"type": "Class", "desc": "The default KeyboardFocusManager for AWT applications.", "name": "DefaultKeyboardFocusManager", "link": "DefaultKeyboardFocusManager"}, {"type": "Class", "name": "Desktop", "link": "Desktop"}, {"type": "Class", "desc": "A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user.", "name": "Dialog", "link": "Dialog"}, {"type": "Class", "name": "Dimension", "link": "Dimension"}, {"type": "Class", "name": "DisplayMode", "link": "DisplayMode"}, {"type": "Class", "name": "Event", "link": "Event"}, {"type": "Class", "name": "EventQueue", "link": "EventQueue"}, {"type": "Class", "name": "FileDialog", "link": "FileDialog"}, {"type": "Class", "desc": "A flow layout arranges components in a directional flow, much like lines of text in a paragraph.", "name": "FlowLayout", "link": "FlowLayout"}, {"type": "Class", "desc": "A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed.", "name": "FocusTraversalPolicy", "link": "FocusTraversalPolicy"}, {"type": "Class", "name": "Font", "link": "Font"}, {"type": "Class", "name": "FontMetrics", "link": "FontMetrics"}, {"type": "Class", "name": "Frame", "link": "Frame"}, {"type": "Class", "name": "GradientPaint", "link": "GradientPaint"}, {"type": "Class", "name": "Graphics", "link": "Graphics"}, {"type": "Class", "name": "Graphics2D", "link": "Graphics2D"}, {"type": "Class", "name": "GraphicsConfigTemplate", "link": "GraphicsConfigTemplate"}, {"type": "Class", "name": "GraphicsConfiguration", "link": "GraphicsConfiguration"}, {"type": "Class", "name": "GraphicsDevice", "link": "GraphicsDevice"}, {"type": "Class", "name": "GraphicsEnvironment", "link": "GraphicsEnvironment"}, {"type": "Class", "name": "GridBagConstraints", "link": "GridBagConstraints"}, {"type": "Class", "name": "GridBagLayout", "link": "GridBagLayout"}, {"type": "Class", "name": "GridBagLayoutInfo", "link": "GridBagLayoutInfo"}, {"type": "Class", "name": "GridLayout", "link": "GridLayout"}, {"type": "Class", "name": "Image", "link": "Image"}, {"type": "Class", "desc": "Capabilities and properties of images.", "name": "ImageCapabilities", "link": "ImageCapabilities"}, {"type": "Class", "name": "Insets", "link": "Insets"}, {"type": "Class", "desc": "A set of attributes which control a print job.", "name": "JobAttributes", "link": "JobAttributes"}, {"type": "Class", "desc": "A type-safe enumeration of possible default selection states.", "name": "JobAttributes.DefaultSelectionType", "link": "JobAttributes.DefaultSelectionType"}, {"type": "Class", "desc": "A type-safe enumeration of possible job destinations.", "name": "JobAttributes.DestinationType", "link": "JobAttributes.DestinationType"}, {"type": "Class", "desc": "A type-safe enumeration of possible dialogs to display to the user.", "name": "JobAttributes.DialogType", "link": "JobAttributes.DialogType"}, {"type": "Class", "desc": "A type-safe enumeration of possible multiple copy handling states.", "name": "JobAttributes.MultipleDocumentHandlingType", "link": "JobAttributes.MultipleDocumentHandlingType"}, {"type": "Class", "desc": "A type-safe enumeration of possible multi-page impositions.", "name": "JobAttributes.SidesType", "link": "JobAttributes.SidesType"}, {"type": "Class", "desc": "The KeyboardFocusManager is responsible for managing the active and focused Windows, and the current focus owner.", "name": "KeyboardFocusManager", "link": "KeyboardFocusManager"}, {"type": "Class", "name": "Label", "link": "Label"}, {"type": "Class", "name": "LinearGradientPaint", "link": "LinearGradientPaint"}, {"type": "Class", "name": "List", "link": "List"}, {"type": "Class", "name": "MediaTracker", "link": "MediaTracker"}, {"type": "Class", "name": "Menu", "link": "Menu"}, {"type": "Class", "name": "MenuBar", "link": "MenuBar"}, {"type": "Class", "name": "MenuComponent", "link": "MenuComponent"}, {"type": "Class", "name": "MenuItem", "link": "MenuItem"}, {"type": "Class", "name": "MenuShortcut", "link": "MenuShortcut"}, {"type": "Class", "name": "MouseInfo", "link": "MouseInfo"}, {"type": "Class", "desc": "This is the superclass for Paints which use a multiple color gradient to fill in their raster.", "name": "MultipleGradientPaint", "link": "MultipleGradientPaint"}, {"type": "Class", "desc": "A set of attributes which control the output of a printed page.", "name": "PageAttributes", "link": "PageAttributes"}, {"type": "Class", "desc": "A type-safe enumeration of possible color states.", "name": "PageAttributes.ColorType", "link": "PageAttributes.ColorType"}, {"type": "Class", "desc": "A type-safe enumeration of possible paper sizes.", "name": "PageAttributes.MediaType", "link": "PageAttributes.MediaType"}, {"type": "Class", "desc": "A type-safe enumeration of possible orientations.", "name": "PageAttributes.OrientationRequestedType", "link": "PageAttributes.OrientationRequestedType"}, {"type": "Class", "desc": "A type-safe enumeration of possible origins.", "name": "PageAttributes.OriginType", "link": "PageAttributes.OriginType"}, {"type": "Class", "desc": "A type-safe enumeration of possible print qualities.", "name": "PageAttributes.PrintQualityType", "link": "PageAttributes.PrintQualityType"}, {"type": "Class", "name": "Panel", "link": "Panel"}, {"type": "Class", "name": "Point", "link": "Point"}, {"type": "Class", "desc": "A class that describes the pointer position.", "name": "PointerInfo", "link": "PointerInfo"}, {"type": "Class", "name": "Polygon", "link": "Polygon"}, {"type": "Class", "desc": "A class that implements a menu which can be dynamically popped up at a specified position within a component.", "name": "PopupMenu", "link": "PopupMenu"}, {"type": "Class", "desc": "An abstract class which initiates and executes a print job.", "name": "PrintJob", "link": "PrintJob"}, {"type": "Class", "name": "RadialGradientPaint", "link": "RadialGradientPaint"}, {"type": "Class", "name": "Rectangle", "link": "Rectangle"}, {"type": "Class", "name": "RenderingHints", "link": "RenderingHints"}, {"type": "Class", "name": "RenderingHints.Key", "link": "RenderingHints.Key"}, {"type": "Class", "desc": "This class is used to generate native system input events for the purposes of test automation, self-running demos, and other applications where control of the mouse and keyboard is needed.", "name": "Robot", "link": "Robot"}, {"type": "Class", "name": "Scrollbar", "link": "Scrollbar"}, {"type": "Class", "desc": "A container class which implements automatic horizontal and/or vertical scrolling for a single child component.", "name": "ScrollPane", "link": "ScrollPane"}, {"type": "Class", "name": "ScrollPaneAdjustable", "link": "ScrollPaneAdjustable"}, {"type": "Class", "desc": "The splash screen can be displayed at application startup, before the Java Virtual Machine (JVM) starts.", "name": "SplashScreen", "link": "SplashScreen"}, {"type": "Class", "desc": "A class to encapsulate symbolic colors representing the color of native GUI objects on a system.", "name": "SystemColor", "link": "SystemColor"}, {"type": "Class", "name": "SystemTray", "link": "SystemTray"}, {"type": "Class", "name": "TextArea", "link": "TextArea"}, {"type": "Class", "name": "TextComponent", "link": "TextComponent"}, {"type": "Class", "name": "TextField", "link": "TextField"}, {"type": "Class", "name": "TexturePaint", "link": "TexturePaint"}, {"type": "Class", "desc": "This class is the abstract superclass of all actual implementations of the Abstract Window Toolkit.", "name": "Toolkit", "link": "Toolkit"}, {"type": "Class", "name": "TrayIcon", "link": "TrayIcon"}, {"type": "Class", "name": "Window", "link": "Window"}, {"type": "Enum", "desc": "Enumeration of the common ways the baseline of a component can change as the size changes.", "name": "Component.BaselineResizeBehavior", "link": "Component.BaselineResizeBehavior"}, {"type": "Enum", "desc": "Represents an action type.", "name": "Desktop.Action", "link": "Desktop.Action"}, {"type": "Enum", "desc": "Any top-level window can be marked not to be blocked by modal dialogs.", "name": "Dialog.ModalExclusionType", "link": "Dialog.ModalExclusionType"}, {"type": "Enum", "desc": "Modal dialogs block all input to some top-level windows.", "name": "Dialog.ModalityType", "link": "Dialog.ModalityType"}, {"type": "Enum", "desc": "Kinds of translucency supported by the underlying system.", "name": "GraphicsDevice.WindowTranslucency", "link": "GraphicsDevice.WindowTranslucency"}, {"type": "Enum", "desc": "The color space in which to perform the gradient interpolation.", "name": "MultipleGradientPaint.ColorSpaceType", "link": "MultipleGradientPaint.ColorSpaceType"}, {"type": "Enum", "desc": "The method to use when painting outside the gradient bounds.", "name": "MultipleGradientPaint.CycleMethod", "link": "MultipleGradientPaint.CycleMethod"}, {"type": "Enum", "desc": "The message type determines which icon will be displayed in the caption of the message, and a possible system sound a message may generate upon showing.", "name": "TrayIcon.MessageType", "link": "TrayIcon.MessageType"}, {"type": "Enum", "name": "Window.Type", "link": "Window.Type"}, {"type": "Exception", "desc": "Signals that an Abstract Window Toolkit exception has occurred.", "name": "AWTException", "link": "AWTException"}, {"type": "Exception", "name": "FontFormatException", "link": "FontFormatException"}, {"type": "Exception", "desc": "Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse.", "name": "HeadlessException", "link": "HeadlessException"}, {"type": "Exception", "desc": "Signals that an AWT component is not in an appropriate state for the requested operation.", "name": "IllegalComponentStateException", "link": "IllegalComponentStateException"}, {"type": "Error", "desc": "Thrown when a serious Abstract Window Toolkit error has occurred.", "name": "AWTError", "link": "AWTError"}], "desc": "Contains all of the classes for creating user interfaces and for painting graphics and images. A user interface object such as a button or a scrollbar is called, in AWT terminology, a component. The Component class is the root of all AWT components. See Component for a detailed description of properties that all AWT components share. Some components fire events when a user interacts with the components. The AWTEvent class and its subclasses are used to represent the events that AWT components can fire. See AWTEvent for a description of the AWT event model. A container is a component that can contain components and other containers. A con tainer can also have a layout manager that controls the visual placement of components in the container. The AWT package contains several layout manager classes and an interface for building your own layout manager. See Container and LayoutManager for more information. Each Component object is limited in its maximum size and its location because the values are stored as an integer. Also, a platform may further restrict maximum size and location coordinates. The exact maximum values are dependent on the platform. There is no way to change these maximum values, either in Java code or in native code. These limitations also impose restrictions on component layout. If the bounds of a Component object exceed a platform limit, there is no way to properly arrange them within a Container object. The object's bounds are defined by any object's coordinate in combination with its size on a respective axis.  Additional Specification The AWT Focus Subsystem The AWT Modality "}