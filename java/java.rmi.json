{"entries": [{"type": "Interface", "name": "Remote", "link": "Remote"}, {"type": "Class", "name": null, "link": "MarshalledObject"}, {"type": "Class", "name": "Naming", "link": "Naming"}, {"type": "Class", "name": "RMISecurityManager", "link": "RMISecurityManager"}, {"type": "Exception", "name": "AccessException", "link": "AccessException"}, {"type": "Exception", "name": "AlreadyBoundException", "link": "AlreadyBoundException"}, {"type": "Exception", "name": "ConnectException", "link": "ConnectException"}, {"type": "Exception", "name": "ConnectIOException", "link": "ConnectIOException"}, {"type": "Exception", "name": "MarshalException", "link": "MarshalException"}, {"type": "Exception", "name": "NoSuchObjectException", "link": "NoSuchObjectException"}, {"type": "Exception", "name": "NotBoundException", "link": "NotBoundException"}, {"type": "Exception", "name": "RemoteException", "link": "RemoteException"}, {"type": "Exception", "name": "RMISecurityException", "link": "RMISecurityException"}, {"type": "Exception", "name": "ServerError", "link": "ServerError"}, {"type": "Exception", "name": "ServerException", "link": "ServerException"}, {"type": "Exception", "desc": "no replacement", "name": "ServerRuntimeException", "link": "ServerRuntimeException"}, {"type": "Exception", "name": "StubNotFoundException", "link": "StubNotFoundException"}, {"type": "Exception", "name": "UnexpectedException", "link": "UnexpectedException"}, {"type": "Exception", "name": "UnknownHostException", "link": "UnknownHostException"}, {"type": "Exception", "name": "UnmarshalException", "link": "UnmarshalException"}], "desc": "Provides the RMI package. RMI is Remote Method Invocation. It is a mechanism that enables an object on one Java virtual machine to invoke methods on an object in another Java virtual machine. Any object that can be invoked this way must implement the Remote interface. When such an object is invoked, its arguments are ``marshalled'' and sent from the local virtual machine to the remote one, where the arguments are ``unmarshalled.'' When the method terminates, the results are marshalled from the remote machine and sent to the caller's virtual machine. If the method invocation results in an exception being thrown, the exception is indicated to caller. "}