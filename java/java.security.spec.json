{"entries": [{"type": "Interface", "desc": "A (transparent) specification of cryptographic parameters.", "name": "AlgorithmParameterSpec", "link": "AlgorithmParameterSpec"}, {"type": "Interface", "desc": "This interface represents an elliptic curve (EC) finite field.", "name": "ECField", "link": "ECField"}, {"type": "Interface", "desc": "A (transparent) specification of the key material that constitutes a cryptographic key.", "name": "KeySpec", "link": "KeySpec"}, {"type": "Class", "name": "DSAGenParameterSpec", "link": "DSAGenParameterSpec"}, {"type": "Class", "desc": "This class specifies the set of parameters used with the DSA algorithm.", "name": "DSAParameterSpec", "link": "DSAParameterSpec"}, {"type": "Class", "desc": "This class specifies a DSA private key with its associated parameters.", "name": "DSAPrivateKeySpec", "link": "DSAPrivateKeySpec"}, {"type": "Class", "desc": "This class specifies a DSA public key with its associated parameters.", "name": "DSAPublicKeySpec", "link": "DSAPublicKeySpec"}, {"type": "Class", "desc": "This immutable class defines an elliptic curve (EC) characteristic 2 finite field.", "name": "ECFieldF2m", "link": "ECFieldF2m"}, {"type": "Class", "desc": "This immutable class defines an elliptic curve (EC) prime finite field.", "name": "ECFieldFp", "link": "ECFieldFp"}, {"type": "Class", "desc": "This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters.", "name": "ECGenParameterSpec", "link": "ECGenParameterSpec"}, {"type": "Class", "desc": "This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC).", "name": "ECParameterSpec", "link": "ECParameterSpec"}, {"type": "Class", "desc": "This immutable class represents a point on an elliptic curve (EC) in affine coordinates.", "name": "ECPoint", "link": "ECPoint"}, {"type": "Class", "desc": "This immutable class specifies an elliptic curve private key with its associated parameters.", "name": "ECPrivateKeySpec", "link": "ECPrivateKeySpec"}, {"type": "Class", "desc": "This immutable class specifies an elliptic curve public key with its associated parameters.", "name": "ECPublicKeySpec", "link": "ECPublicKeySpec"}, {"type": "Class", "desc": "This immutable class holds the necessary values needed to represent an elliptic curve.", "name": "EllipticCurve", "link": "EllipticCurve"}, {"type": "Class", "desc": "This class represents a public or private key in encoded format.", "name": "EncodedKeySpec", "link": "EncodedKeySpec"}, {"type": "Class", "name": "MGF1ParameterSpec", "link": "MGF1ParameterSpec"}, {"type": "Class", "name": "PKCS8EncodedKeySpec", "link": "PKCS8EncodedKeySpec"}, {"type": "Class", "name": "PSSParameterSpec", "link": "PSSParameterSpec"}, {"type": "Class", "desc": "This class specifies the set of parameters used to generate an RSA key pair.", "name": "RSAKeyGenParameterSpec", "link": "RSAKeyGenParameterSpec"}, {"type": "Class", "desc": "This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency.", "name": "RSAMultiPrimePrivateCrtKeySpec", "link": "RSAMultiPrimePrivateCrtKeySpec"}, {"type": "Class", "desc": "This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1.", "name": "RSAOtherPrimeInfo", "link": "RSAOtherPrimeInfo"}, {"type": "Class", "desc": "This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.", "name": "RSAPrivateCrtKeySpec", "link": "RSAPrivateCrtKeySpec"}, {"type": "Class", "desc": "This class specifies an RSA private key.", "name": "RSAPrivateKeySpec", "link": "RSAPrivateKeySpec"}, {"type": "Class", "desc": "This class specifies an RSA public key.", "name": "RSAPublicKeySpec", "link": "RSAPublicKeySpec"}, {"type": "Class", "name": "X509EncodedKeySpec", "link": "X509EncodedKeySpec"}, {"type": "Exception", "desc": "This is the exception for invalid key specifications.", "name": "InvalidKeySpecException", "link": "InvalidKeySpecException"}, {"type": "Exception", "desc": "This is the exception for invalid parameter specifications.", "name": "InvalidParameterSpecException", "link": "InvalidParameterSpecException"}], "desc": "Provides classes and interfaces for key specifications and algorithm parameter specifications.  A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for DSA public and private keys, RSA public and private keys, PKCS #8 private keys in DER-encoded format, and X.509 public and private keys in DER-encoded format.  An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains an algorithm parameter specification for parameters used with the DSA algorithm.  Package Specification PKCS #1: RSA Encryption Standard, Version 1.5, November 1993 PKCS #8: Private-Key Information Syntax Standard,   Version 1.2, November 1993 Federal Information Processing Standards Publication (FIPS PUB) 186:   Digital Signature Standard (DSS) Related Documentation  For documentation that includes information about algorithm parameter and key specifications, please see:   Java\u2122    Cryptography Architecture API Specification and Reference      How to Implement a Provider for the    Java\u2122 Cryptography Architecture     "}