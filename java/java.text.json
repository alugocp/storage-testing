{"entries": [{"type": "Interface", "name": "AttributedCharacterIterator", "link": "AttributedCharacterIterator"}, {"type": "Interface", "desc": "This interface defines a protocol for bidirectional iteration over text.", "name": "CharacterIterator", "link": "CharacterIterator"}, {"type": "Class", "desc": "An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics.", "name": "Annotation", "link": "Annotation"}, {"type": "Class", "desc": "Defines attribute keys that are used to identify text attributes.", "name": "AttributedCharacterIterator.Attribute", "link": "AttributedCharacterIterator.Attribute"}, {"type": "Class", "desc": "An AttributedString holds text and related attribute information.", "name": "AttributedString", "link": "AttributedString"}, {"type": "Class", "desc": "This class implements the Unicode Bidirectional Algorithm.", "name": "Bidi", "link": "Bidi"}, {"type": "Class", "name": "BreakIterator", "link": "BreakIterator"}, {"type": "Class", "name": "ChoiceFormat", "link": "ChoiceFormat"}, {"type": "Class", "name": "CollationElementIterator", "link": "CollationElementIterator"}, {"type": "Class", "name": "CollationKey", "link": "CollationKey"}, {"type": "Class", "name": "Collator", "link": "Collator"}, {"type": "Class", "name": "DateFormat", "link": "DateFormat"}, {"type": "Class", "name": "DateFormat.Field", "link": "DateFormat.Field"}, {"type": "Class", "name": "DateFormatSymbols", "link": "DateFormatSymbols"}, {"type": "Class", "name": "DecimalFormat", "link": "DecimalFormat"}, {"type": "Class", "name": "DecimalFormatSymbols", "link": "DecimalFormatSymbols"}, {"type": "Class", "name": "FieldPosition", "link": "FieldPosition"}, {"type": "Class", "name": "Format", "link": "Format"}, {"type": "Class", "name": "Format.Field", "link": "Format.Field"}, {"type": "Class", "name": "MessageFormat", "link": "MessageFormat"}, {"type": "Class", "name": "MessageFormat.Field", "link": "MessageFormat.Field"}, {"type": "Class", "name": "Normalizer", "link": "Normalizer"}, {"type": "Class", "name": "NumberFormat", "link": "NumberFormat"}, {"type": "Class", "name": "NumberFormat.Field", "link": "NumberFormat.Field"}, {"type": "Class", "name": "ParsePosition", "link": "ParsePosition"}, {"type": "Class", "name": "RuleBasedCollator", "link": "RuleBasedCollator"}, {"type": "Class", "name": "SimpleDateFormat", "link": "SimpleDateFormat"}, {"type": "Class", "name": "StringCharacterIterator", "link": "StringCharacterIterator"}, {"type": "Enum", "name": "Normalizer.Form", "link": "Normalizer.Form"}, {"type": "Exception", "desc": "Signals that an error has been reached unexpectedly while parsing.", "name": "ParseException", "link": "ParseException"}], "desc": "Provides classes and interfaces for handling text, dates, numbers, and messages in a manner independent of natural languages. This means your main application or applet can be written to be language-independent, and it can rely upon separate, dynamically-linked localized resources. This allows the flexibility of adding localizations for new localizations at any time. These classes are capable of formatting dates, numbers, and messages, parsing; searching and sorting strings; and iterating over characters, words, sentences, and line breaks. This package contains three main groups of classes and interfaces: Classes for iteration over text Classes for formatting and parsing Classes for string collation "}