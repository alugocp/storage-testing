{"entries": [{"desc": "Returns the absolute value of x. (integer/float)", "name": "math.abs (x)", "type": "function"}, {"desc": "Returns the arc cosine of x (in radians).", "name": "math.acos (x)", "type": "function"}, {"desc": "Returns the arc sine of x (in radians).", "name": "math.asin (x)", "type": "function"}, {"desc": "Returns the arc tangent of y/x (in radians), but uses the signs of both arguments to find the quadrant of the result. (It also handles correctly the case of x being zero.) The default value for x is 1, so that the call math.atan(y) returns the arc tangent of y.", "name": "math.atan (y [, x])", "type": "function"}, {"desc": "Returns the smallest integral value larger than or equal to x.", "name": "math.ceil (x)", "type": "function"}, {"desc": "Returns the cosine of x (assumed to be in radians).", "name": "math.cos (x)", "type": "function"}, {"desc": "Converts the angle x from radians to degrees.", "name": "math.deg (x)", "type": "function"}, {"desc": "Returns the value ex (where e is the base of natural logarithms).", "name": "math.exp (x)", "type": "function"}, {"desc": "Returns the largest integral value smaller than or equal to x.", "name": "math.floor (x)", "type": "function"}, {"desc": "Returns the remainder of the division of x by y that rounds the quotient towards zero. (integer/float)", "name": "math.fmod (x, y)", "type": "function"}, {"desc": "The float value HUGE_VAL, a value larger than any other numeric value.", "name": "math.huge", "type": "variable"}, {"desc": "Returns the logarithm of x in the given base. The default for base is e (so that the function returns the natural logarithm of x).", "name": "math.log (x [, base])", "type": "function"}, {"desc": "Returns the argument with the maximum value, according to the Lua operator <. (integer/float)", "name": "math.max (x, \u00b7\u00b7\u00b7)", "type": "function"}, {"name": "math.maxinteger", "type": "variable"}, {"desc": "Returns the argument with the minimum value, according to the Lua operator <. (integer/float)", "name": "math.min (x, \u00b7\u00b7\u00b7)", "type": "function"}, {"name": "math.mininteger", "type": "variable"}, {"desc": "Returns the integral part of x and the fractional part of x. Its second result is always a float.", "name": "math.modf (x)", "type": "function"}, {"desc": "The value of \u03c0.", "name": "math.pi", "type": "variable"}, {"desc": "Converts the angle x from degrees to radians.", "name": "math.rad (x)", "type": "function"}, {"desc": "When called without arguments, returns a pseudo-random float with uniform distribution in the range [0,1). When called with two integers m and n, math.random returns a pseudo-random integer with uniform distribution in the range [m, n]. (The value n-m cannot be negative and must fit in a Lua integer.) The call math.random(n) is equivalent to math.random(1,n). This function is an interface to the underling pseudo-random generator function provided by C.", "name": "math.random ([m [, n]])", "type": "function"}, {"desc": "Sets x as the \"seed\" for the pseudo-random generator: equal seeds produce equal sequences of numbers.", "name": "math.randomseed (x)", "type": "function"}, {"desc": "Returns the sine of x (assumed to be in radians).", "name": "math.sin (x)", "type": "function"}, {"desc": "Returns the square root of x. (You can also use the expression x^0.5 to compute this value.)", "name": "math.sqrt (x)", "type": "function"}, {"desc": "Returns the tangent of x (assumed to be in radians).", "name": "math.tan (x)", "type": "function"}, {"desc": "If the value x is convertible to an integer, returns that integer. Otherwise, returns nil.", "name": "math.tointeger (x)", "type": "function"}, {"desc": "Returns \"integer\" if x is an integer, \"float\" if it is a float, or nil if x is not a number.", "name": "math.type (x)", "type": "function"}, {"desc": "Returns a boolean, true if and only if integer m is below integer n when they are compared as unsigned integers.", "name": "math.ult (m, n)", "type": "function"}]}