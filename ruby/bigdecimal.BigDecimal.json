{"entries": [{"type": "constant", "name": "BASE", "desc": "Base value used in internal calculations.  On a 32 bit system, BASE is 10000, indicating that calculation\nis done in groups of 4 digits. (If it were larger, BASE**2 wouldn't fit\nin 32 bits, so you couldn't guarantee that two groups could always be\nmultiplied together without overflow.)"}, {"type": "constant", "name": "EXCEPTION_ALL", "desc": "Determines whether overflow, underflow or zero divide result in an\nexception being thrown. See ::mode."}, {"type": "constant", "name": "EXCEPTION_INFINITY", "desc": "Determines what happens when the result of a computation is infinity.  See\n::mode."}, {"type": "constant", "name": "EXCEPTION_NaN", "desc": "Determines what happens when the result of a computation is not a number\n(NaN). See ::mode."}, {"type": "constant", "name": "EXCEPTION_OVERFLOW", "desc": "Determines what happens when the result of a computation is an overflow (a\nresult too large to be represented). See ::mode."}, {"type": "constant", "name": "EXCEPTION_UNDERFLOW", "desc": "Determines what happens when the result of a computation is an underflow (a\nresult too small to be represented). See ::mode."}, {"type": "constant", "name": "EXCEPTION_ZERODIVIDE", "desc": "Determines what happens when a division by zero is performed. See ::mode."}, {"type": "constant", "name": "INFINITY", "desc": "Positive infinity value."}, {"type": "constant", "name": "NAN", "desc": "'Not a Number' value."}, {"type": "constant", "name": "ROUND_CEILING", "desc": "Round towards +Infinity. See ::mode."}, {"type": "constant", "name": "ROUND_DOWN", "desc": "Indicates that values should be rounded towards zero. See ::mode."}, {"type": "constant", "name": "ROUND_FLOOR", "desc": "Round towards -Infinity. See ::mode."}, {"type": "constant", "name": "ROUND_HALF_DOWN", "desc": "Indicates that digits >= 6 should be rounded up, others rounded down.\nSee ::mode."}, {"type": "constant", "name": "ROUND_HALF_EVEN", "desc": "Round towards the even neighbor. See ::mode."}, {"type": "constant", "name": "ROUND_HALF_UP", "desc": "Indicates that digits >= 5 should be rounded up, others rounded down.\nSee ::mode."}, {"type": "constant", "name": "ROUND_MODE", "desc": "Determines what happens when a result must be rounded in order to fit in\nthe appropriate number of significant digits. See ::mode."}, {"type": "constant", "name": "ROUND_UP", "desc": "Indicates that values should be rounded away from zero. See ::mode."}, {"type": "constant", "name": "SIGN_NEGATIVE_FINITE", "desc": "Indicates that a value is negative and finite. See #sign."}, {"type": "constant", "name": "SIGN_NEGATIVE_INFINITE", "desc": "Indicates that a value is negative and infinite. See #sign."}, {"type": "constant", "name": "SIGN_NEGATIVE_ZERO", "desc": "Indicates that a value is -0. See #sign."}, {"type": "constant", "name": "SIGN_NaN", "desc": "Indicates that a value is not a number. See #sign."}, {"type": "constant", "name": "SIGN_POSITIVE_FINITE", "desc": "Indicates that a value is positive and finite. See #sign."}, {"type": "constant", "name": "SIGN_POSITIVE_INFINITE", "desc": "Indicates that a value is positive and infinite. See #sign."}, {"type": "constant", "name": "SIGN_POSITIVE_ZERO", "desc": "Indicates that a value is +0. See #sign."}, {"type": "constant", "name": "VERSION", "desc": "The version of bigdecimal library"}, {"type": "public class method", "name": "_load(p1)", "desc": "Internal method used to provide marshalling support. See the Marshal module."}, {"type": "public class method", "name": "double_figclick to toggle source", "desc": "The ::double_fig class method returns the number of digits a Float number is allowed to have. The result depends upon the CPU and OS in use."}, {"type": "public class method", "name": "interpret_loosely(p1)", "desc": ""}, {"type": "public class method", "name": "limit(digits)click to toggle source", "desc": "Limit the number of significant digits in newly created BigDecimal numbers to the specified value. Rounding is performed as necessary, as specified by ::mode."}, {"type": "public class method", "name": "mode(mode, value)click to toggle source", "desc": "Controls handling of arithmetic exceptions and rounding. If no value is supplied, the current value is returned."}, {"type": "public class method", "name": "save_exception_mode { ... }click to toggle source", "desc": "Execute the provided block, but preserve the exception mode"}, {"type": "public class method", "name": "save_limit { ... }click to toggle source", "desc": "Execute the provided block, but preserve the precision limit"}, {"type": "public class method", "name": "save_rounding_mode { ... }click to toggle source", "desc": "Execute the provided block, but preserve the rounding mode"}, {"type": "public instance method", "name": "a % bclick to toggle source", "desc": "Returns the modulus from dividing by b."}, {"type": "public instance method", "name": "mult(value, digits)click to toggle source", "desc": "Multiply by the specified value."}, {"type": "public instance method", "name": "a ** n  \u2192 bigdecimalclick to toggle source", "desc": "Returns the value raised to the power of n."}, {"type": "public instance method", "name": "add(value, digits)click to toggle source", "desc": "Add the specified value."}, {"type": "public instance method", "name": "+big_decimal  \u2192  big_decimalclick to toggle source", "desc": "Return self."}, {"type": "public instance method", "name": "a - b   \u2192 bigdecimalclick to toggle source", "desc": "Subtract the specified value."}, {"type": "public instance method", "name": "-big_decimal  \u2192  big_decimalclick to toggle source", "desc": "Return the negation of self."}, {"type": "public instance method", "name": "a / b       \u2192 bigdecimalclick to toggle source", "desc": "Divide by the specified value."}, {"type": "public instance method", "name": "a < bclick to toggle source", "desc": "Returns true if a is less than b."}, {"type": "public instance method", "name": "a <= bclick to toggle source", "desc": "Returns true if a is less than or equal to b."}, {"type": "public instance method", "name": "<=>(p1)", "desc": "The comparison operator. a <=> b is 0 if a == b, 1 if a > b, -1 if a < b."}, {"type": "public instance method", "name": "==(p1)", "desc": "Tests for value equality; returns true if the values are equal."}, {"type": "public instance method", "name": "===(p1)", "desc": "Tests for value equality; returns true if the values are equal."}, {"type": "public instance method", "name": "a > bclick to toggle source", "desc": "Returns true if a is greater than b."}, {"type": "public instance method", "name": "a >= bclick to toggle source", "desc": "Returns true if a is greater than or equal to b."}, {"type": "public instance method", "name": "_dumpclick to toggle source", "desc": "Method used to provide marshalling support."}, {"type": "public instance method", "name": "abs  \u2192  big_decimalclick to toggle source", "desc": "Returns the absolute value, as a BigDecimal."}, {"type": "public instance method", "name": "add(value, digits)click to toggle source", "desc": "Add the specified value."}, {"type": "public instance method", "name": "ceil(n)click to toggle source", "desc": "Return the smallest integer greater than or equal to the value, as a BigDecimal."}, {"type": "public instance method", "name": "clone()", "desc": ""}, {"type": "public instance method", "name": "coerce(p1)", "desc": "The coerce method provides support for Ruby type coercion. It is not enabled by default."}, {"type": "public instance method", "name": "div(value, digits)  \u2192 bigdecimal or integerclick to toggle source", "desc": "Divide by the specified value."}, {"type": "public instance method", "name": "divmod(value)click to toggle source", "desc": "Divides by the specified value, and returns the quotient and modulus as BigDecimal numbers. The quotient is rounded towards negative infinity."}, {"type": "public instance method", "name": "dup()", "desc": ""}, {"type": "public instance method", "name": "eql?(p1)", "desc": "Tests for value equality; returns true if the values are equal."}, {"type": "public instance method", "name": "exponent()", "desc": "Returns the exponent of the BigDecimal number, as an Integer."}, {"type": "public instance method", "name": "finite?()", "desc": "Returns True if the value is finite (not NaN or infinite)."}, {"type": "public instance method", "name": "fix()", "desc": "Return the integer part of the number, as a BigDecimal."}, {"type": "public instance method", "name": "floor(n)click to toggle source", "desc": "Return the largest integer less than or equal to the value, as a BigDecimal."}, {"type": "public instance method", "name": "frac()", "desc": "Return the fractional part of the number, as a BigDecimal."}, {"type": "public instance method", "name": "hashclick to toggle source", "desc": "Creates a hash for this BigDecimal."}, {"type": "public instance method", "name": "infinite?()", "desc": "Returns nil, -1, or +1 depending on whether the value is finite, -Infinity, or +Infinity."}, {"type": "public instance method", "name": "inspect()", "desc": "Returns a string representation of self."}, {"type": "public instance method", "name": "modulo(b)click to toggle source", "desc": "Returns the modulus from dividing by b."}, {"type": "public instance method", "name": "mult(value, digits)click to toggle source", "desc": "Multiply by the specified value."}, {"type": "public instance method", "name": "nan?()", "desc": "Returns True if the value is Not a Number."}, {"type": "public instance method", "name": "nonzero?()", "desc": "Returns self if the value is non-zero, nil otherwise."}, {"type": "public instance method", "name": "power(n)click to toggle source", "desc": ""}, {"type": "public instance method", "name": "precs  \u2192  arrayclick to toggle source", "desc": "Returns an Array of two Integer values."}, {"type": "public instance method", "name": "quo(value)  \u2192 bigdecimalclick to toggle source", "desc": "Divide by the specified value."}, {"type": "public instance method", "name": "remainder(value)click to toggle source", "desc": "Returns the remainder from dividing by the value."}, {"type": "public instance method", "name": "round(n, mode)click to toggle source", "desc": "Round to the nearest integer (by default), returning the result as a BigDecimal if n is specified, or as an Integer if it isn't."}, {"type": "public instance method", "name": "sign()", "desc": "Returns the sign of the value."}, {"type": "public instance method", "name": "split()", "desc": "Splits a BigDecimal number into four parts, returned as an array of values."}, {"type": "public instance method", "name": "sqrt(n)click to toggle source", "desc": "Returns the square root of the value."}, {"type": "public instance method", "name": "sub(value, digits)  \u2192 bigdecimalclick to toggle source", "desc": "Subtract the specified value."}, {"type": "public instance method", "name": "to_d \u2192 bigdecimalclick to toggle source", "desc": "Returns self."}, {"type": "public instance method", "name": "to_digits \u2192 stringclick to toggle source", "desc": "Converts a BigDecimal to a String of the form \u201cnnnnnn.mmm\u201d. This method is deprecated; use #to_s(\u201cF\u201d) instead."}, {"type": "public instance method", "name": "to_f()", "desc": "Returns a new Float object having approximately the same value as the BigDecimal number. Normal accuracy limits and built-in errors of binary Float arithmetic apply."}, {"type": "public instance method", "name": "to_i()", "desc": "Returns the value as an Integer."}, {"type": "public instance method", "name": "to_int()", "desc": "Returns the value as an Integer."}, {"type": "public instance method", "name": "to_r()", "desc": "Converts a BigDecimal to a Rational."}, {"type": "public instance method", "name": "to_s(s)click to toggle source", "desc": "Converts the value to a string."}, {"type": "public instance method", "name": "truncate(n)click to toggle source", "desc": "Truncate to the nearest integer (by default), returning the result as a BigDecimal."}, {"type": "public instance method", "name": "zero?()", "desc": "Returns True if the value is zero."}]}