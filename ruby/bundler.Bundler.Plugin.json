{"entries": [{"type": "constant", "name": "PLUGIN_FILE_NAME", "desc": ""}, {"type": "public instance method", "name": "add_command(command, cls)", "desc": "To be called via the API to register to handle a command"}, {"type": "public instance method", "name": "add_hook(event, &block)", "desc": "To be called via the API to register a hooks and corresponding block that will be called to handle the hook"}, {"type": "public instance method", "name": "add_source(source, cls)", "desc": "To be called via the API to register to handle a source plugin"}, {"type": "public instance method", "name": "cache()", "desc": "The cache directory for plugin stuffs"}, {"type": "public instance method", "name": "command?(command)", "desc": "Checks if any plugin handles the command"}, {"type": "public instance method", "name": "exec_command(command, args)", "desc": "To be called from Cli class to pass the command and argument to approriate plugin class"}, {"type": "public instance method", "name": "gemfile_install(gemfile = nil, &inline)", "desc": "Evaluates the Gemfile with a limited DSL and installs the plugins specified by plugin method"}, {"type": "public instance method", "name": "global_root()", "desc": "The global directory root for all plugin related data"}, {"type": "public instance method", "name": "hook(event, *args, &arg_blk)", "desc": "Runs all the hooks that are registered for the passed event"}, {"type": "public instance method", "name": "index()", "desc": "The index object used to store the details about the plugin"}, {"type": "public instance method", "name": "install(names, options)", "desc": "Installs a new plugin by the given name"}, {"type": "public instance method", "name": "installed?(plugin)", "desc": "currently only intended for specs"}, {"type": "public instance method", "name": "list()", "desc": "List installed plugins and commands"}, {"type": "public instance method", "name": "load_plugin(name)", "desc": "Executes the plugins.rb file"}, {"type": "public instance method", "name": "local_root()", "desc": ""}, {"type": "public instance method", "name": "register_plugin(name, spec, optional_plugin = false)", "desc": "Runs the plugins.rb file in an isolated namespace, records the plugin actions it registers for and then passes the data to index to be stored."}, {"type": "public instance method", "name": "reset!()", "desc": ""}, {"type": "public instance method", "name": "root()", "desc": "The directory root for all plugin related data"}, {"type": "public instance method", "name": "save_plugins(plugins, specs, optional_plugins = [])", "desc": "Post installation processing and registering with index"}, {"type": "public instance method", "name": "source(name)", "desc": "@return [Class] that handles the source. The calss includes API::Source"}, {"type": "public instance method", "name": "source?(name)", "desc": "Checks if any plugin declares the source"}, {"type": "public instance method", "name": "source_from_lock(locked_opts)", "desc": "@param [Hash] The options that are present in the lock file @return [API::Source] the instance of the class that handles the source"}, {"type": "public instance method", "name": "validate_plugin!(plugin_path)", "desc": "Checks if the gem is good to be a plugin"}]}