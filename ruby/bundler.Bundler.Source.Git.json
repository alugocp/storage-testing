{"entries": [{"type": "attribute", "name": "branch", "desc": " "}, {"type": "attribute", "name": "glob", "desc": " "}, {"type": "attribute", "name": "options", "desc": " "}, {"type": "attribute", "name": "ref", "desc": " "}, {"type": "attribute", "name": "submodules", "desc": " "}, {"type": "attribute", "name": "uri", "desc": " "}, {"type": "public class method", "name": "from_lock(options)", "desc": ""}, {"type": "public class method", "name": "new(options)", "desc": ""}, {"type": "public instance method", "name": "==(other)", "desc": ""}, {"type": "public instance method", "name": "allow_git_ops?()", "desc": ""}, {"type": "public instance method", "name": "app_cache_dirname()", "desc": ""}, {"type": "public instance method", "name": "cache(spec, custom_path = nil)", "desc": ""}, {"type": "public instance method", "name": "cache_path()", "desc": "This is the path which is going to contain a cache of the git repository. When using the same git repository across different projects, this cache will be shared. When using local git repos, this is set to the local repo."}, {"type": "public instance method", "name": "eql?(other)", "desc": ""}, {"type": "public instance method", "name": "extension_dir_name()", "desc": ""}, {"type": "public instance method", "name": "hash()", "desc": ""}, {"type": "public instance method", "name": "install(spec, options = {})", "desc": ""}, {"type": "public instance method", "name": "install_path()", "desc": "This is the path which is going to contain a specific checkout of the git repository. When using local git repos, this is set to the local repo."}, {"type": "public instance method", "name": "load_spec_files()", "desc": ""}, {"type": "public instance method", "name": "local_override!(path)", "desc": ""}, {"type": "public instance method", "name": "name()", "desc": ""}, {"type": "public instance method", "name": "path()", "desc": ""}, {"type": "public instance method", "name": "revision()", "desc": ""}, {"type": "public instance method", "name": "specs(*)", "desc": ""}, {"type": "public instance method", "name": "to_lock()", "desc": ""}, {"type": "public instance method", "name": "to_s()", "desc": ""}, {"type": "public instance method", "name": "unlock!()", "desc": ""}, {"type": "alias", "name": "==(other)", "desc": "             Alias for: eql? "}, {"type": "alias", "name": "path()", "desc": "             Alias for: install_path "}]}