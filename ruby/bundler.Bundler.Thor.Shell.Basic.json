{"entries": [{"type": "constant", "name": "DEFAULT_TERMINAL_WIDTH", "desc": ""}, {"type": "attribute", "name": "base", "desc": " "}, {"type": "attribute", "name": "padding", "desc": " "}, {"type": "public instance method", "name": "ask(statement, *args)", "desc": "Asks something to the user and receives a response."}, {"type": "public instance method", "name": "error(statement)", "desc": "Called if something goes wrong during the execution. This is used by Bundler::Thor internally and should not be used inside your scripts. If something went wrong, you can always raise an exception. If you raise a Bundler::Thor::Error, it will be rescued and wrapped in the method below."}, {"type": "public instance method", "name": "file_collision(destination)", "desc": "Deals with file collision and returns true if the file should be overwritten and false otherwise. If a block is given, it uses the block response as the content for the diff."}, {"type": "public instance method", "name": "indent(count = 1)", "desc": "Sets the output padding while executing a block and resets it."}, {"type": "public instance method", "name": "mute()", "desc": "Mute everything that's inside given block"}, {"type": "public instance method", "name": "mute?()", "desc": "Check if base is muted"}, {"type": "public instance method", "name": "no?(statement, color = nil)", "desc": "Make a question the to user and returns true if the user replies \u201cn\u201d or \u201cno\u201d."}, {"type": "public instance method", "name": "padding=(value)", "desc": "Sets the output padding, not allowing less than zero values."}, {"type": "public instance method", "name": "print_in_columns(array)", "desc": "Prints values in columns"}, {"type": "public instance method", "name": "print_table(array, options = {})", "desc": "Prints a table."}, {"type": "public instance method", "name": "print_wrapped(message, options = {})", "desc": "Prints a long string, word-wrapping the text to the current width of the terminal display. Ideal for printing heredocs."}, {"type": "public instance method", "name": "say(message = \"\", color = nil, force_new_line = (message.to_s !~ /( |\\t)\\Z/))", "desc": "Say (print) something to the user. If the sentence ends with a whitespace or tab character, a new line is not appended (print + flush). Otherwise are passed straight to puts (behavior got from Highline)."}, {"type": "public instance method", "name": "say_status(status, message, log_status = true)", "desc": "Say a status with the given color and appends the message. Since this method is used frequently by actions, it allows nil or false to be given in log_status, avoiding the message from being shown. If a Symbol is given in log_status, it's used as the color."}, {"type": "public instance method", "name": "terminal_width()", "desc": "This code was copied from Rake, available under MIT-LICENSE Copyright \u00a9 2003, 2004 Jim Weirich"}, {"type": "public instance method", "name": "yes?(statement, color = nil)", "desc": "Make a question the to user and returns true if the user replies \u201cy\u201d or \u201cyes\u201d."}]}