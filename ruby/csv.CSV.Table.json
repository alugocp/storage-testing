{"entries": [{"type": "attribute", "name": "mode", "desc": " The current access mode for indexing and iteration. "}, {"type": "attribute", "name": "table", "desc": " Internal data format used to compare equality. "}, {"type": "public class method", "name": "new(array_of_rows, headers: nil)", "desc": "Constructs a new CSV::Table from array_of_rows, which are expected to be CSV::Row objects. All rows are assumed to have the same headers."}, {"type": "public instance method", "name": "<<(row_or_array)", "desc": "Adds a new row to the bottom end of this table. You can provide an Array, which will be converted to a CSV::Row (inheriting the table's headers()), or a CSV::Row."}, {"type": "public instance method", "name": "==(other)", "desc": "Returns true if all rows of this table ==() other's rows."}, {"type": "public instance method", "name": "[](index_or_header)", "desc": "In the default mixed mode, this method returns rows for index access and columns for header access. You can force the index association by first calling #by_col!() or #by_row!()."}, {"type": "public instance method", "name": "[]=(index_or_header, value)", "desc": "In the default mixed mode, this method assigns rows for index access and columns for header access. You can force the index association by first calling #by_col!() or #by_row!()."}, {"type": "public instance method", "name": "by_col()", "desc": "Returns a duplicate table object, in column mode. This is handy for chaining in a single call without changing the table mode, but be aware that this method can consume a fair amount of memory for bigger data sets."}, {"type": "public instance method", "name": "by_col!()", "desc": "Switches the mode of this table to column mode. All calls to indexing and iteration methods will work with columns until the mode is changed again."}, {"type": "public instance method", "name": "by_col_or_row()", "desc": "Returns a duplicate table object, in mixed mode. This is handy for chaining in a single call without changing the table mode, but be aware that this method can consume a fair amount of memory for bigger data sets."}, {"type": "public instance method", "name": "by_col_or_row!()", "desc": "Switches the mode of this table to mixed mode. All calls to indexing and iteration methods will use the default intelligent indexing system until the mode is changed again. In mixed mode an index is assumed to be a row reference while anything else is assumed to be column access by headers."}, {"type": "public instance method", "name": "by_row()", "desc": "Returns a duplicate table object, in row mode.  This is handy for chaining in a single call without changing the table mode, but be aware that this method can consume a fair amount of memory for bigger data sets."}, {"type": "public instance method", "name": "by_row!()", "desc": "Switches the mode of this table to row mode. All calls to indexing and iteration methods will work with rows until the mode is changed again."}, {"type": "public instance method", "name": "delete(*indexes_or_headers)", "desc": "Removes and returns the indicated columns or rows. In the default mixed mode indices refer to rows and everything else is assumed to be a column headers. Use #by_col!() or #by_row!() to force the lookup."}, {"type": "public instance method", "name": "delete_if(&block)", "desc": "Removes any column or row for which the block returns true. In the default mixed mode or row mode, iteration is the standard row major walking of rows. In column mode, iteration will yield two element tuples containing the column name and an Array of values for that column."}, {"type": "public instance method", "name": "dig(index_or_header, *index_or_headers)", "desc": "Extracts the nested value specified by the sequence of index or header objects by calling dig at each step, returning nil if any intermediate step is nil."}, {"type": "public instance method", "name": "each(&block)", "desc": "In the default mixed mode or row mode, iteration is the standard row major walking of rows. In column mode, iteration will yield two element tuples containing the column name and an Array of values for that column."}, {"type": "public instance method", "name": "headers()", "desc": "Returns the headers for the first row of this table (assumed to match all other rows). The headers Array passed to ::new is returned for empty tables."}, {"type": "public instance method", "name": "inspect()", "desc": "Shows the mode and size of this table in a US-ASCII String."}, {"type": "public instance method", "name": "push(*rows)", "desc": "A shortcut for appending multiple rows. Equivalent to:"}, {"type": "public instance method", "name": "to_a()", "desc": "Returns the table as an Array of Arrays. Headers will be the first row, then all of the field rows will follow."}, {"type": "public instance method", "name": "to_csv(write_headers: true, **options)", "desc": "Returns the table as a complete CSV String. Headers will be listed first, then all of the field rows."}, {"type": "public instance method", "name": "to_s(write_headers: true, **options)", "desc": ""}, {"type": "public instance method", "name": "values_at(*indices_or_headers)", "desc": "The mixed mode default is to treat a list of indices as row access, returning the rows indicated. Anything else is considered columnar access. For columnar access, the return set has an Array for each row with the values indicated by the headers in each Array. You can force column or row mode using #by_col!() or #by_row!()."}, {"type": "alias", "name": "to_s(write_headers: true, **options)", "desc": "             Alias for: to_csv "}]}