{"entries": [{"type": "attribute", "name": "primary_server", "desc": " The primary local dRuby server. This is the server created by the start_service call. "}, {"type": "public class method", "name": "config()", "desc": "Get the configuration of the current server."}, {"type": "public class method", "name": "current_server()", "desc": "Get the 'current' server."}, {"type": "public class method", "name": "fetch_server(uri)", "desc": "Retrieves the server with the given uri."}, {"type": "public class method", "name": "front()", "desc": "Get the front object of the current server."}, {"type": "public class method", "name": "here?(uri)", "desc": "Is uri the URI for the current local server?"}, {"type": "public class method", "name": "install_acl(acl)", "desc": "Set the default ACL to acl."}, {"type": "public class method", "name": "install_id_conv(idconv)", "desc": "Set the default id conversion object."}, {"type": "public class method", "name": "regist_server(server)", "desc": "Registers server with DRb."}, {"type": "public class method", "name": "remove_server(server)", "desc": "Removes server from the list of registered servers."}, {"type": "public class method", "name": "start_service(uri=nil, front=nil, config=nil)", "desc": "Start a dRuby server locally."}, {"type": "public class method", "name": "stop_service()", "desc": "Stop the local dRuby server."}, {"type": "public class method", "name": "thread()", "desc": "Get the thread of the primary server."}, {"type": "public class method", "name": "to_id(obj)", "desc": "Get a reference id for an object using the current server."}, {"type": "public class method", "name": "to_obj(ref)", "desc": "Convert a reference into an object using the current server."}, {"type": "public class method", "name": "uri()", "desc": "Get the URI defining the local dRuby space."}]}