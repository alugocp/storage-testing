{"entries": [{"type": "constant", "name": "Group", "desc": "Group\nGroup is a Struct\nthat is only available when compiled with HAVE_GETGRENT.\nThe struct contains the following members:\nname\n\ncontains the name of the group as a String.\npasswd\n\ncontains the encrypted password as a String. An 'x' is returned if\npassword access to the group is not available; an empty string is returned\nif no password is needed to obtain membership of the group.\nMust be compiled with HAVE_STRUCT_GROUP_GR_PASSWD.\ngid\n\ncontains the group's numeric ID as an integer.\nmem\n\nis an Array of Strings containing the short login names of the members of\nthe group.\n"}, {"type": "constant", "name": "name\n\ncontains the name of the group as a String.\npasswd\n\ncontains the encrypted password as a String. An 'x' is returned if\npassword access to the group is not available; an empty string is returned\nif no password is needed to obtain membership of the group.\nMust be compiled with HAVE_STRUCT_GROUP_GR_PASSWD.\ngid\n\ncontains the group's numeric ID as an integer.\nmem\n\nis an Array of Strings containing the short login names of the members of\nthe group.\n", "desc": ""}, {"type": "constant", "name": "passwd\n\ncontains the encrypted password as a String. An 'x' is returned if\npassword access to the group is not available; an empty string is returned\nif no password is needed to obtain membership of the group.\nMust be compiled with HAVE_STRUCT_GROUP_GR_PASSWD.\ngid\n\ncontains the group's numeric ID as an integer.\nmem\n\nis an Array of Strings containing the short login names of the members of\nthe group.\n", "desc": ""}, {"type": "constant", "name": "gid\n\ncontains the group's numeric ID as an integer.\nmem\n\nis an Array of Strings containing the short login names of the members of\nthe group.\n", "desc": ""}, {"type": "constant", "name": "mem\n\nis an Array of Strings containing the short login names of the members of\nthe group.\n", "desc": ""}, {"type": "constant", "name": "Passwd", "desc": "Passwd\nPasswd is a Struct\nthat contains the following members:\nname\n\ncontains the short login name of the user as a String.\npasswd\n\ncontains the encrypted password of the user as a String. an 'x' is\nreturned if shadow passwords are in use. An '*' is returned if the\nuser cannot log in using a password.\nuid\n\ncontains the integer user ID (uid) of the user.\ngid\n\ncontains the integer group ID (gid) of the user's primary group.\ndir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n\nThe following members below are optional, and must be compiled with special flags:\u00b6 \u2191\ngecos\n\ncontains a longer String description of the user, such as a full name. Some\nUnix systems provide structured information in the gecos field, but this is\nsystem-dependent. must be compiled with\nHAVE_STRUCT_PASSWD_PW_GECOS\nchange\n\npassword change time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CHANGE\nquota\n\nquota value(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_QUOTA\nage\n\npassword age(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_AGE\nclass\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n"}, {"type": "constant", "name": "name\n\ncontains the short login name of the user as a String.\npasswd\n\ncontains the encrypted password of the user as a String. an 'x' is\nreturned if shadow passwords are in use. An '*' is returned if the\nuser cannot log in using a password.\nuid\n\ncontains the integer user ID (uid) of the user.\ngid\n\ncontains the integer group ID (gid) of the user's primary group.\ndir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "passwd\n\ncontains the encrypted password of the user as a String. an 'x' is\nreturned if shadow passwords are in use. An '*' is returned if the\nuser cannot log in using a password.\nuid\n\ncontains the integer user ID (uid) of the user.\ngid\n\ncontains the integer group ID (gid) of the user's primary group.\ndir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "uid\n\ncontains the integer user ID (uid) of the user.\ngid\n\ncontains the integer group ID (gid) of the user's primary group.\ndir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "gid\n\ncontains the integer group ID (gid) of the user's primary group.\ndir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "dir\n\ncontains the path to the home directory of the user as a String.\nshell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "shell\n\ncontains the path to the login shell of the user as a String.\n", "desc": ""}, {"type": "constant", "name": "gecos\n\ncontains a longer String description of the user, such as a full name. Some\nUnix systems provide structured information in the gecos field, but this is\nsystem-dependent. must be compiled with\nHAVE_STRUCT_PASSWD_PW_GECOS\nchange\n\npassword change time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CHANGE\nquota\n\nquota value(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_QUOTA\nage\n\npassword age(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_AGE\nclass\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "change\n\npassword change time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CHANGE\nquota\n\nquota value(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_QUOTA\nage\n\npassword age(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_AGE\nclass\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "quota\n\nquota value(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_QUOTA\nage\n\npassword age(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_AGE\nclass\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "age\n\npassword age(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_AGE\nclass\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "class\n\nuser access class(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_CLASS\ncomment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "comment\n\ncomment(string) must be compiled with\nHAVE_STRUCT_PASSWD_PW_COMMENT\nexpire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "expire\n\naccount expiration time(integer) must be compiled with\nHAVE_STRUCT_PASSWD_PW_EXPIRE\n", "desc": ""}, {"type": "constant", "name": "VERSION", "desc": ""}, {"type": "public class method", "name": "confstr(p1)", "desc": "Returns system configuration variable using confstr()."}, {"type": "public class method", "name": "endgrent()", "desc": "Ends the process of scanning through the /etc/group file begun by ::getgrent, and closes the file."}, {"type": "public class method", "name": "endpwent()", "desc": "Ends the process of scanning through the /etc/passwd file begun with ::getpwent, and closes the file."}, {"type": "public class method", "name": "getgrent()", "desc": "Returns an entry from the /etc/group file."}, {"type": "public class method", "name": "getgrgid(group_id)  \u2192       Groupclick to toggle source", "desc": "Returns information about the group with specified integer group_id, as found in /etc/group."}, {"type": "public class method", "name": "getgrnam(name)       \u2192  Groupclick to toggle source", "desc": "Returns information about the group with specified name, as found in /etc/group."}, {"type": "public class method", "name": "getlogin     \u2192  Stringclick to toggle source", "desc": "Returns the short user name of the currently logged in user. Unfortunately, it is often rather easy to fool ::getlogin."}, {"type": "public class method", "name": "getpwent()", "desc": "Returns an entry from the /etc/passwd file."}, {"type": "public class method", "name": "getpwnam(name)       \u2192  Passwdclick to toggle source", "desc": "Returns the /etc/passwd information for the user with specified login name."}, {"type": "public class method", "name": "getpwuid(uid)        \u2192  Passwdclick to toggle source", "desc": "Returns the /etc/passwd information for the user with the given integer uid."}, {"type": "public class method", "name": "group()", "desc": "Provides a convenient Ruby iterator which executes a block for each entry in the /etc/group file."}, {"type": "public class method", "name": "nprocessors()", "desc": "Returns the number of online processors."}, {"type": "public class method", "name": "passwd { |struct| block }        \u2192  Passwdclick to toggle source", "desc": ""}, {"type": "public class method", "name": "setgrent()", "desc": "Resets the process of reading the /etc/group file, so that the next call to ::getgrent will return the first entry again."}, {"type": "public class method", "name": "setpwent()", "desc": "Resets the process of reading the /etc/passwd file, so that the next call to ::getpwent will return the first entry again."}, {"type": "public class method", "name": "sysconf(p1)", "desc": "Returns system configuration variable using sysconf()."}, {"type": "public class method", "name": "sysconfdir()", "desc": "Returns system configuration directory."}, {"type": "public class method", "name": "systmpdir()", "desc": "Returns system temporary directory; typically \u201c/tmp\u201d."}, {"type": "public class method", "name": "uname()", "desc": "Returns the system information obtained by uname system call."}]}