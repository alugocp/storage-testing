{"entries": [{"type": "constant", "name": "FORWARDABLE_VERSION", "desc": ""}, {"type": "constant", "name": "VERSION", "desc": "Version of forwardable.rb"}, {"type": "attribute", "name": "debug", "desc": " ignored "}, {"type": "public instance method", "name": "def_delegator(accessor, method, ali = method)", "desc": ""}, {"type": "public instance method", "name": "def_delegators(accessor, *methods)", "desc": ""}, {"type": "public instance method", "name": "def_instance_delegator(accessor, method, ali = method)", "desc": "Define method as delegator instance method with an optional alias name ali. Method calls to ali will be delegated to accessor.method.  accessor should be a method name, instance variable name, or constant name.  Use the full path to the constant if providing the constant name. Returns the name of the method defined."}, {"type": "public instance method", "name": "def_instance_delegators(accessor, *methods)", "desc": "Shortcut for defining multiple delegator methods, but with no provision for using a different name.  The following two code samples have the same effect:"}, {"type": "public instance method", "name": "delegate(hash)", "desc": ""}, {"type": "public instance method", "name": "delegate method => accessorclick to toggle source", "desc": ""}, {"type": "alias", "name": "def_delegator(accessor, method, ali = method)", "desc": "             Alias for: def_instance_delegator "}, {"type": "alias", "name": "def_delegators(accessor, *methods)", "desc": "             Alias for: def_instance_delegators "}, {"type": "alias", "name": "delegate(hash)", "desc": "             Alias for: instance_delegate "}]}