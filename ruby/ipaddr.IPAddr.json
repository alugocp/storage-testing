{"entries": [{"type": "constant", "name": "IN4MASK", "desc": "32 bit mask for IPv4"}, {"type": "constant", "name": "IN6FORMAT", "desc": "Format string for IPv6"}, {"type": "constant", "name": "IN6MASK", "desc": "128 bit mask for IPv6"}, {"type": "constant", "name": "RE_IPV4ADDRLIKE", "desc": "Regexp internally used for parsing IPv4 address."}, {"type": "constant", "name": "RE_IPV6ADDRLIKE_COMPRESSED", "desc": "Regexp internally used for parsing IPv6 address."}, {"type": "constant", "name": "RE_IPV6ADDRLIKE_FULL", "desc": "Regexp internally used for parsing IPv6 address."}, {"type": "attribute", "name": "family", "desc": " Returns the address family of this IP address. "}, {"type": "public class method", "name": "new(addr = '::', family = Socket::AF_UNSPEC)", "desc": "Creates a new ipaddr object either from a human readable IP address representation in string, or from a packed in_addr value followed by an address family."}, {"type": "public class method", "name": "new_ntoh(addr)", "desc": "Creates a new ipaddr containing the given network byte ordered string form of an IP address."}, {"type": "public class method", "name": "ntop(addr)", "desc": "Convert a network byte ordered string form of an IP address into human readable form."}, {"type": "public instance method", "name": "&(other)", "desc": "Returns a new ipaddr built by bitwise AND."}, {"type": "public instance method", "name": "<<(num)", "desc": "Returns a new ipaddr built by bitwise left shift."}, {"type": "public instance method", "name": "<=>(other)", "desc": "Compares the ipaddr with another."}, {"type": "public instance method", "name": "==(other)", "desc": "Returns true if two ipaddrs are equal."}, {"type": "public instance method", "name": "===(other)", "desc": ""}, {"type": "public instance method", "name": ">>(num)", "desc": "Returns a new ipaddr built by bitwise right-shift."}, {"type": "public instance method", "name": "eql?(other)", "desc": "Checks equality used by Hash."}, {"type": "public instance method", "name": "hash()", "desc": "Returns a hash value used by Hash, Set, and Array classes"}, {"type": "public instance method", "name": "hton()", "desc": "Returns a network byte ordered string form of the IP address."}, {"type": "public instance method", "name": "include?(other)", "desc": "Returns true if the given ipaddr is in the range."}, {"type": "public instance method", "name": "inspect()", "desc": "Returns a string containing a human-readable representation of the ipaddr. (\u201c#<IPAddr: family:address/mask>\u201d)"}, {"type": "public instance method", "name": "ip6_arpa()", "desc": "Returns a string for DNS reverse lookup compatible with RFC3172."}, {"type": "public instance method", "name": "ip6_int()", "desc": "Returns a string for DNS reverse lookup compatible with RFC1886."}, {"type": "public instance method", "name": "ipv4?()", "desc": "Returns true if the ipaddr is an IPv4 address."}, {"type": "public instance method", "name": "ipv4_compat()", "desc": "Returns a new ipaddr built by converting the native IPv4 address into an IPv4-compatible IPv6 address."}, {"type": "public instance method", "name": "ipv4_compat?()", "desc": "Returns true if the ipaddr is an IPv4-compatible IPv6 address."}, {"type": "public instance method", "name": "ipv4_mapped()", "desc": "Returns a new ipaddr built by converting the native IPv4 address into an IPv4-mapped IPv6 address."}, {"type": "public instance method", "name": "ipv4_mapped?()", "desc": "Returns true if the ipaddr is an IPv4-mapped IPv6 address."}, {"type": "public instance method", "name": "ipv6?()", "desc": "Returns true if the ipaddr is an IPv6 address."}, {"type": "public instance method", "name": "link_local?()", "desc": "Returns true if the ipaddr is a link-local address.  IPv4 addresses in 169.254.0.0/16 reserved by RFC 3927 and Link-Local IPv6 Unicast Addresses in fe80::/10 reserved by RFC 4291 are considered link-local."}, {"type": "public instance method", "name": "loopback?()", "desc": "Returns true if the ipaddr is a loopback address."}, {"type": "public instance method", "name": "mask(prefixlen)", "desc": "Returns a new ipaddr built by masking IP address with the given prefixlen/netmask. (e.g. 8, 64, \u201c255.255.255.0\u201d, etc.)"}, {"type": "public instance method", "name": "native()", "desc": "Returns a new ipaddr built by converting the IPv6 address into a native IPv4 address.  If the IP address is not an IPv4-mapped or IPv4-compatible IPv6 address, returns self."}, {"type": "public instance method", "name": "prefix()", "desc": "Returns the prefix length in bits for the ipaddr."}, {"type": "public instance method", "name": "prefix=(prefix)", "desc": "Sets the prefix length in bits"}, {"type": "public instance method", "name": "private?()", "desc": "Returns true if the ipaddr is a private address.  IPv4 addresses in 10.0.0.0/8, 172.16.0.0/12 and 192.168.0.0/16 as defined in RFC 1918 and IPv6 Unique Local Addresses in fc00::/7 as defined in RFC 4193 are considered private."}, {"type": "public instance method", "name": "reverse()", "desc": "Returns a string for DNS reverse lookup.  It returns a string in RFC3172 form for an IPv6 address."}, {"type": "public instance method", "name": "succ()", "desc": "Returns the successor to the ipaddr."}, {"type": "public instance method", "name": "to_i()", "desc": "Returns the integer representation of the ipaddr."}, {"type": "public instance method", "name": "to_range()", "desc": "Creates a Range object for the network address."}, {"type": "public instance method", "name": "to_s()", "desc": "Returns a string containing the IP address representation."}, {"type": "public instance method", "name": "to_string()", "desc": "Returns a string containing the IP address representation in canonical form."}, {"type": "public instance method", "name": "|(other)", "desc": "Returns a new ipaddr built by bitwise OR."}, {"type": "public instance method", "name": "~()", "desc": "Returns a new ipaddr built by bitwise negation."}, {"type": "alias", "name": "===(other)", "desc": "             Alias for: include? "}]}