{"entries": [{"type": "constant", "name": "ALL", "desc": "A constant of all-bit 1 to match any Ripper's state in dispatch_seq"}, {"type": "constant", "name": "BLUE", "desc": ""}, {"type": "constant", "name": "BOLD", "desc": ""}, {"type": "constant", "name": "CLEAR", "desc": ""}, {"type": "constant", "name": "CYAN", "desc": ""}, {"type": "constant", "name": "GREEN", "desc": ""}, {"type": "constant", "name": "MAGENTA", "desc": ""}, {"type": "constant", "name": "RED", "desc": ""}, {"type": "constant", "name": "REVERSE", "desc": ""}, {"type": "constant", "name": "TOKEN_KEYWORDS", "desc": ""}, {"type": "constant", "name": "TOKEN_SEQ_EXPRS", "desc": "Following pry's colors where possible, but sometimes having a\ncompromise like making backtick and regexp as red (string's color,\nbecause they're sharing tokens)."}, {"type": "constant", "name": "UNDERLINE", "desc": ""}, {"type": "constant", "name": "YELLOW", "desc": ""}, {"type": "public class method", "name": "clear()", "desc": ""}, {"type": "public class method", "name": "colorable?()", "desc": ""}, {"type": "public class method", "name": "colorize(text, seq)", "desc": ""}, {"type": "public class method", "name": "colorize_code(code, complete: true)", "desc": "If `complete` is false (code is incomplete), this does not warn compile_error. This option is needed to avoid warning a user when the compile_error is happening because the input is not wrong but just incomplete."}, {"type": "public class method", "name": "inspect_colorable?(obj, seen: {}.compare_by_identity)", "desc": ""}]}