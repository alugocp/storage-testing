{"entries": [{"type": "attribute", "name": "ap_name", "desc": " A copy of the default IRB.conf[:AP_NAME] "}, {"type": "attribute", "name": "auto_indent_mode", "desc": " Can be either the default IRB.conf[:AUTO_INDENT], or the mode set by prompt_mode= To disable auto-indentation in irb: IRB.conf[:AUTO_INDENT] = false  or irb_context.auto_indent_mode = false  or IRB.CurrentContext.auto_indent_mode = false  See Configuration at IRB for more information. "}, {"type": "attribute", "name": "back_trace_limit", "desc": " The limit of backtrace lines displayed as top n and tail n. The default value is 16. Can also be set using the --back-trace-limit command line option. See Command line options at IRB for more command line options. "}, {"type": "attribute", "name": "echo", "desc": " Whether to echo the return value to output or not. Uses IRB.conf if available, or defaults to true. puts \"hello\" # hello #=> nil IRB.CurrentContext.echo = false puts \"omg\" # omg  "}, {"type": "attribute", "name": "echo?", "desc": " Whether to echo the return value to output or not. Uses IRB.conf if available, or defaults to true. puts \"hello\" # hello #=> nil IRB.CurrentContext.echo = false puts \"omg\" # omg  "}, {"type": "attribute", "name": "echo_on_assignment", "desc": " Whether to echo for assignment expressions Uses IRB.conf if available, or defaults to false. a = \"omg\" IRB.CurrentContext.echo_on_assignment = true a = \"omg\" #=> omg  "}, {"type": "attribute", "name": "echo_on_assignment?", "desc": " Whether to echo for assignment expressions Uses IRB.conf if available, or defaults to false. a = \"omg\" IRB.CurrentContext.echo_on_assignment = true a = \"omg\" #=> omg  "}, {"type": "attribute", "name": "eval_history", "desc": " The command result history limit. This method is not available until eval_history= was called with non-nil value (directly or via setting IRB.conf[:EVAL_HISTORY] in .irbrc). "}, {"type": "attribute", "name": "ignore_eof", "desc": " Whether ^D (control-d) will be ignored or not. If set to false, ^D will quit irb. "}, {"type": "attribute", "name": "ignore_eof?", "desc": " Whether ^D (control-d) will be ignored or not. If set to false, ^D will quit irb. "}, {"type": "attribute", "name": "ignore_sigint", "desc": " Whether ^C (control-c) will be ignored or not. If set to false, ^C will quit irb. If set to true,  during input:   cancel input then return to top level.  during execute: abandon current execution.  "}, {"type": "attribute", "name": "ignore_sigint?", "desc": " Whether ^C (control-c) will be ignored or not. If set to false, ^C will quit irb. If set to true,  during input:   cancel input then return to top level.  during execute: abandon current execution.  "}, {"type": "attribute", "name": "inspect_mode", "desc": " A copy of the default IRB.conf[:INSPECT_MODE] "}, {"type": "attribute", "name": "io", "desc": " The current input method Can be either StdioInputMethod, ReadlineInputMethod, ReidlineInputMethod, FileInputMethod or other specified when the context is created. See ::new for more # information on input_method. "}, {"type": "attribute", "name": "irb", "desc": " Current irb session "}, {"type": "attribute", "name": "irb_name", "desc": " Can be either name from IRB.conf[:IRB_NAME], or the number of the current job set by JobManager, such as irb#2 "}, {"type": "attribute", "name": "irb_path", "desc": " Can be either the irb_name surrounded by parenthesis, or the input_method passed to ::new "}, {"type": "attribute", "name": "last_value", "desc": " The return value of the last statement evaluated. "}, {"type": "attribute", "name": "load_modules", "desc": " A copy of the default IRB.conf[:LOAD_MODULES] "}, {"type": "attribute", "name": "newline_before_multiline_output", "desc": " Whether a newline is put before multiline output. Uses IRB.conf if available, or defaults to true. \"abc\\ndef\" #=> abc def IRB.CurrentContext.newline_before_multiline_output = false \"abc\\ndef\" #=> abc def "}, {"type": "attribute", "name": "newline_before_multiline_output?", "desc": " Whether a newline is put before multiline output. Uses IRB.conf if available, or defaults to true. \"abc\\ndef\" #=> abc def IRB.CurrentContext.newline_before_multiline_output = false \"abc\\ndef\" #=> abc def "}, {"type": "attribute", "name": "prompt_c", "desc": " IRB prompt for continuated statement (e.g. immediately after an if) See IRB for more information. "}, {"type": "attribute", "name": "prompt_i", "desc": " Standard IRB prompt See IRB for more information. "}, {"type": "attribute", "name": "prompt_mode", "desc": " A copy of the default IRB.conf[:PROMPT_MODE] "}, {"type": "attribute", "name": "prompt_n", "desc": " See Customizing the IRB Prompt at IRB for more information. "}, {"type": "attribute", "name": "prompt_s", "desc": " IRB prompt for continuated strings See IRB for more information. "}, {"type": "attribute", "name": "rc", "desc": " A copy of the default IRB.conf[:RC] "}, {"type": "attribute", "name": "rc?", "desc": " A copy of the default IRB.conf[:RC] "}, {"type": "attribute", "name": "return_format", "desc": " The format of the return statement, set by prompt_mode= using the :RETURN of the mode passed to set the current prompt_mode. "}, {"type": "attribute", "name": "thread", "desc": " The current thread in this context "}, {"type": "attribute", "name": "use_colorize", "desc": " Whether colorization is enabled or not. A copy of the default IRB.conf[:USE_COLORIZE] "}, {"type": "attribute", "name": "use_colorize?", "desc": " Whether colorization is enabled or not. A copy of the default IRB.conf[:USE_COLORIZE] "}, {"type": "attribute", "name": "use_multiline", "desc": " Whether multiline editor mode is enabled or not. A copy of the default IRB.conf[:USE_MULTILINE] "}, {"type": "attribute", "name": "use_multiline?", "desc": " Whether multiline editor mode is enabled or not. A copy of the default IRB.conf[:USE_MULTILINE] "}, {"type": "attribute", "name": "use_readline", "desc": " Whether singleline editor mode is enabled or not. A copy of the default IRB.conf[:USE_SINGLELINE] "}, {"type": "attribute", "name": "use_readline?", "desc": " Whether singleline editor mode is enabled or not. A copy of the default IRB.conf[:USE_SINGLELINE] "}, {"type": "attribute", "name": "use_reidline", "desc": " Whether multiline editor mode is enabled or not. A copy of the default IRB.conf[:USE_MULTILINE] "}, {"type": "attribute", "name": "use_reidline?", "desc": " Whether multiline editor mode is enabled or not. A copy of the default IRB.conf[:USE_MULTILINE] "}, {"type": "attribute", "name": "use_singleline", "desc": " Whether singleline editor mode is enabled or not. A copy of the default IRB.conf[:USE_SINGLELINE] "}, {"type": "attribute", "name": "use_singleline?", "desc": " Whether singleline editor mode is enabled or not. A copy of the default IRB.conf[:USE_SINGLELINE] "}, {"type": "attribute", "name": "use_tracer", "desc": " Whether Tracer is used when evaluating statements in this context. See lib/tracer.rb for more information. "}, {"type": "attribute", "name": "use_tracer?", "desc": " Whether Tracer is used when evaluating statements in this context. See lib/tracer.rb for more information. "}, {"type": "attribute", "name": "verbose", "desc": " Whether verbose messages are displayed or not. A copy of the default IRB.conf[:VERBOSE] "}, {"type": "attribute", "name": "workspace", "desc": " WorkSpace in the current context "}, {"type": "attribute", "name": "workspace_home", "desc": " The toplevel workspace, see home_workspace "}, {"type": "public class method", "name": "new(irb, workspace = nil, input_method = nil)", "desc": "Creates a new IRB context."}, {"type": "public instance method", "name": "__exit__(ret = 0)", "desc": ""}, {"type": "public instance method", "name": "_set_last_value(value)", "desc": "See set_last_value"}, {"type": "public instance method", "name": "change_workspace(*_main)", "desc": "Changes the current workspace to given object or binding."}, {"type": "public instance method", "name": "eval_history=(no)", "desc": "Sets command result history limit. Default value is set from IRB.conf[:EVAL_HISTORY]."}, {"type": "public instance method", "name": "exit(ret = 0)", "desc": "Exits the current session, see IRB.irb_exit"}, {"type": "public instance method", "name": "file_input?()", "desc": "Whether io uses a File for the input_method passed when creating the current context, see ::new"}, {"type": "public instance method", "name": "history_file()", "desc": "A copy of the default IRB.conf[:HISTORY_FILE]"}, {"type": "public instance method", "name": "history_file=(hist)", "desc": "Set IRB.conf[:HISTORY_FILE] to the given hist."}, {"type": "public instance method", "name": "home_workspace()", "desc": "Inherited from TOPLEVEL_BINDING."}, {"type": "public instance method", "name": "inspect?()", "desc": "Whether inspect_mode is set or not, see inspect_mode= for more detail."}, {"type": "public instance method", "name": "inspect_mode=(opt)", "desc": "Specifies the inspect mode with opt:"}, {"type": "public instance method", "name": "irb_level()", "desc": "Size of the current WorkSpace stack"}, {"type": "public instance method", "name": "main()", "desc": "The top-level workspace, see IRB::WorkSpace#main"}, {"type": "public instance method", "name": "pop_workspace()", "desc": "Removes the last element from the current workspaces stack and returns it, or nil if the current workspace stack is empty."}, {"type": "public instance method", "name": "prompt_mode=(mode)", "desc": "Sets the mode of the prompt in this context."}, {"type": "public instance method", "name": "prompting?()", "desc": "Whether verbose? is true, and input_method is either StdioInputMethod or ReidlineInputMethod or ReadlineInputMethod, see io for more information."}, {"type": "public instance method", "name": "push_workspace(*_main)", "desc": "Creates a new workspace with the given object or binding, and appends it onto the current workspaces stack."}, {"type": "public instance method", "name": "save_history()", "desc": "A copy of the default IRB.conf[:SAVE_HISTORY]"}, {"type": "public instance method", "name": "save_history=(val)", "desc": "Sets IRB.conf[:SAVE_HISTORY] to the given val and calls init_save_history with this context."}, {"type": "public instance method", "name": "set_last_value(value)", "desc": "Sets the return value from the last statement evaluated in this context to last_value."}, {"type": "public instance method", "name": "use_loader()", "desc": "Returns whether irb's own file reader method is used by load/require or not."}, {"type": "public instance method", "name": "use_loader=(opt)", "desc": "Sets IRB.conf"}, {"type": "public instance method", "name": "use_loader?()", "desc": ""}, {"type": "public instance method", "name": "use_tracer=(opt)", "desc": ""}, {"type": "public instance method", "name": "verbose?()", "desc": "Returns whether messages are displayed or not."}, {"type": "public instance method", "name": "workspaces()", "desc": "WorkSpaces in the current stack"}, {"type": "alias", "name": "__exit__(ret = 0)", "desc": "             Alias for: exit "}, {"type": "alias", "name": "_set_last_value(value)", "desc": "             Alias for: set_last_value "}, {"type": "alias", "name": "use_loader?()", "desc": "             Alias for: use_loader "}]}