{"entries": [{"type": "constant", "name": "INSPECTORS", "desc": "Default inspectors available to irb, this includes:\n:pp\n\nUsing Kernel#pretty_inspect\n:yaml\n\nUsing YAML.dump\n:marshal\n\nUsing Marshal.dump\n"}, {"type": "constant", "name": ":pp\n\nUsing Kernel#pretty_inspect\n:yaml\n\nUsing YAML.dump\n:marshal\n\nUsing Marshal.dump\n", "desc": ""}, {"type": "constant", "name": ":yaml\n\nUsing YAML.dump\n:marshal\n\nUsing Marshal.dump\n", "desc": ""}, {"type": "constant", "name": ":marshal\n\nUsing Marshal.dump\n", "desc": ""}, {"type": "public class method", "name": "def_inspector(key, arg=nil, &block)", "desc": "Example"}, {"type": "public class method", "name": "keys_with_inspector(inspector)", "desc": "Determines the inspector to use where inspector is one of the keys passed during inspector definition."}, {"type": "public class method", "name": "new(inspect_proc, init_proc = nil)", "desc": "Creates a new inspector object, using the given inspect_proc when output return values in irb."}, {"type": "public instance method", "name": "init()", "desc": "Proc to call when the inspector is activated, good for requiring dependent libraries."}, {"type": "public instance method", "name": "inspect_value(v)", "desc": "Proc to call when the input is evaluated and output in irb."}]}