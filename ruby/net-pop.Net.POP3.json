{"entries": [{"type": "constant", "name": "Revision", "desc": "svn revision of this library"}, {"type": "constant", "name": "VERSION", "desc": ""}, {"type": "attribute", "name": "address", "desc": " The address to connect to. "}, {"type": "attribute", "name": "open_timeout", "desc": " Seconds to wait until a connection is opened. If the POP3 object cannot open a connection within this time, it raises a Net::OpenTimeout exception. The default value is 30 seconds. "}, {"type": "attribute", "name": "read_timeout", "desc": " Seconds to wait until reading one block (by one read(1) call). If the POP3 object cannot complete a read() within this time, it raises a Net::ReadTimeout exception. The default value is 60 seconds. "}, {"type": "public class method", "name": "APOP(isapop)", "desc": "Returns the APOP class if isapop is true; otherwise, returns the POP class.  For example:"}, {"type": "public class method", "name": "auth_only(address, port = nil, account = nil, password = nil, isapop = false)", "desc": "Opens a POP3 session, attempts authentication, and quits."}, {"type": "public class method", "name": "certs()", "desc": "returns the :ca_file or :ca_path from ::ssl_params"}, {"type": "public class method", "name": "create_ssl_params(verify_or_params = {}, certs = nil)", "desc": "Constructs proper parameters from arguments"}, {"type": "public class method", "name": "default_pop3_port()", "desc": "The default port for POP3 connections, port 110"}, {"type": "public class method", "name": "default_pop3s_port()", "desc": "The default port for POP3S connections, port 995"}, {"type": "public class method", "name": "default_port()", "desc": "returns the port for POP3"}, {"type": "public class method", "name": "delete_all(address, port = nil, account = nil, password = nil, isapop = false, &block)", "desc": "Starts a POP3 session and deletes all messages on the server. If a block is given, each POPMail object is yielded to it before being deleted."}, {"type": "public class method", "name": "disable_ssl()", "desc": "Disable SSL for all new instances."}, {"type": "public class method", "name": "Net::POP.enable_ssl(params = {})click to toggle source", "desc": "Enable SSL for all new instances. params is passed to OpenSSL::SSLContext#set_params."}, {"type": "public class method", "name": "foreach(address, port = nil, account = nil, password = nil, isapop = false)", "desc": "Starts a POP3 session and iterates over each POPMail object, yielding it to the block. This method is equivalent to:"}, {"type": "public class method", "name": "new(addr, port = nil, isapop = false)", "desc": "Creates a new POP3 object."}, {"type": "public class method", "name": "ssl_params()", "desc": "returns the SSL Parameters"}, {"type": "public class method", "name": "start(address, port = nil, account = nil, password = nil, isapop = false)", "desc": "Creates a new POP3 object and open the connection.  Equivalent to"}, {"type": "public class method", "name": "use_ssl?()", "desc": "returns true if ::ssl_params is set"}, {"type": "public class method", "name": "verify()", "desc": "returns whether verify_mode is enable from ::ssl_params"}, {"type": "public instance method", "name": "active?()", "desc": ""}, {"type": "public instance method", "name": "apop?()", "desc": "Does this instance use APOP authentication?"}, {"type": "public instance method", "name": "auth_only(account, password)", "desc": "Starts a pop3 session, attempts authentication, and quits. This method must not be called while POP3 session is opened. This method raises POPAuthenticationError if authentication fails."}, {"type": "public instance method", "name": "delete_all()", "desc": "Deletes all messages on the server."}, {"type": "public instance method", "name": "disable_ssl()", "desc": "Disable SSL for all new instances."}, {"type": "public instance method", "name": "each()", "desc": ""}, {"type": "public instance method", "name": "each_mail()", "desc": "Yields each message to the passed-in block in turn. Equivalent to:"}, {"type": "public instance method", "name": "Net::POP#enable_ssl(params = {})click to toggle source", "desc": "Enables SSL for this instance.  Must be called before the connection is established to have any effect. +params+ is port to establish the SSL connection on; Defaults to 995. params (except :port) is passed to OpenSSL::SSLContext#set_params."}, {"type": "public instance method", "name": "finish()", "desc": "Finishes a POP3 session and closes TCP connection."}, {"type": "public instance method", "name": "inspect()", "desc": "Provide human-readable stringification of class state."}, {"type": "public instance method", "name": "logging(msg)", "desc": "debugging output for msg"}, {"type": "public instance method", "name": "mails()", "desc": "Returns an array of Net::POPMail objects, representing all the messages on the server.  This array is renewed when the session restarts; otherwise, it is fetched from the server the first time this method is called (directly or indirectly) and cached."}, {"type": "public instance method", "name": "n_bytes()", "desc": "Returns the total size in bytes of all the messages on the POP server."}, {"type": "public instance method", "name": "n_mails()", "desc": "Returns the number of messages on the POP server."}, {"type": "public instance method", "name": "port()", "desc": "The port number to connect to."}, {"type": "public instance method", "name": "read_timeout=(sec)", "desc": "Set the read timeout."}, {"type": "public instance method", "name": "reset()", "desc": "Resets the session.  This clears all \u201cdeleted\u201d marks from messages."}, {"type": "public instance method", "name": "set_debug_output(arg)", "desc": "WARNING: This method causes a serious security hole. Use this method only for debugging."}, {"type": "public instance method", "name": "start(account, password)", "desc": "Starts a POP3 session."}, {"type": "public instance method", "name": "started?()", "desc": "true if the POP3 session has started."}, {"type": "public instance method", "name": "use_ssl?()", "desc": "does this instance use SSL?"}, {"type": "alias", "name": "active?()", "desc": "             Alias for: started? "}, {"type": "alias", "name": "each()", "desc": "             Alias for: each_mail "}]}