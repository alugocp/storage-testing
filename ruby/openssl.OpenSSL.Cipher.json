{"entries": [{"type": "public class method", "name": "OpenSSL::Cipher.ciphers \u2192 array[string...]click to toggle source", "desc": "Returns the names of all available ciphers in an array."}, {"type": "public class method", "name": "new(string) \u2192 cipherclick to toggle source", "desc": "The string must be a valid cipher name like \u201cAES-128-CBC\u201d or \u201c3DES\u201d."}, {"type": "public instance method", "name": "auth_data = string \u2192 stringclick to toggle source", "desc": "Sets the cipher's additional authenticated data. This field must be set when using AEAD cipher modes such as GCM or CCM. If no associated data shall be used, this method must still be called with a value of \u201c\u201d. The contents of this field should be non-sensitive data which will be added to the ciphertext to generate the authentication tag which validates the contents of the ciphertext."}, {"type": "public instance method", "name": "auth_tag(tag_len = 16) \u2192 Stringclick to toggle source", "desc": "Gets the authentication tag generated by Authenticated Encryption Cipher modes (GCM for example). This tag may be stored along with the ciphertext, then set on the decryption cipher to authenticate the contents of the ciphertext against changes. If the optional integer parameter tag_len is given, the returned tag will be tag_len bytes long. If the parameter is omitted, the default length of 16 bytes or the length previously set by auth_tag_len= will be used. For maximum security, the longest possible should be chosen."}, {"type": "public instance method", "name": "auth_tag = string \u2192 stringclick to toggle source", "desc": "Sets the authentication tag to verify the integrity of the ciphertext. This can be called only when the cipher supports AE. The tag must be set after calling #decrypt, #key= and #iv=, but before calling #final. After all decryption is performed, the tag is verified automatically in the call to #final."}, {"type": "public instance method", "name": "auth_tag_len = Integer \u2192 Integerclick to toggle source", "desc": "Sets the length of the authentication tag to be generated or to be given for AEAD ciphers that requires it as in input parameter. Note that not all AEAD ciphers support this method."}, {"type": "public instance method", "name": "authenticated? \u2192 true | falseclick to toggle source", "desc": "Indicated whether this Cipher instance uses an Authenticated Encryption mode."}, {"type": "public instance method", "name": "block_size \u2192 integerclick to toggle source", "desc": "Returns the size in bytes of the blocks on which this Cipher operates on."}, {"type": "public instance method", "name": "decrypt \u2192 selfclick to toggle source", "desc": "Initializes the Cipher for decryption."}, {"type": "public instance method", "name": "encrypt \u2192 selfclick to toggle source", "desc": "Initializes the Cipher for encryption."}, {"type": "public instance method", "name": "final \u2192 stringclick to toggle source", "desc": "Returns the remaining data held in the cipher object. Further calls to #update or #final will return garbage. This call should always be made as the last call of an encryption or decryption operation, after having fed the entire plaintext or ciphertext to the Cipher instance."}, {"type": "public instance method", "name": "initialize_copy(p1)", "desc": ""}, {"type": "public instance method", "name": "iv = string \u2192 stringclick to toggle source", "desc": "Sets the cipher IV. Please note that since you should never be using ECB mode, an IV is always explicitly required and should be set prior to encryption. The IV itself can be safely transmitted in public, but it should be unpredictable to prevent certain kinds of attacks. You may use #random_iv to create a secure random IV."}, {"type": "public instance method", "name": "iv_len \u2192 integerclick to toggle source", "desc": "Returns the expected length in bytes for an IV for this Cipher."}, {"type": "public instance method", "name": "iv_len = integer \u2192 integerclick to toggle source", "desc": "Sets the IV/nonce length of the Cipher. Normally block ciphers don't allow changing the IV length, but some make use of IV for 'nonce'. You may need this for interoperability with other applications."}, {"type": "public instance method", "name": "key = string \u2192 stringclick to toggle source", "desc": "Sets the cipher key. To generate a key, you should either use a secure random byte string or, if the key is to be derived from a password, you should rely on PBKDF2 functionality provided by OpenSSL::PKCS5. To generate a secure random-based key, #random_key may be used."}, {"type": "public instance method", "name": "key_len \u2192 integerclick to toggle source", "desc": "Returns the key length in bytes of the Cipher."}, {"type": "public instance method", "name": "key_len = integer \u2192 integerclick to toggle source", "desc": "Sets the key length of the cipher.  If the cipher is a fixed length cipher then attempting to set the key length to any value other than the fixed value is an error."}, {"type": "public instance method", "name": "name \u2192 stringclick to toggle source", "desc": "Returns the name of the cipher which may differ slightly from the original name provided."}, {"type": "public instance method", "name": "padding = integer \u2192 integerclick to toggle source", "desc": "Enables or disables padding. By default encryption operations are padded using standard block padding and the padding is checked and removed when decrypting. If the pad parameter is zero then no padding is performed, the total amount of data encrypted or decrypted must then be a multiple of the block size or an error will occur."}, {"type": "public instance method", "name": "pkcs5_keyivgen(pass, salt = nil, iterations = 2048, digest = \"MD5\") \u2192 nilclick to toggle source", "desc": "Generates and sets the key/IV based on a password."}, {"type": "public instance method", "name": "random_iv \u2192 ivclick to toggle source", "desc": "Generate a random IV with OpenSSL::Random.random_bytes and sets it to the cipher, and returns it."}, {"type": "public instance method", "name": "random_key \u2192 keyclick to toggle source", "desc": "Generate a random key with OpenSSL::Random.random_bytes and sets it to the cipher, and returns it."}, {"type": "public instance method", "name": "reset \u2192 selfclick to toggle source", "desc": "Fully resets the internal state of the Cipher. By using this, the same Cipher instance may be used several times for encryption or decryption tasks."}, {"type": "public instance method", "name": "update(data [, buffer]) \u2192 string or bufferclick to toggle source", "desc": "Encrypts data in a streaming fashion. Hand consecutive blocks of data to the update method in order to encrypt it. Returns the encrypted data chunk. When done, the output of #final should be additionally added to the result."}]}