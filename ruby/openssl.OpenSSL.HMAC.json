{"entries": [{"type": "public class method", "name": "digest(digest, key, data) \u2192 aStringclick to toggle source", "desc": "Returns the authentication code as a binary string. The digest parameter specifies the digest algorithm to use. This may be a String representing the algorithm name or an instance of OpenSSL::Digest."}, {"type": "public class method", "name": "hexdigest(digest, key, data) \u2192 aStringclick to toggle source", "desc": "Returns the authentication code as a hex-encoded string. The digest parameter specifies the digest algorithm to use. This may be a String representing the algorithm name or an instance of OpenSSL::Digest."}, {"type": "public class method", "name": "new(key, digest) \u2192 hmacclick to toggle source", "desc": "Returns an instance of OpenSSL::HMAC set with the key and digest algorithm to be used. The instance represents the initial state of the message authentication code before any data has been processed. To process data with it, use the instance method update with your data as an argument."}, {"type": "public instance method", "name": "<<(p1)", "desc": ""}, {"type": "public instance method", "name": "digest \u2192 stringclick to toggle source", "desc": "Returns the authentication code an instance represents as a binary string."}, {"type": "public instance method", "name": "hexdigest \u2192 stringclick to toggle source", "desc": "Returns the authentication code an instance represents as a hex-encoded string."}, {"type": "public instance method", "name": "initialize_copy(p1)", "desc": ""}, {"type": "public instance method", "name": "inspect()", "desc": ""}, {"type": "public instance method", "name": "reset \u2192 selfclick to toggle source", "desc": "Returns hmac as it was when it was first initialized, with all processed data cleared from it."}, {"type": "public instance method", "name": "to_s()", "desc": ""}, {"type": "public instance method", "name": "update(string) \u2192 selfclick to toggle source", "desc": "Returns hmac updated with the message to be authenticated. Can be called repeatedly with chunks of the message."}, {"type": "alias", "name": "<<(p1)", "desc": "             Alias for: update "}, {"type": "alias", "name": "inspect()", "desc": "             Alias for: hexdigest "}, {"type": "alias", "name": "to_s()", "desc": "             Alias for: hexdigest "}]}