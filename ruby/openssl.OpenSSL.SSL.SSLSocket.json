{"entries": [{"type": "attribute", "name": "context", "desc": " The SSLContext object used in this connection. "}, {"type": "attribute", "name": "hostname", "desc": " "}, {"type": "attribute", "name": "io", "desc": " The underlying IO object. "}, {"type": "attribute", "name": "sync_close", "desc": " Whether to close the underlying socket as well, when the SSL/TLS connection is shut down. This defaults to false. "}, {"type": "attribute", "name": "to_io", "desc": " The underlying IO object. "}, {"type": "public class method", "name": "new(io) => aSSLSocketclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "accept => selfclick to toggle source", "desc": "Waits for a SSL/TLS client to initiate a handshake.  The handshake may be started after unencrypted data has been sent over the socket."}, {"type": "public instance method", "name": "accept_nonblock([options]) => selfclick to toggle source", "desc": "Initiates the SSL/TLS handshake as a server in non-blocking manner."}, {"type": "public instance method", "name": "alpn_protocol => String | nilclick to toggle source", "desc": "Returns the ALPN protocol string that was finally selected by the server during the handshake."}, {"type": "public instance method", "name": "cert => cert or nilclick to toggle source", "desc": "The X509 certificate for this socket endpoint."}, {"type": "public instance method", "name": "cipher \u2192 nil or [name, version, bits, alg_bits]click to toggle source", "desc": "Returns the cipher suite actually used in the current session, or nil if no session has been established."}, {"type": "public instance method", "name": "client_ca => [x509name, ...]click to toggle source", "desc": "Returns the list of client CAs. Please note that in contrast to OpenSSL::SSL::SSLContext#client_ca no array of X509::Certificate is returned but X509::Name instances of the CA's subject distinguished name."}, {"type": "public instance method", "name": "connect => selfclick to toggle source", "desc": "Initiates an SSL/TLS handshake with a server.  The handshake may be started after unencrypted data has been sent over the socket."}, {"type": "public instance method", "name": "connect_nonblock([options]) => selfclick to toggle source", "desc": "Initiates the SSL/TLS handshake as a client in non-blocking manner."}, {"type": "public instance method", "name": "hostname = hostname \u2192 hostnameclick to toggle source", "desc": "Sets the server hostname used for SNI. This needs to be set before #connect."}, {"type": "public instance method", "name": "npn_protocol => String | nilclick to toggle source", "desc": "Returns the protocol string that was finally selected by the client during the handshake."}, {"type": "public instance method", "name": "peer_cert => cert or nilclick to toggle source", "desc": "The X509 certificate for this socket's peer."}, {"type": "public instance method", "name": "peer_cert_chain => [cert, ...] or nilclick to toggle source", "desc": "The X509 certificate chain for this socket's peer."}, {"type": "public instance method", "name": "pending => Integerclick to toggle source", "desc": "The number of bytes that are immediately available for reading."}, {"type": "public instance method", "name": "post_connection_check(hostname) \u2192 trueclick to toggle source", "desc": "Perform hostname verification following RFC 6125."}, {"type": "public instance method", "name": "session \u2192 aSessionclick to toggle source", "desc": "Returns the SSLSession object currently used, or nil if the session is not established."}, {"type": "public instance method", "name": "session = session \u2192 sessionclick to toggle source", "desc": "Sets the Session to be used when the connection is established."}, {"type": "public instance method", "name": "session_reused? \u2192 true | falseclick to toggle source", "desc": "Returns true if a reused session was negotiated during the handshake."}, {"type": "public instance method", "name": "ssl_version => Stringclick to toggle source", "desc": "Returns a String representing the SSL/TLS version that was negotiated for the connection, for example \u201cTLSv1.2\u201d."}, {"type": "public instance method", "name": "state => stringclick to toggle source", "desc": "A description of the current connection state. This is for diagnostic purposes only."}, {"type": "public instance method", "name": "sysclose => nilclick to toggle source", "desc": "Sends \u201cclose notify\u201d to the peer and tries to shut down the SSL connection gracefully."}, {"type": "public instance method", "name": "sysread(length) => stringclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "syswrite(string) => Integerclick to toggle source", "desc": "Writes string to the SSL connection."}, {"type": "public instance method", "name": "tmp_key => PKey or nilclick to toggle source", "desc": "Returns the ephemeral key used in case of forward secrecy cipher."}, {"type": "public instance method", "name": "verify_result => Integerclick to toggle source", "desc": "Returns the result of the peer certificates verification.  See verify(1) for error values and descriptions."}]}