{"entries": [{"type": "public class method", "name": "getwd()", "desc": "Returns the current working directory as a Pathname."}, {"type": "public class method", "name": "glob(p1, p2 = v2, p3 = v3)", "desc": "Returns or yields Pathname objects."}, {"type": "public class method", "name": "new(p1)", "desc": "Create a Pathname object from the given String (or String-like object). If path contains a NULL character (\\0), an ArgumentError is raised."}, {"type": "public class method", "name": "pwd()", "desc": "Returns the current working directory as a Pathname."}, {"type": "public instance method", "name": "+(other)", "desc": "Appends a pathname fragment to self to produce a new Pathname object."}, {"type": "public instance method", "name": "/(other)", "desc": ""}, {"type": "public instance method", "name": "<=>(p1)", "desc": "Provides a case-sensitive comparison operator for pathnames."}, {"type": "public instance method", "name": "==(p1)", "desc": "Compare this pathname with other.  The comparison is string-based. Be aware that two different paths (foo.txt and ./foo.txt) can refer to the same file."}, {"type": "public instance method", "name": "===(p1)", "desc": "Compare this pathname with other.  The comparison is string-based. Be aware that two different paths (foo.txt and ./foo.txt) can refer to the same file."}, {"type": "public instance method", "name": "absolute?()", "desc": "Predicate method for testing whether a path is absolute."}, {"type": "public instance method", "name": "ascend()", "desc": "Iterates over and yields a new Pathname object for each element in the given path in ascending order."}, {"type": "public instance method", "name": "atime     \u2192 timeclick to toggle source", "desc": "Returns the last access time for the file."}, {"type": "public instance method", "name": "basename(p1 = v1)", "desc": "Returns the last component of the path."}, {"type": "public instance method", "name": "binread([length [, offset]]) \u2192 stringclick to toggle source", "desc": "Returns all the bytes from the file, or the first N if specified."}, {"type": "public instance method", "name": "binwrite(string, [offset] )   => fixnumclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "birthtime \u2192 timeclick to toggle source", "desc": "Returns the birth time for the file. If the platform doesn't have birthtime, raises NotImplementedError."}, {"type": "public instance method", "name": "blockdev?()", "desc": "See FileTest.blockdev?."}, {"type": "public instance method", "name": "chardev?()", "desc": "See FileTest.chardev?."}, {"type": "public instance method", "name": "children(with_directory=true)", "desc": "Returns the children of the directory (files and subdirectories, not recursive) as an array of Pathname objects."}, {"type": "public instance method", "name": "chmod     \u2192 integerclick to toggle source", "desc": "Changes file permissions."}, {"type": "public instance method", "name": "chown     \u2192 integerclick to toggle source", "desc": "Change owner and group of the file."}, {"type": "public instance method", "name": "cleanpath(consider_symlink=false)", "desc": "Returns clean pathname of self with consecutive slashes and useless dots removed.  The filesystem is not accessed."}, {"type": "public instance method", "name": "ctime     \u2192 timeclick to toggle source", "desc": "Returns the last change time, using directory information, not the file itself."}, {"type": "public instance method", "name": "delete()", "desc": "Removes a file or directory, using File.unlink if self is a file, or Dir.unlink as necessary."}, {"type": "public instance method", "name": "descend()", "desc": "Iterates over and yields a new Pathname object for each element in the given path in descending order."}, {"type": "public instance method", "name": "directory?()", "desc": "See FileTest.directory?."}, {"type": "public instance method", "name": "dirname()", "desc": "Returns all but the last component of the path."}, {"type": "public instance method", "name": "each_child(with_directory=true, &b)", "desc": "Iterates over the children of the directory (files and subdirectories, not recursive)."}, {"type": "public instance method", "name": "each_entry()", "desc": "Iterates over the entries (files and subdirectories) in the directory, yielding a Pathname object for each entry."}, {"type": "public instance method", "name": "each_filename()", "desc": "Iterates over each component of the path."}, {"type": "public instance method", "name": "each_line {|line| ... }click to toggle source", "desc": ""}, {"type": "public instance method", "name": "empty?()", "desc": "Tests the file is empty."}, {"type": "public instance method", "name": "entries()", "desc": "Return the entries (files and subdirectories) in the directory, each as a Pathname object."}, {"type": "public instance method", "name": "eql?(p1)", "desc": "Compare this pathname with other.  The comparison is string-based. Be aware that two different paths (foo.txt and ./foo.txt) can refer to the same file."}, {"type": "public instance method", "name": "executable?()", "desc": "See FileTest.executable?."}, {"type": "public instance method", "name": "executable_real?()", "desc": "See FileTest.executable_real?."}, {"type": "public instance method", "name": "exist?()", "desc": "See FileTest.exist?."}, {"type": "public instance method", "name": "expand_path(p1 = v1)", "desc": "Returns the absolute path for the file."}, {"type": "public instance method", "name": "extname()", "desc": "Returns the file's extension."}, {"type": "public instance method", "name": "file?()", "desc": "See FileTest.file?."}, {"type": "public instance method", "name": "find(ignore_error: true)", "desc": "Iterates over the directory tree in a depth first manner, yielding a Pathname for each file under \u201cthis\u201d directory."}, {"type": "public instance method", "name": "fnmatch(pattern, [flags])        \u2192 stringclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "fnmatch?(pattern, [flags])       \u2192 stringclick to toggle source", "desc": "Return true if the receiver matches the given pattern."}, {"type": "public instance method", "name": "freeze \u2192 objclick to toggle source", "desc": "Freezes this Pathname."}, {"type": "public instance method", "name": "ftype     \u2192 stringclick to toggle source", "desc": "Returns \u201ctype\u201d of file (\u201cfile\u201d, \u201cdirectory\u201d, etc)."}, {"type": "public instance method", "name": "glob(p1, p2 = v2)", "desc": "Returns or yields Pathname objects."}, {"type": "public instance method", "name": "grpowned?()", "desc": "See FileTest.grpowned?."}, {"type": "public instance method", "name": "join(*args)", "desc": "Joins the given pathnames onto self to create a new Pathname object."}, {"type": "public instance method", "name": "lchmod    \u2192 integerclick to toggle source", "desc": "Same as #chmod, but does not follow symbolic links."}, {"type": "public instance method", "name": "lchown    \u2192 integerclick to toggle source", "desc": "Same as #chown, but does not follow symbolic links."}, {"type": "public instance method", "name": "lstat()", "desc": "See File.lstat."}, {"type": "public instance method", "name": "make_link(old)click to toggle source", "desc": "Creates a hard link at pathname."}, {"type": "public instance method", "name": "make_symlink(old)click to toggle source", "desc": "Creates a symbolic link."}, {"type": "public instance method", "name": "mkdir(p1 = v1)", "desc": "Create the referenced directory."}, {"type": "public instance method", "name": "mkpath()", "desc": "Creates a full path, including any intermediate directories that don't yet exist."}, {"type": "public instance method", "name": "mountpoint?()", "desc": "Returns true if self points to a mountpoint."}, {"type": "public instance method", "name": "mtime     \u2192 timeclick to toggle source", "desc": "Returns the last modified time of the file."}, {"type": "public instance method", "name": "open(p1 = v1, p2 = v2, p3 = v3)", "desc": "Opens the file for reading or writing."}, {"type": "public instance method", "name": "opendir()", "desc": "Opens the referenced directory."}, {"type": "public instance method", "name": "owned?()", "desc": "See FileTest.owned?."}, {"type": "public instance method", "name": "parent()", "desc": "Returns the parent directory."}, {"type": "public instance method", "name": "pipe?()", "desc": "See FileTest.pipe?."}, {"type": "public instance method", "name": "read([length [, offset]]) \u2192 stringclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "readable?()", "desc": "See FileTest.readable?."}, {"type": "public instance method", "name": "readable_real?()", "desc": "See FileTest.readable_real?."}, {"type": "public instance method", "name": "readlines(sep=$/ [, open_args])     \u2192 arrayclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "readlink()", "desc": "Read symbolic link."}, {"type": "public instance method", "name": "realdirpath(p1 = v1)", "desc": "Returns the real (absolute) pathname of self in the actual filesystem."}, {"type": "public instance method", "name": "realpath(p1 = v1)", "desc": "Returns the real (absolute) pathname for self in the actual filesystem."}, {"type": "public instance method", "name": "relative?()", "desc": "The opposite of #absolute?"}, {"type": "public instance method", "name": "relative_path_from(base_directory)", "desc": "Returns a relative path from the given base_directory to the receiver."}, {"type": "public instance method", "name": "rename(p1)", "desc": "Rename the file."}, {"type": "public instance method", "name": "rmdir()", "desc": "Remove the referenced directory."}, {"type": "public instance method", "name": "rmtree()", "desc": "Recursively deletes a directory, including all directories beneath it."}, {"type": "public instance method", "name": "root?()", "desc": "Predicate method for root directories.  Returns true if the pathname consists of consecutive slashes."}, {"type": "public instance method", "name": "setgid?()", "desc": "See FileTest.setgid?."}, {"type": "public instance method", "name": "setuid?()", "desc": "See FileTest.setuid?."}, {"type": "public instance method", "name": "size()", "desc": "See FileTest.size."}, {"type": "public instance method", "name": "size?()", "desc": "See FileTest.size?."}, {"type": "public instance method", "name": "socket?()", "desc": "See FileTest.socket?."}, {"type": "public instance method", "name": "split()", "desc": "Returns the dirname and the basename in an Array."}, {"type": "public instance method", "name": "stat()", "desc": "Returns a File::Stat object."}, {"type": "public instance method", "name": "sticky?()", "desc": "See FileTest.sticky?."}, {"type": "public instance method", "name": "sub(*args)", "desc": "Return a pathname which is substituted by String#sub."}, {"type": "public instance method", "name": "sub_ext(p1)", "desc": "Return a pathname with repl added as a suffix to the basename."}, {"type": "public instance method", "name": "symlink?()", "desc": "See FileTest.symlink?."}, {"type": "public instance method", "name": "sysopen([mode, [perm]])  \u2192 fixnumclick to toggle source", "desc": "See IO.sysopen."}, {"type": "public instance method", "name": "taint \u2192 objclick to toggle source", "desc": "Returns pathname.  This method is deprecated and will be removed in Ruby 3.2."}, {"type": "public instance method", "name": "to_path          \u2192 stringclick to toggle source", "desc": "Return the path as a String."}, {"type": "public instance method", "name": "to_s             \u2192 stringclick to toggle source", "desc": "Return the path as a String."}, {"type": "public instance method", "name": "truncate(p1)", "desc": "Truncates the file to length bytes."}, {"type": "public instance method", "name": "unlink()", "desc": "Removes a file or directory, using File.unlink if self is a file, or Dir.unlink as necessary."}, {"type": "public instance method", "name": "untaint \u2192 objclick to toggle source", "desc": "Returns pathname.  This method is deprecated and will be removed in Ruby 3.2."}, {"type": "public instance method", "name": "utime(p1, p2)", "desc": "Update the access and modification times of the file."}, {"type": "public instance method", "name": "world_readable?()", "desc": "See FileTest.world_readable?."}, {"type": "public instance method", "name": "world_writable?()", "desc": "See FileTest.world_writable?."}, {"type": "public instance method", "name": "writable?()", "desc": "See FileTest.writable?."}, {"type": "public instance method", "name": "writable_real?()", "desc": "See FileTest.writable_real?."}, {"type": "public instance method", "name": "write(string, [offset] )   => fixnumclick to toggle source", "desc": ""}, {"type": "public instance method", "name": "zero?()", "desc": "See FileTest.zero?."}, {"type": "alias", "name": "/(other)", "desc": "             Alias for: + "}]}