{"entries": [{"type": "constant", "name": "CHECKSUM_ALGO", "desc": "Constant for relieving Ruby's garbage collector."}, {"type": "constant", "name": "EMPTY_MARSHAL_CHECKSUM", "desc": ""}, {"type": "constant", "name": "EMPTY_MARSHAL_DATA", "desc": ""}, {"type": "constant", "name": "EMPTY_STRING", "desc": ""}, {"type": "constant", "name": "RDWR_ACCESS", "desc": ""}, {"type": "constant", "name": "RD_ACCESS", "desc": ""}, {"type": "constant", "name": "VERSION", "desc": ""}, {"type": "constant", "name": "WR_ACCESS", "desc": ""}, {"type": "attribute", "name": "ultra_safe", "desc": " Whether PStore should do its best to prevent file corruptions, even when under unlikely-to-occur error conditions such as out-of-space conditions and other unusual OS filesystem errors. Setting this flag comes at the price in the form of a performance loss. This flag only has effect on platforms on which file renames are atomic (e.g. all POSIX platforms: Linux, MacOS X, FreeBSD, etc). The default value is false. "}, {"type": "public class method", "name": "new(file, thread_safe = false)", "desc": "To construct a PStore object, pass in the file path where you would like the data to be stored."}, {"type": "public instance method", "name": "[](name)", "desc": "Retrieves a value from the PStore file data, by name.  The hierarchy of Ruby objects stored under that root name will be returned."}, {"type": "public instance method", "name": "[]=(name, value)", "desc": "Stores an individual Ruby object or a hierarchy of Ruby objects in the data store file under the root name.  Assigning to a name already in the data store clobbers the old data."}, {"type": "public instance method", "name": "abort()", "desc": "Ends the current #transaction, discarding any changes to the data store."}, {"type": "public instance method", "name": "commit()", "desc": "Ends the current #transaction, committing any changes to the data store immediately."}, {"type": "public instance method", "name": "delete(name)", "desc": "Removes an object hierarchy from the data store, by name."}, {"type": "public instance method", "name": "fetch(name, default=PStore::Error)", "desc": "This method is just like #[], save that you may also provide a default value for the object.  In the event the specified name is not found in the data store, your default will be returned instead.  If you do not specify a default, PStore::Error will be raised if the object is not found."}, {"type": "public instance method", "name": "path()", "desc": "Returns the path to the data store file."}, {"type": "public instance method", "name": "root?(name)", "desc": "Returns true if the supplied name is currently in the data store."}, {"type": "public instance method", "name": "roots()", "desc": "Returns the names of all object hierarchies currently in the store."}, {"type": "public instance method", "name": "transaction(read_only = false)", "desc": "Opens a new transaction for the data store.  Code executed inside a block passed to this method may read and write data to and from the data store file."}]}