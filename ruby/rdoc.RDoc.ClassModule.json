{"entries": [{"type": "attribute", "name": "comment_location", "desc": " Comment and the location it came from.  Use add_comment to add comments "}, {"type": "attribute", "name": "constant_aliases", "desc": " Constants that are aliases for this class or module "}, {"type": "attribute", "name": "is_alias_for", "desc": " Class or module this constant is an alias for "}, {"type": "public class method", "name": "from_module(class_type, mod)", "desc": "Return a RDoc::ClassModule of class class_type that is a copy of module module. Used to promote modules to classes."}, {"type": "public class method", "name": "new(name, superclass = nil)", "desc": "Creates a new ClassModule with name with optional superclass"}, {"type": "public instance method", "name": "add_comment(comment, location)", "desc": "Adds comment to this ClassModule's list of comments at location.  This method is preferred over comment= since it allows ri data to be updated across multiple runs."}, {"type": "public instance method", "name": "ancestors()", "desc": "Ancestors list for this ClassModule: the list of included modules (classes will add their superclass if any)."}, {"type": "public instance method", "name": "aref()", "desc": "HTML fragment reference for this module or class.  See #aref and #aref"}, {"type": "public instance method", "name": "clear_comment()", "desc": "Clears the comment. Used by the Ruby parser."}, {"type": "public instance method", "name": "complete(min_visibility)", "desc": "Prepares this ClassModule for use by a generator."}, {"type": "public instance method", "name": "description()", "desc": "Handy wrapper for marking up this class or module's comment"}, {"type": "public instance method", "name": "direct_ancestors()", "desc": "Ancestors of this class or module only"}, {"type": "public instance method", "name": "document_self_or_methods()", "desc": "Does this ClassModule or any of its methods have document_self set?"}, {"type": "public instance method", "name": "documented?()", "desc": "Does this class or module have a comment with content or is received_nodoc true?"}, {"type": "public instance method", "name": "each_ancestor()", "desc": "Iterates the ancestors of this class or module for which an RDoc::ClassModule exists."}, {"type": "public instance method", "name": "find_ancestor_local_symbol(symbol)", "desc": "Looks for a symbol in the ancestors. See Context#find_local_symbol."}, {"type": "public instance method", "name": "find_class_named(name)", "desc": "Finds a class or module with name in this namespace or its descendants"}, {"type": "public instance method", "name": "full_name()", "desc": "Return the fully qualified name of this class or module"}, {"type": "public instance method", "name": "merge(class_module)", "desc": "Merges class_module into this ClassModule."}, {"type": "public instance method", "name": "module?()", "desc": "Does this object represent a module?"}, {"type": "public instance method", "name": "name=(new_name)", "desc": "Allows overriding the initial name."}, {"type": "public instance method", "name": "name_for_path()", "desc": "Name to use to generate the url: modules and classes that are aliases for another module or class return the name of the latter."}, {"type": "public instance method", "name": "non_aliases()", "desc": "Returns the classes and modules that are not constants aliasing another class or module. For use by formatters only (caches its result)."}, {"type": "public instance method", "name": "parse(comment_location)", "desc": "Parses comment_location into an RDoc::Markup::Document composed of multiple RDoc::Markup::Documents with their file set."}, {"type": "public instance method", "name": "path()", "desc": "Path to this class or module for use with HTML generator output."}, {"type": "public instance method", "name": "remove_nodoc_children()", "desc": "Updates the child modules or classes of class/module parent by deleting the ones that have been removed from the documentation."}, {"type": "public instance method", "name": "search_record()", "desc": "Search record used by RDoc::Generator::JsonIndex"}, {"type": "public instance method", "name": "store=(store)", "desc": "Sets the store for this class or module and its contained code objects."}, {"type": "public instance method", "name": "superclass()", "desc": "Get the superclass of this class.  Attempts to retrieve the superclass object, returns the name if it is not known."}, {"type": "public instance method", "name": "superclass=(superclass)", "desc": "Set the superclass of this class to superclass"}, {"type": "public instance method", "name": "type()", "desc": "'module' or 'class'"}, {"type": "public instance method", "name": "update_aliases()", "desc": "Updates the child modules & classes by replacing the ones that are aliases through a constant."}, {"type": "public instance method", "name": "update_extends()", "desc": "Deletes from extends those whose module has been removed from the documentation."}, {"type": "public instance method", "name": "update_includes()", "desc": "Deletes from includes those whose module has been removed from the documentation."}, {"type": "alias", "name": "direct_ancestors()", "desc": "             Alias for: ancestors "}]}