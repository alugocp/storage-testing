{"entries": [{"type": "attribute", "name": "document", "desc": " Overrides the content returned by parse.  Use when there is no text source for this comment "}, {"type": "attribute", "name": "file", "desc": " The RDoc::TopLevel this comment was found in "}, {"type": "attribute", "name": "format", "desc": " The format of this comment.  Defaults to RDoc::Markup "}, {"type": "attribute", "name": "line", "desc": " Line where this Comment was written "}, {"type": "attribute", "name": "location", "desc": " The RDoc::TopLevel this comment was found in "}, {"type": "attribute", "name": "text", "desc": " The text for this comment "}, {"type": "attribute", "name": "to_s", "desc": " The text for this comment "}, {"type": "public class method", "name": "new(text = nil, location = nil, language = nil)", "desc": "Creates a new comment with text that is found in the RDoc::TopLevel location."}, {"type": "public instance method", "name": "empty?()", "desc": "A comment is empty if its text String is empty."}, {"type": "public instance method", "name": "encode!(encoding)", "desc": "HACK dubious"}, {"type": "public instance method", "name": "extract_call_seq(method)", "desc": "Look for a 'call-seq' in the comment to override the normal parameter handling.  The :call-seq: is indented from the baseline.  All lines of the same indentation level and prefix are consumed."}, {"type": "public instance method", "name": "format=(format)", "desc": "Sets the format of this comment and resets any parsed document"}, {"type": "public instance method", "name": "normalize()", "desc": "Normalizes the text.  See RDoc::Text#normalize_comment for details"}, {"type": "public instance method", "name": "parse()", "desc": "Parses the comment into an RDoc::Markup::Document.  The parsed document is cached until the text is changed."}, {"type": "public instance method", "name": "remove_private()", "desc": "Removes private sections from this comment.  Private sections are flush to the comment marker and start with -- and end with ++. For C-style comments, a private marker may not start at the opening of the comment."}, {"type": "public instance method", "name": "text=(text)", "desc": "Replaces this comment's text with text and resets the parsed document."}, {"type": "public instance method", "name": "tomdoc?()", "desc": "Returns true if this comment is in TomDoc format."}]}