{"entries": [{"type": "attribute", "name": "comment", "desc": " Section comment "}, {"type": "attribute", "name": "comments", "desc": " Section comments "}, {"type": "attribute", "name": "parent", "desc": " Context this Section lives in "}, {"type": "attribute", "name": "title", "desc": " Section title "}, {"type": "public class method", "name": "new(parent, title, comment)", "desc": "Creates a new section with title and comment"}, {"type": "public instance method", "name": "==(other)", "desc": "Sections are equal when they have the same title"}, {"type": "public instance method", "name": "add_comment(comment)", "desc": "Adds comment to this section"}, {"type": "public instance method", "name": "aref()", "desc": "Anchor reference for linking to this section"}, {"type": "public instance method", "name": "eql?(other)", "desc": ""}, {"type": "public instance method", "name": "extract_comment(comment)", "desc": "Extracts the comment for this section from the original comment block. If the first line contains :section:, strip it and use the rest. Otherwise remove lines up to the line containing :section:, and look for those lines again at the end and remove them. This lets us write"}, {"type": "public instance method", "name": "in_files()", "desc": "The files comments in this section come from"}, {"type": "public instance method", "name": "marshal_dump()", "desc": "Serializes this Section.  The title and parsed comment are saved, but not the section parent which must be restored manually."}, {"type": "public instance method", "name": "marshal_load(array)", "desc": "De-serializes this Section.  The section parent must be restored manually."}, {"type": "public instance method", "name": "parse()", "desc": "Parses comment_location into an RDoc::Markup::Document composed of multiple RDoc::Markup::Documents with their file set."}, {"type": "public instance method", "name": "plain_html()", "desc": "The section's title, or 'Top Section' if the title is nil."}, {"type": "public instance method", "name": "remove_comment(comment)", "desc": "Removes a comment from this section if it is from the same file as comment"}, {"type": "public instance method", "name": "sequence()", "desc": "Section sequence number (deprecated)"}, {"type": "alias", "name": "eql?(other)", "desc": "             Alias for: == "}]}