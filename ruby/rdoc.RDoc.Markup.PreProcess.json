{"entries": [{"type": "attribute", "name": "options", "desc": " An RDoc::Options instance that will be filled in with overrides from directives "}, {"type": "public class method", "name": "new(input_file_name, include_path)", "desc": "Creates a new pre-processor for input_file_name that will look for included files in include_path"}, {"type": "public class method", "name": "post_process(&block)", "desc": "Adds a post-process handler for directives.  The handler will be called with the result RDoc::Comment (or text String) and the code object for the comment (if any)."}, {"type": "public class method", "name": "post_processors()", "desc": "Registered post-processors"}, {"type": "public class method", "name": "register(directive, &block)", "desc": "Registers directive as one handled by RDoc.  If a block is given the directive will be replaced by the result of the block, otherwise the directive will be removed from the processed text."}, {"type": "public class method", "name": "registered()", "desc": "Registered directives"}, {"type": "public class method", "name": "reset()", "desc": "Clears all registered directives and post-processors"}, {"type": "public instance method", "name": "find_include_file(name)", "desc": "Look for the given file in the directory containing the current file, and then in each of the directories specified in the RDOC_INCLUDE path"}, {"type": "public instance method", "name": "handle(text, code_object = nil, &block)", "desc": "Look for directives in the given text."}, {"type": "public instance method", "name": "handle_directive(prefix, directive, param, code_object = nil, encoding = nil)", "desc": "Performs the actions described by directive and its parameter param."}, {"type": "public instance method", "name": "include_file(name, indent, encoding)", "desc": "Handles the :include: filename directive."}]}