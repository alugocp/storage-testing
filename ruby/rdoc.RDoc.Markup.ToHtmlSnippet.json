{"entries": [{"type": "attribute", "name": "character_limit", "desc": " After this many characters the input will be cut off. "}, {"type": "attribute", "name": "mask", "desc": " The attribute bitmask "}, {"type": "attribute", "name": "paragraph_limit", "desc": " After this many paragraphs the input will be cut off. "}, {"type": "attribute", "name": "paragraphs", "desc": " Count of paragraphs found "}, {"type": "public class method", "name": "new(options, characters = 100, paragraphs = 3, markup = nil)", "desc": "Creates a new ToHtmlSnippet formatter that will cut off the input on the next word boundary after the given number of characters or paragraphs of text have been encountered."}, {"type": "public instance method", "name": "accept_heading(heading)", "desc": "Adds heading to the output as a paragraph"}, {"type": "public instance method", "name": "accept_list_item_end(list_item)", "desc": "Finishes consumption of list_item"}, {"type": "public instance method", "name": "accept_list_item_start(list_item)", "desc": "Prepares the visitor for consuming list_item"}, {"type": "public instance method", "name": "accept_list_start(list)", "desc": "Prepares the visitor for consuming list"}, {"type": "public instance method", "name": "accept_paragraph(paragraph)", "desc": ""}, {"type": "public instance method", "name": "accept_verbatim(verbatim)", "desc": "Adds verbatim to the output"}, {"type": "public instance method", "name": "add_paragraph()", "desc": "Throws :done when #paragraph_limit paragraphs have been encountered"}, {"type": "public instance method", "name": "convert(content)", "desc": "Marks up content"}, {"type": "public instance method", "name": "convert_flow(flow)", "desc": "Converts flow items flow"}, {"type": "public instance method", "name": "gen_url(url, text)", "desc": "Returns just the text of link, url is only used to determine the link type."}, {"type": "public instance method", "name": "handle_regexp_CROSSREF(target)", "desc": "Removes escaping from the cross-references in target"}, {"type": "public instance method", "name": "handle_regexp_HARD_BREAK(target)", "desc": "target is a "}, {"type": "public instance method", "name": "html_list_name(list_type, open_tag)", "desc": "In snippets, there are no lists"}, {"type": "public instance method", "name": "list_item_start(list_item, list_type)", "desc": "Lists are paragraphs, but notes and labels have a separator"}, {"type": "public instance method", "name": "off_tags(res, item)", "desc": "Maintains a bitmask to allow HTML elements to be closed properly.  See RDoc::Markup::Formatter."}, {"type": "public instance method", "name": "on_tags(res, item)", "desc": "Maintains a bitmask to allow HTML elements to be closed properly.  See RDoc::Markup::Formatter."}, {"type": "public instance method", "name": "start_accepting()", "desc": "Prepares the visitor for HTML snippet generation"}, {"type": "public instance method", "name": "truncate(text)", "desc": "Truncates text at the end of the first word after the character_limit."}]}