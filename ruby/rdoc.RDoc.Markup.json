{"entries": [{"type": "attribute", "name": "attribute_manager", "desc": " An AttributeManager which handles inline markup. "}, {"type": "public class method", "name": "new(attribute_manager = nil)", "desc": "Take a block of text and use various heuristics to determine its structure (paragraphs, lists, and so on).  Invoke an event handler as we identify significant chunks."}, {"type": "public class method", "name": "parse(str)", "desc": "Parses str into an RDoc::Markup::Document."}, {"type": "public instance method", "name": "add_html(tag, name)", "desc": "Add to the sequences recognized as general markup."}, {"type": "public instance method", "name": "add_regexp_handling(pattern, name)", "desc": "Add to other inline sequences.  For example, we could add WikiWords using something like:"}, {"type": "public instance method", "name": "add_word_pair(start, stop, name)", "desc": "Add to the sequences used to add formatting to an individual word (such as bold).  Matching entries will generate attributes that the output formatters can recognize by their name."}, {"type": "public instance method", "name": "convert(input, formatter)", "desc": "We take input, parse it if necessary, then invoke the output formatter using a Visitor to render the result."}]}