{"entries": [{"type": "attribute", "name": "aliases", "desc": " Array of other names for this method/attribute "}, {"type": "attribute", "name": "arglists", "desc": " The #call_seq or the #param_seq with method name, if there is no call_seq. "}, {"type": "attribute", "name": "block_params", "desc": " Parameters yielded by the called block "}, {"type": "attribute", "name": "call_seq", "desc": " Different ways to call this method "}, {"type": "attribute", "name": "is_alias_for", "desc": " The method/attribute we're aliasing "}, {"type": "attribute", "name": "name", "desc": " Name of this method/attribute. "}, {"type": "attribute", "name": "param_seq", "desc": " Pretty parameter list for this method "}, {"type": "attribute", "name": "params", "desc": " Parameters for this method "}, {"type": "attribute", "name": "singleton", "desc": " Is this a singleton method/attribute? "}, {"type": "attribute", "name": "text", "desc": " Source file token stream "}, {"type": "attribute", "name": "visibility", "desc": " public, protected, private "}, {"type": "public class method", "name": "new(text, name)", "desc": "Creates a new MethodAttr from token stream text and method or attribute name name."}, {"type": "public instance method", "name": "<=>(other)", "desc": "Order by singleton then name"}, {"type": "public instance method", "name": "add_alias(an_alias, context)", "desc": "Abstract method. Contexts in their building phase call this to register a new alias for this known method/attribute."}, {"type": "public instance method", "name": "add_line_numbers(src)", "desc": "Prepend src with line numbers.  Relies on the first line of a source code listing having:"}, {"type": "public instance method", "name": "aref()", "desc": "HTML fragment reference for this method"}, {"type": "public instance method", "name": "aref_prefix()", "desc": "Prefix for aref, defined by subclasses."}, {"type": "public instance method", "name": "block_params=(value)", "desc": "Attempts to sanitize the content passed by the Ruby parser: remove outer parentheses, etc."}, {"type": "public instance method", "name": "documented?()", "desc": "A method/attribute is documented if any of the following is true:"}, {"type": "public instance method", "name": "full_name()", "desc": "Full method/attribute name including namespace"}, {"type": "public instance method", "name": "html_name()", "desc": "HTML id-friendly method/attribute name"}, {"type": "public instance method", "name": "markup_code()", "desc": "Turns the method's token stream into HTML."}, {"type": "public instance method", "name": "name_prefix()", "desc": "'::' for a class method/attribute, '#' for an instance method."}, {"type": "public instance method", "name": "output_name(context)", "desc": "Name for output to HTML.  For class methods the full name with a \u201c.\u201d is used like SomeClass.method_name.  For instance methods the class name is used if context does not match the parent."}, {"type": "public instance method", "name": "parent_name()", "desc": "Name of our parent with special handling for un-marshaled methods"}, {"type": "public instance method", "name": "path()", "desc": "Path to this method for use with HTML generator output."}, {"type": "public instance method", "name": "pretty_name()", "desc": "Method/attribute name with class/instance indicator"}, {"type": "public instance method", "name": "search_record()", "desc": "Used by RDoc::Generator::JsonIndex to create a record for the search engine."}, {"type": "public instance method", "name": "see()", "desc": "A method/attribute to look at, in particular if this method/attribute has no documentation."}, {"type": "public instance method", "name": "store=(store)", "desc": "Sets the store for this class or module and its contained code objects."}, {"type": "public instance method", "name": "type()", "desc": "Type of method/attribute (class or instance)"}]}