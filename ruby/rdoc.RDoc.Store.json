{"entries": [{"type": "attribute", "name": "c_class_variables", "desc": " Maps C variables to class or module names for each parsed C file. "}, {"type": "attribute", "name": "c_singleton_class_variables", "desc": " Maps C variables to singleton class names for each parsed C file. "}, {"type": "attribute", "name": "cache", "desc": " The contents of the Store "}, {"type": "attribute", "name": "dry_run", "desc": " If true this Store will not write any files "}, {"type": "attribute", "name": "encoding", "desc": " The encoding of the contents in the Store "}, {"type": "attribute", "name": "path", "desc": " Path this store reads or writes "}, {"type": "attribute", "name": "rdoc", "desc": " The RDoc::RDoc driver for this parse tree.  This allows classes consulting the documentation tree to access user-set options, for example. "}, {"type": "attribute", "name": "type", "desc": " Type of ri datastore this was loaded from.  See RDoc::RI::Driver, RDoc::RI::Paths. "}, {"type": "attribute", "name": "unmatched_constant_alias", "desc": " The lazy constants alias will be discovered in passing "}, {"type": "public class method", "name": "new(path = nil, type = nil)", "desc": "Creates a new Store of type that will load or save to path"}, {"type": "public instance method", "name": "add_c_enclosure(variable, namespace)", "desc": "Adds module as an enclosure (namespace) for the given variable for C files."}, {"type": "public instance method", "name": "add_c_variables(c_parser)", "desc": "Adds C variables from an RDoc::Parser::C"}, {"type": "public instance method", "name": "add_file(absolute_name, relative_name: absolute_name, parser: nil)", "desc": "Adds the file with name as an RDoc::TopLevel to the store.  Returns the created RDoc::TopLevel."}, {"type": "public instance method", "name": "all_classes()", "desc": "Returns all classes discovered by RDoc"}, {"type": "public instance method", "name": "all_classes_and_modules()", "desc": "Returns all classes and modules discovered by RDoc"}, {"type": "public instance method", "name": "all_files()", "desc": "All TopLevels known to RDoc"}, {"type": "public instance method", "name": "all_modules()", "desc": "Returns all modules discovered by RDoc"}, {"type": "public instance method", "name": "ancestors()", "desc": "Ancestors cache accessor.  Maps a klass name to an Array of its ancestors in this store.  If Foo in this store inherits from Object, Kernel won't be listed (it will be included from ruby's ri store)."}, {"type": "public instance method", "name": "attributes()", "desc": "Attributes cache accessor.  Maps a class to an Array of its attributes."}, {"type": "public instance method", "name": "cache_path()", "desc": "Path to the cache file"}, {"type": "public instance method", "name": "class_file(klass_name)", "desc": "Path to the ri data for klass_name"}, {"type": "public instance method", "name": "class_methods()", "desc": "Class methods cache accessor.  Maps a class to an Array of its class methods (not full name)."}, {"type": "public instance method", "name": "class_path(klass_name)", "desc": "Path where data for klass_name will be stored (methods or class data)"}, {"type": "public instance method", "name": "classes_hash()", "desc": "Hash of all classes known to RDoc"}, {"type": "public instance method", "name": "complete(min_visibility)", "desc": "Prepares the RDoc code object tree for use by a generator."}, {"type": "public instance method", "name": "files_hash()", "desc": "Hash of all files known to RDoc"}, {"type": "public instance method", "name": "find_c_enclosure(variable)", "desc": "Finds the enclosure (namespace) for the given C variable."}, {"type": "public instance method", "name": "find_class_named(name)", "desc": "Finds the class with name in all discovered classes"}, {"type": "public instance method", "name": "find_class_named_from(name, from)", "desc": "Finds the class with name starting in namespace from"}, {"type": "public instance method", "name": "find_class_or_module(name)", "desc": "Finds the class or module with name"}, {"type": "public instance method", "name": "find_file_named(name)", "desc": "Finds the file with name in all discovered files"}, {"type": "public instance method", "name": "find_module_named(name)", "desc": "Finds the module with name in all discovered modules"}, {"type": "public instance method", "name": "find_text_page(file_name)", "desc": "Returns the RDoc::TopLevel that is a text file and has the given file_name"}, {"type": "public instance method", "name": "find_unique(all_hash)", "desc": "Finds unique classes/modules defined in all_hash, and returns them as an array. Performs the alias updates in all_hash: see ::complete."}, {"type": "public instance method", "name": "fix_basic_object_inheritance()", "desc": "Fixes the erroneous BasicObject < Object in 1.9."}, {"type": "public instance method", "name": "friendly_path()", "desc": "Friendly rendition of path"}, {"type": "public instance method", "name": "instance_methods()", "desc": "Instance methods cache accessor.  Maps a class to an Array of its instance methods (not full name)."}, {"type": "public instance method", "name": "load_all()", "desc": "Loads all items from this store into memory.  This recreates a documentation tree for use by a generator"}, {"type": "public instance method", "name": "load_cache()", "desc": "Loads cache file for this store"}, {"type": "public instance method", "name": "load_class(klass_name)", "desc": "Loads ri data for klass_name and hooks it up to this store."}, {"type": "public instance method", "name": "load_class_data(klass_name)", "desc": "Loads ri data for klass_name"}, {"type": "public instance method", "name": "load_method(klass_name, method_name)", "desc": "Loads ri data for method_name in klass_name"}, {"type": "public instance method", "name": "load_page(page_name)", "desc": "Loads ri data for page_name"}, {"type": "public instance method", "name": "main()", "desc": "Gets the main page for this RDoc store.  This page is used as the root of the RDoc server."}, {"type": "public instance method", "name": "main=(page)", "desc": "Sets the main page for this RDoc store."}, {"type": "public instance method", "name": "make_variable_map(variables)", "desc": "Converts the variable => ClassModule map variables from a C parser into a variable => class name map."}, {"type": "public instance method", "name": "method_file(klass_name, method_name)", "desc": "Path to the ri data for method_name in klass_name"}, {"type": "public instance method", "name": "module_names()", "desc": "Modules cache accessor.  An Array of all the module (and class) names in the store."}, {"type": "public instance method", "name": "modules_hash()", "desc": "Hash of all modules known to RDoc"}, {"type": "public instance method", "name": "page(name)", "desc": "Returns the RDoc::TopLevel that is a text file and has the given name"}, {"type": "public instance method", "name": "page_file(page_name)", "desc": "Path to the ri data for page_name"}, {"type": "public instance method", "name": "remove_nodoc(all_hash)", "desc": "Removes from all_hash the contexts that are nodoc or have no content."}, {"type": "public instance method", "name": "save()", "desc": "Saves all entries in the store"}, {"type": "public instance method", "name": "save_cache()", "desc": "Writes the cache file for this store"}, {"type": "public instance method", "name": "save_class(klass)", "desc": "Writes the ri data for klass (or module)"}, {"type": "public instance method", "name": "save_method(klass, method)", "desc": "Writes the ri data for method on klass"}, {"type": "public instance method", "name": "save_page(page)", "desc": "Writes the ri data for page"}, {"type": "public instance method", "name": "source()", "desc": "Source of the contents of this store."}, {"type": "public instance method", "name": "title()", "desc": "Gets the title for this RDoc store.  This is used as the title in each page on the RDoc server"}, {"type": "public instance method", "name": "title=(title)", "desc": "Sets the title page for this RDoc store."}, {"type": "public instance method", "name": "unique_classes()", "desc": "Returns the unique classes discovered by RDoc."}, {"type": "public instance method", "name": "unique_classes_and_modules()", "desc": "Returns the unique classes and modules discovered by RDoc. ::complete must have been called prior to using this method."}, {"type": "public instance method", "name": "unique_modules()", "desc": "Returns the unique modules discovered by RDoc. ::complete must have been called prior to using this method."}, {"type": "public instance method", "name": "update_parser_of_file(absolute_name, parser)", "desc": ""}]}