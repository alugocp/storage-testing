{"entries": [{"type": "constant", "name": "MARKUP_FORMAT", "desc": "Maps markup formats to classes that can parse them.  If the format is\nunknown, \u201crdoc\u201d format is used."}, {"type": "constant", "name": "TO_HTML_CHARACTERS", "desc": "Maps an encoding to a Hash of characters properly transcoded for that\nencoding.\nSee also encode_fallback."}, {"type": "attribute", "name": "language", "desc": " "}, {"type": "public class method", "name": "encode_fallback(character, encoding, fallback)", "desc": "Transcodes character to encoding with a fallback character."}, {"type": "public instance method", "name": "expand_tabs(text)", "desc": "Expands tab characters in text to eight spaces"}, {"type": "public instance method", "name": "flush_left(text)", "desc": "Flush text left based on the shortest line"}, {"type": "public instance method", "name": "markup(text)", "desc": "Convert a string in markup format into HTML."}, {"type": "public instance method", "name": "normalize_comment(text)", "desc": "Strips hashes, expands tabs then flushes text to the left"}, {"type": "public instance method", "name": "parse(text, format = 'rdoc')", "desc": "Normalizes text then builds a RDoc::Markup::Document from it"}, {"type": "public instance method", "name": "snippet(text, limit = 100)", "desc": "The first limit characters of text as HTML"}, {"type": "public instance method", "name": "strip_hashes(text)", "desc": "Strips leading # characters from text"}, {"type": "public instance method", "name": "strip_newlines(text)", "desc": "Strips leading and trailing n characters from text"}, {"type": "public instance method", "name": "strip_stars(text)", "desc": "Strips       style comments"}]}