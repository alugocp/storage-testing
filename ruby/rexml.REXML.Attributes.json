{"entries": [{"type": "public class method", "name": "new(element)", "desc": "Constructor"}, {"type": "public instance method", "name": "<<( attribute )", "desc": ""}, {"type": "public instance method", "name": "[](name)", "desc": "Fetches an attribute value.  If you want to get the Attribute itself, use #get_attribute()"}, {"type": "public instance method", "name": "[]=( name, value )", "desc": "Sets an attribute, overwriting any existing attribute value by the same name.  Namespace is significant."}, {"type": "public instance method", "name": "add( attribute )", "desc": "Adds an attribute, overriding any existing attribute by the same name.  Namespaces are significant."}, {"type": "public instance method", "name": "delete( attribute )", "desc": "Removes an attribute"}, {"type": "public instance method", "name": "delete_all( name )", "desc": "Deletes all attributes matching a name.  Namespaces are significant."}, {"type": "public instance method", "name": "each()", "desc": "Iterates over each attribute of an Element, yielding the expanded name and value as a pair of Strings."}, {"type": "public instance method", "name": "each_attribute()", "desc": "Iterates over the attributes of an Element.  Yields actual Attribute nodes, not String values."}, {"type": "public instance method", "name": "get_attribute( name )", "desc": "Fetches an attribute"}, {"type": "public instance method", "name": "get_attribute_ns(namespace, name)", "desc": "The get_attribute_ns method retrieves a method by its namespace and name. Thus it is possible to reliably identify an attribute even if an XML processor has changed the prefix."}, {"type": "public instance method", "name": "length()", "desc": "Returns the number of attributes the owning Element contains."}, {"type": "public instance method", "name": "namespaces()", "desc": ""}, {"type": "public instance method", "name": "prefixes()", "desc": "Returns an array of Strings containing all of the prefixes declared by this set of # attributes.  The array does not include the default namespace declaration, if one exists."}, {"type": "public instance method", "name": "size()", "desc": ""}, {"type": "public instance method", "name": "to_a()", "desc": ""}, {"type": "alias", "name": "<<( attribute )", "desc": "             Alias for: add "}, {"type": "alias", "name": "size()", "desc": "             Alias for: length "}]}