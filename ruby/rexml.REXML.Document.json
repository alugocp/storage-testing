{"entries": [{"type": "constant", "name": "DECLARATION", "desc": "A convenient default XML declaration.  If you want an XML declaration, the\neasiest way to add one is mydoc << Document::DECLARATION\nDEPRECATED Use: mydoc << REXML::XMLDecl.default"}, {"type": "attribute", "name": "entity_expansion_count", "desc": " "}, {"type": "public class method", "name": "entity_expansion_limit()", "desc": "Get the entity expansion limit. By default the limit is set to 10000."}, {"type": "public class method", "name": "entity_expansion_limit=( val )", "desc": "Set the entity expansion limit. By default the limit is set to 10000."}, {"type": "public class method", "name": "entity_expansion_text_limit()", "desc": "Get the entity expansion limit. By default the limit is set to 10240."}, {"type": "public class method", "name": "entity_expansion_text_limit=( val )", "desc": "Set the entity expansion limit. By default the limit is set to 10240."}, {"type": "public class method", "name": "new( source = nil, context = {} )", "desc": "Constructor @param source if supplied, must be a Document, String, or IO. Documents have their context and Element attributes cloned. Strings are expected to be valid XML documents.  IOs are expected to be sources of valid XML documents. @param context if supplied, contains the context of the document; this should be a Hash."}, {"type": "public class method", "name": "parse_stream( source, listener )", "desc": ""}, {"type": "public instance method", "name": "<<( child )", "desc": ""}, {"type": "public instance method", "name": "add( child )", "desc": "We override this, because XMLDecls and DocTypes must go at the start of the document"}, {"type": "public instance method", "name": "add_element(arg=nil, arg2=nil)", "desc": ""}, {"type": "public instance method", "name": "clone()", "desc": "Should be obvious"}, {"type": "public instance method", "name": "doctype()", "desc": "@return the DocType child of the document, if one exists, and nil otherwise."}, {"type": "public instance method", "name": "document()", "desc": ""}, {"type": "public instance method", "name": "encoding()", "desc": "@return the XMLDecl encoding of this document as an Encoding object. If no XMLDecl has been set, returns the default encoding."}, {"type": "public instance method", "name": "expanded_name()", "desc": "According to the XML spec, a root node has no expanded name"}, {"type": "public instance method", "name": "name()", "desc": ""}, {"type": "public instance method", "name": "node_type()", "desc": ""}, {"type": "public instance method", "name": "record_entity_expansion()", "desc": ""}, {"type": "public instance method", "name": "root()", "desc": "@return the root Element of the document, or nil if this document has no children."}, {"type": "public instance method", "name": "stand_alone?()", "desc": "@return the XMLDecl standalone value of this document as a String. If no XMLDecl has been set, returns the default setting."}, {"type": "public instance method", "name": "version()", "desc": "@return the XMLDecl version of this document as a String. If no XMLDecl has been set, returns the default version."}, {"type": "public instance method", "name": "write(output=$stdout, indent=-1, transtive=false, ie_hack=false, encoding=nil)click to toggle source", "desc": ""}, {"type": "public instance method", "name": "xml_decl()", "desc": "@return the XMLDecl of this document; if no XMLDecl has been set, the default declaration is returned."}, {"type": "alias", "name": "<<( child )", "desc": "             Alias for: add "}, {"type": "alias", "name": "name()", "desc": "             Alias for: expanded_name "}]}