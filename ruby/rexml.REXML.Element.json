{"entries": [{"type": "constant", "name": "UNDEFINED", "desc": ""}, {"type": "attribute", "name": "attributes", "desc": " Mechanisms for accessing attributes and child elements of this element. "}, {"type": "attribute", "name": "context", "desc": " The context holds information about the processing environment, such as whitespace handling. "}, {"type": "attribute", "name": "elements", "desc": " Mechanisms for accessing attributes and child elements of this element. "}, {"type": "public class method", "name": "new( arg = UNDEFINED, parent=nil, context=nil )", "desc": "Constructor"}, {"type": "public instance method", "name": "[](name_or_index)", "desc": "Fetches an attribute value or a child."}, {"type": "public instance method", "name": "add_attribute( key, value=nil )", "desc": "Adds an attribute to this element, overwriting any existing attribute by the same name."}, {"type": "public instance method", "name": "add_attributes(hash)", "desc": "Add multiple attributes to this element."}, {"type": "public instance method", "name": "add_element(element, attrs=nil)", "desc": "Adds a child to this element, optionally setting attributes in the element."}, {"type": "public instance method", "name": "add_namespace( prefix, uri=nil )", "desc": "Adds a namespace to this element."}, {"type": "public instance method", "name": "add_text( text )", "desc": "A helper method to add a Text child.  Actual Text instances can be added with regular Parent methods, such as add() and <<()"}, {"type": "public instance method", "name": "attribute( name, namespace=nil )", "desc": ""}, {"type": "public instance method", "name": "cdatas()", "desc": "Get an array of all CData children. IMMUTABLE"}, {"type": "public instance method", "name": "clone()", "desc": "Creates a shallow copy of self."}, {"type": "public instance method", "name": "comments()", "desc": "Get an array of all Comment children. IMMUTABLE"}, {"type": "public instance method", "name": "delete_attribute(key)", "desc": "Removes an attribute"}, {"type": "public instance method", "name": "delete_element(element)", "desc": "Deletes a child element."}, {"type": "public instance method", "name": "delete_namespace(namespace=\"xmlns\")", "desc": "Removes a namespace from this node.  This only works if the namespace is actually declared in this node.  If no argument is passed, deletes the default namespace."}, {"type": "public instance method", "name": "document()", "desc": "Evaluates to the document to which this element belongs, or nil if this element doesn't belong to a document."}, {"type": "public instance method", "name": "each_element( xpath=nil )", "desc": "Synonym for #elements.each"}, {"type": "public instance method", "name": "each_element_with_attribute( key, value=nil, max=0, name=nil )", "desc": "Iterates through the child elements, yielding for each Element that has a particular attribute set."}, {"type": "public instance method", "name": "each_element_with_text( text=nil, max=0, name=nil )", "desc": "Iterates through the children, yielding for each Element that has a particular text set."}, {"type": "public instance method", "name": "get_elements( xpath )", "desc": "Synonym for Element.to_a This is a little slower than calling elements.each directly."}, {"type": "public instance method", "name": "get_text(path = nil)", "desc": "Returns the first child Text node, if any, or nil otherwise. This method returns the actual Text node, rather than the String content."}, {"type": "public instance method", "name": "has_attributes?()", "desc": "Evaluates to true if this element has any attributes set, false otherwise."}, {"type": "public instance method", "name": "has_elements?()", "desc": "Evaluates to true if this element has at least one child Element"}, {"type": "public instance method", "name": "has_text?()", "desc": "Evaluates to true if this element has at least one Text child"}, {"type": "public instance method", "name": "ignore_whitespace_nodes()", "desc": ""}, {"type": "public instance method", "name": "inspect()", "desc": ""}, {"type": "public instance method", "name": "instructions()", "desc": "Get an array of all Instruction children. IMMUTABLE"}, {"type": "public instance method", "name": "namespace(prefix=nil)", "desc": "Evaluates to the URI for a prefix, or the empty string if no such namespace is declared for this element. Evaluates recursively for ancestors.  Returns the default namespace, if there is one."}, {"type": "public instance method", "name": "namespaces()", "desc": ""}, {"type": "public instance method", "name": "next_element()", "desc": "Returns the next sibling that is an element, or nil if there is no Element sibling after this one"}, {"type": "public instance method", "name": "node_type()", "desc": ""}, {"type": "public instance method", "name": "prefixes()", "desc": "Evaluates to an Array containing the prefixes (names) of all defined namespaces at this context node."}, {"type": "public instance method", "name": "previous_element()", "desc": "Returns the previous sibling that is an element, or nil if there is no Element sibling prior to this one"}, {"type": "public instance method", "name": "raw()", "desc": "Evaluates to true if raw mode is set for this element.  This is the case if the context has :raw set to :all or an array containing the name of this element."}, {"type": "public instance method", "name": "root()", "desc": ""}, {"type": "public instance method", "name": "root_node()", "desc": "Evaluates to the root node of the document that this element belongs to. If this element doesn't belong to a document, but does belong to another Element, the parent's root will be returned, until the earliest ancestor is found."}, {"type": "public instance method", "name": "text( path = nil )", "desc": "A convenience method which returns the String value of the first child text element, if one exists, and nil otherwise."}, {"type": "public instance method", "name": "text=( text )", "desc": "Sets the first Text child of this object.  See text() for a discussion about Text children."}, {"type": "public instance method", "name": "texts()", "desc": "Get an array of all Text children. IMMUTABLE"}, {"type": "public instance method", "name": "whitespace()", "desc": "Evaluates to true if whitespace is respected for this element. This is the case if:"}, {"type": "public instance method", "name": "write(output=$stdout, indent=-1, transitive=false, ie_hack=false)", "desc": "See REXML::Formatters"}, {"type": "public instance method", "name": "xpath()", "desc": ""}]}