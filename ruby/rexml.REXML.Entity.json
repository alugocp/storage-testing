{"entries": [{"type": "constant", "name": "ENTITYDECL", "desc": ""}, {"type": "constant", "name": "ENTITYDEF", "desc": ""}, {"type": "constant", "name": "ENTITYVALUE", "desc": ""}, {"type": "constant", "name": "EXTERNALID", "desc": ""}, {"type": "constant", "name": "GEDECL", "desc": ""}, {"type": "constant", "name": "NDATADECL", "desc": ""}, {"type": "constant", "name": "PEDECL", "desc": ""}, {"type": "constant", "name": "PEDEF", "desc": ""}, {"type": "constant", "name": "PEREFERENCE", "desc": ""}, {"type": "constant", "name": "PEREFERENCE_RE", "desc": ""}, {"type": "constant", "name": "PUBIDCHAR", "desc": ""}, {"type": "constant", "name": "PUBIDLITERAL", "desc": ""}, {"type": "constant", "name": "SYSTEMLITERAL", "desc": ""}, {"type": "attribute", "name": "external", "desc": " "}, {"type": "attribute", "name": "name", "desc": " "}, {"type": "attribute", "name": "ndata", "desc": " "}, {"type": "attribute", "name": "pubid", "desc": " "}, {"type": "attribute", "name": "ref", "desc": " "}, {"type": "public class method", "name": "matches?(string)", "desc": "Evaluates whether the given string matches an entity definition, returning true if so, and false otherwise."}, {"type": "public class method", "name": "new(stream, value=nil, parent=nil, reference=false)", "desc": "Create a new entity.  Simple entities can be constructed by passing a name, value to the constructor; this creates a generic, plain entity reference. For anything more complicated, you have to pass a Source to the constructor with the entity definition, or use the accessor methods. WARNING: There is no validation of entity state except when the entity is read from a stream.  If you start poking around with the accessors, you can easily create a non-conformant Entity."}, {"type": "public instance method", "name": "normalized()", "desc": "Returns the value of this entity unprocessed \u2013 raw.  This is the normalized value; that is, with all %ent; and &ent; entities intact"}, {"type": "public instance method", "name": "to_s()", "desc": "Returns this entity as a string.  See write()."}, {"type": "public instance method", "name": "unnormalized()", "desc": "Evaluates to the unnormalized value of this entity; that is, replacing all entities \u2013 both %ent; and &ent; entities.  This differs from +value()+ in that value only replaces %ent; entities."}, {"type": "public instance method", "name": "value()", "desc": "Returns the value of this entity.  At the moment, only internal entities are processed.  If the value contains internal references (IE, %blah;), those are replaced with their values.  IE, if the doctype contains:"}, {"type": "public instance method", "name": "write(out, indent=-1)", "desc": "Write out a fully formed, correct entity definition (assuming the Entity object itself is valid.)"}]}