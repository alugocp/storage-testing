{"entries": [{"type": "constant", "name": "INTERNAL_METHODS", "desc": ""}, {"type": "constant", "name": "namespace_context", "desc": ""}, {"type": "constant", "name": "variables", "desc": ""}, {"type": "public class method", "name": "boolean(object=@@context[:node])", "desc": ""}, {"type": "public class method", "name": "ceiling( number )", "desc": ""}, {"type": "public class method", "name": "compare_language(lang1, lang2)", "desc": ""}, {"type": "public class method", "name": "concat( *objects )", "desc": ""}, {"type": "public class method", "name": "contains( string, test )", "desc": "Fixed by Mike Stok"}, {"type": "public class method", "name": "context=(value)", "desc": ""}, {"type": "public class method", "name": "count( node_set )", "desc": "Returns the size of the given list of nodes."}, {"type": "public class method", "name": "false( )", "desc": "UNTESTED"}, {"type": "public class method", "name": "floor( number )", "desc": ""}, {"type": "public class method", "name": "get_namespace( node_set = nil )", "desc": "Helper method."}, {"type": "public class method", "name": "id( object )", "desc": "Since REXML is non-validating, this method is not implemented as it requires a DTD"}, {"type": "public class method", "name": "lang( language )", "desc": "UNTESTED"}, {"type": "public class method", "name": "last( )", "desc": "Returns the last node of the given list of nodes."}, {"type": "public class method", "name": "local_name(node_set=nil)", "desc": ""}, {"type": "public class method", "name": "name( node_set=nil )", "desc": ""}, {"type": "public class method", "name": "namespace_context()", "desc": ""}, {"type": "public class method", "name": "namespace_context=(x)", "desc": ""}, {"type": "public class method", "name": "namespace_uri( node_set=nil )", "desc": ""}, {"type": "public class method", "name": "normalize_space( string=nil )", "desc": "UNTESTED"}, {"type": "public class method", "name": "not( object )", "desc": "UNTESTED"}, {"type": "public class method", "name": "number(object=@@context[:node])", "desc": "a string that consists of optional whitespace followed by an optional minus sign followed by a Number followed by whitespace is converted to the IEEE 754 number that is nearest (according to the IEEE 754 round-to-nearest rule) to the mathematical value represented by the string; any other string is converted to NaN"}, {"type": "public class method", "name": "position( )", "desc": ""}, {"type": "public class method", "name": "processing_instruction( node )", "desc": ""}, {"type": "public class method", "name": "round( number )", "desc": ""}, {"type": "public class method", "name": "send(name, *args)", "desc": ""}, {"type": "public class method", "name": "singleton_method_added(name)", "desc": ""}, {"type": "public class method", "name": "starts_with( string, test )", "desc": "Fixed by Mike Stok"}, {"type": "public class method", "name": "string( object=@@context[:node] )", "desc": "A node-set is converted to a string by returning the string-value of the node in the node-set that is first in document order. If the node-set is empty, an empty string is returned."}, {"type": "public class method", "name": "string_length( string )", "desc": "UNTESTED"}, {"type": "public class method", "name": "string_value( o )", "desc": "A node-set is converted to a string by returning the concatenation of the string-value of each of the children of the node in the node-set that is first in document order. If the node-set is empty, an empty string is returned."}, {"type": "public class method", "name": "substring( string, start, length=nil )", "desc": "Take equal portions of Mike Stok and Sean Russell; mix vigorously, and pour into a tall, chilled glass.  Serves 10,000."}, {"type": "public class method", "name": "substring_after( string, test )", "desc": "Kouhei fixed this too"}, {"type": "public class method", "name": "substring_before( string, test )", "desc": "Kouhei fixed this"}, {"type": "public class method", "name": "sum( nodes )", "desc": ""}, {"type": "public class method", "name": "text( )", "desc": ""}, {"type": "public class method", "name": "translate( string, tr1, tr2 )", "desc": "This is entirely Mike Stok's beast"}, {"type": "public class method", "name": "true( )", "desc": "UNTESTED"}, {"type": "public class method", "name": "variables()", "desc": ""}, {"type": "public class method", "name": "variables=(x)", "desc": ""}]}