{"entries": [{"type": "public instance method", "name": "attlistdecl(element_name, attributes, raw_content)", "desc": "If a doctype includes an ATTLIST declaration, it will cause this method to be called.  The content is the declaration itself, unparsed. EG, <!ATTLIST el attr CDATA #REQUIRED> will come to this method as \u201cel attr CDATA #REQUIRED\u201d.  This is the same for all of the .*decl methods."}, {"type": "public instance method", "name": "cdata(content)", "desc": "Called when <![CDATA[ \u2026 ]]> is encountered in a document. @p content \u201c\u2026\u201d"}, {"type": "public instance method", "name": "comment(comment)", "desc": "Called when a comment is encountered. @p comment The content of the comment"}, {"type": "public instance method", "name": "doctype(name, pub_sys, long_name, uri)", "desc": "Handles a doctype declaration. Any attributes of the doctype which are not supplied will be nil.  # EG, <!DOCTYPE me PUBLIC \u201cfoo\u201d \u201cbar\u201d> @p name the name of the doctype; EG, \u201cme\u201d @p pub_sys \u201cPUBLIC\u201d, \u201cSYSTEM\u201d, or nil.  EG, \u201cPUBLIC\u201d @p long_name the supplied long name, or nil.  EG, \u201cfoo\u201d @p uri the uri of the doctype, or nil.  EG, \u201cbar\u201d"}, {"type": "public instance method", "name": "doctype_end()", "desc": "Called when the doctype is done"}, {"type": "public instance method", "name": "elementdecl(content)", "desc": "<!ELEMENT \u2026>"}, {"type": "public instance method", "name": "entity(content)", "desc": "Called when %foo; is encountered in a doctype declaration. @p content \u201cfoo\u201d"}, {"type": "public instance method", "name": "entitydecl(content)", "desc": "<!ENTITY \u2026> The argument passed to this method is an array of the entity declaration.  It can be in a number of formats, but in general it returns (example, result):"}, {"type": "public instance method", "name": "instruction(name, instruction)", "desc": "Called when an instruction is encountered.  EG: <?xsl sheet='foo'?> @p name the instruction name; in the example, \u201cxsl\u201d @p instruction the rest of the instruction.  In the example, \u201csheet='foo'\u201d"}, {"type": "public instance method", "name": "notationdecl(content)", "desc": "<!NOTATION \u2026>"}, {"type": "public instance method", "name": "tag_end(name)", "desc": "Called when the end tag is reached.  In the case of <tag/>, #tag_end will be called immediately after #tag_start @p the name of the tag"}, {"type": "public instance method", "name": "tag_start(name, attrs)", "desc": "Called when a tag is encountered. @p name the tag name @p attrs an array of arrays of attribute/value pairs, suitable for use with assoc or rassoc.  IE, <tag attr1=\u201cvalue1\u201d attr2=\u201cvalue2\u201d> will result in #tag_start( \u201ctag\u201d, # [[\u201cattr1\u201d,\u201cvalue1\u201d],])"}, {"type": "public instance method", "name": "text(text)", "desc": "Called when text is encountered in the document @p text the text content."}, {"type": "public instance method", "name": "xmldecl(version, encoding, standalone)", "desc": "Called when an XML PI is encountered in the document. EG: <?xml version=\u201c1.0\u201d encoding=\u201cutf\u201d?> @p version the version attribute value.  EG, \u201c1.0\u201d @p encoding the encoding attribute value, or nil.  EG, \u201cutf\u201d @p standalone the standalone attribute value, or nil.  EG, nil"}]}