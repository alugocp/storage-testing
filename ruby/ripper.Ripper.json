{"entries": [{"type": "constant", "name": "EVENTS", "desc": "This array contains name of all ripper events."}, {"type": "constant", "name": "PARSER_EVENTS", "desc": "This array contains name of parser events."}, {"type": "constant", "name": "SCANNER_EVENTS", "desc": "This array contains name of scanner events."}, {"type": "public class method", "name": "lex(src, filename = '-', lineno = 1)", "desc": "Tokenizes the Ruby program and returns an array of an array, which is formatted like [[lineno, column], type, token, state]."}, {"type": "public class method", "name": "parse(src, filename = '(ripper)', lineno = 1)", "desc": "Parses the given Ruby program read from src. src must be a String or an IO or a object with a gets method."}, {"type": "public class method", "name": "sexp(src, filename = '-', lineno = 1)", "desc": "Parses src and create S-exp tree. Returns more readable tree rather than ::sexp_raw. This method is mainly for developer use."}, {"type": "public class method", "name": "sexp_raw(src, filename = '-', lineno = 1)", "desc": "Parses src and create S-exp tree. This method is mainly for developer use."}, {"type": "public class method", "name": "slice(src, pattern, n = 0)", "desc": "Parses src and return a string which was matched to pattern. pattern should be described as Regexp."}, {"type": "public class method", "name": "tokenize(src, filename = '-', lineno = 1)", "desc": "Tokenizes the Ruby program and returns an array of strings."}]}