{"entries": [{"type": "attribute", "name": "command", "desc": " The name of the command. "}, {"type": "attribute", "name": "defaults", "desc": " The default options for the command. "}, {"type": "attribute", "name": "options", "desc": " The options for the command. "}, {"type": "attribute", "name": "program_name", "desc": " The name of the command for command-line invocation. "}, {"type": "attribute", "name": "summary", "desc": " A short description of the command. "}, {"type": "public class method", "name": "add_common_option(*args, &handler)", "desc": ""}, {"type": "public class method", "name": "add_specific_extra_args(cmd,args)", "desc": "Add a list of extra arguments for the given command.  args may be an array or a string to be split on white space."}, {"type": "public class method", "name": "build_args()", "desc": "Arguments used when building gems"}, {"type": "public class method", "name": "build_args=(value)", "desc": ""}, {"type": "public class method", "name": "common_options()", "desc": ""}, {"type": "public class method", "name": "extra_args()", "desc": ""}, {"type": "public class method", "name": "extra_args=(value)", "desc": ""}, {"type": "public class method", "name": "new(command, summary=nil, defaults={})", "desc": "Initializes a generic gem command named command.  summary is a short description displayed in `gem help commands`.  defaults are the default options.  Defaults should be mirrored in defaults_str, unless there are none."}, {"type": "public class method", "name": "specific_extra_args(cmd)", "desc": "Return an array of extra arguments for the command.  The extra arguments come from the gem configuration file read at program startup."}, {"type": "public class method", "name": "specific_extra_args_hash()", "desc": "Accessor for the specific extra args hash (self initializing)."}, {"type": "public instance method", "name": "add_extra_args(args)", "desc": "Adds extra args from ~/.gemrc"}, {"type": "public instance method", "name": "add_option(*opts)", "desc": "Add a command-line option and handler to the command."}, {"type": "public instance method", "name": "arguments()", "desc": "Override to provide details of the arguments a command takes.  It should return a left-justified string, one argument per line."}, {"type": "public instance method", "name": "begins?(long, short)", "desc": "True if long begins with the characters from short."}, {"type": "public instance method", "name": "check_deprecated_options(options)", "desc": ""}, {"type": "public instance method", "name": "defaults_str()", "desc": "Override to display the default values of the command options. (similar to arguments, but displays the default values)."}, {"type": "public instance method", "name": "deprecate_option(name, version: nil, extra_msg: nil)", "desc": "Mark a command-line option as deprecated, and optionally specify a deprecation horizon."}, {"type": "public instance method", "name": "description()", "desc": "Override to display a longer description of what this command does."}, {"type": "public instance method", "name": "execute()", "desc": "Override to provide command handling."}, {"type": "public instance method", "name": "get_all_gem_names()", "desc": "Get all gem names from the command line."}, {"type": "public instance method", "name": "get_all_gem_names_and_versions()", "desc": "Get all [gem, version] from the command line."}, {"type": "public instance method", "name": "get_one_gem_name()", "desc": "Get a single gem name from the command line.  Fail if there is no gem name or if there is more than one gem name given."}, {"type": "public instance method", "name": "get_one_optional_argument()", "desc": "Get a single optional argument from the command line.  If more than one argument is given, return only the first. Return nil if none are given."}, {"type": "public instance method", "name": "handle_options(args)", "desc": "Handle the given list of arguments by parsing them and recording the results."}, {"type": "public instance method", "name": "handles?(args)", "desc": "True if the command handles the given argument list."}, {"type": "public instance method", "name": "invoke(*args)", "desc": "Invoke the command with the given list of arguments."}, {"type": "public instance method", "name": "invoke_with_build_args(args, build_args)", "desc": "Invoke the command with the given list of normal arguments and additional build arguments."}, {"type": "public instance method", "name": "merge_options(new_options)", "desc": "Merge a set of command options with the set of default options (without modifying the default option hash)."}, {"type": "public instance method", "name": "remove_option(name)", "desc": "Remove previously defined command-line argument name."}, {"type": "public instance method", "name": "show_help()", "desc": "Display the help message for the command."}, {"type": "public instance method", "name": "show_lookup_failure(gem_name, version, errors, suppress_suggestions = false, required_by = nil)", "desc": "Display to the user that a gem couldn't be found and reasons why"}, {"type": "public instance method", "name": "usage()", "desc": "Override to display the usage for an individual gem command."}, {"type": "public instance method", "name": "when_invoked(&block)", "desc": "Call the given block when invoked."}]}