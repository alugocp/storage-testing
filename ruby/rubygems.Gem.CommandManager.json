{"entries": [{"type": "constant", "name": "ALIAS_COMMANDS", "desc": ""}, {"type": "public class method", "name": "instance()", "desc": "Return the authoritative instance of the command manager."}, {"type": "public class method", "name": "new()", "desc": "Register all the subcommands supported by the gem command."}, {"type": "public class method", "name": "reset()", "desc": "Reset the authoritative instance of the command manager."}, {"type": "public instance method", "name": "[](command_name)", "desc": "Returns a Command instance for command_name"}, {"type": "public instance method", "name": "command_names()", "desc": "Return a sorted list of all command names as strings."}, {"type": "public instance method", "name": "find_alias_command(cmd_name)", "desc": ""}, {"type": "public instance method", "name": "find_command(cmd_name)", "desc": ""}, {"type": "public instance method", "name": "find_command_possibilities(cmd_name)", "desc": ""}, {"type": "public instance method", "name": "instance()", "desc": "Returns self. Allows a CommandManager instance to stand in for the class itself."}, {"type": "public instance method", "name": "process_args(args, build_args=nil)", "desc": ""}, {"type": "public instance method", "name": "register_command(command, obj=false)", "desc": "Register the Symbol command as a gem command."}, {"type": "public instance method", "name": "run(args, build_args=nil)", "desc": "Run the command specified by args."}, {"type": "public instance method", "name": "unregister_command(command)", "desc": "Unregister the Symbol command as a gem command."}]}