{"entries": [{"type": "constant", "name": "DEFAULT_BACKTRACE", "desc": ""}, {"type": "constant", "name": "DEFAULT_BULK_THRESHOLD", "desc": ""}, {"type": "constant", "name": "DEFAULT_CERT_EXPIRATION_LENGTH_DAYS", "desc": ""}, {"type": "constant", "name": "DEFAULT_CONCURRENT_DOWNLOADS", "desc": ""}, {"type": "constant", "name": "DEFAULT_UPDATE_SOURCES", "desc": ""}, {"type": "constant", "name": "DEFAULT_VERBOSITY", "desc": ""}, {"type": "constant", "name": "OPERATING_SYSTEM_DEFAULTS", "desc": "For Ruby packagers to set configuration defaults.  Set in\nrubygems/defaults/operating_system.rb"}, {"type": "constant", "name": "PLATFORM_DEFAULTS", "desc": "For Ruby implementers to set configuration defaults.  Set in\nrubygems/defaults/#{RUBY_ENGINE}.rb"}, {"type": "constant", "name": "SYSTEM_WIDE_CONFIG_FILE", "desc": ""}, {"type": "attribute", "name": "args", "desc": " List of arguments supplied to the config file object. "}, {"type": "attribute", "name": "backtrace", "desc": " True if we print backtraces on errors. "}, {"type": "attribute", "name": "bulk_threshold", "desc": " Bulk threshold value.  If the number of missing gems are above this threshold value, then a bulk download technique is used.  (deprecated) "}, {"type": "attribute", "name": "cert_expiration_length_days", "desc": " Expiration length to sign a certificate "}, {"type": "attribute", "name": "concurrent_downloads", "desc": " Number of gem downloads that should be performed concurrently. "}, {"type": "attribute", "name": "disable_default_gem_server", "desc": " True if we want to force specification of gem server when pushing a gem "}, {"type": "attribute", "name": "hash", "desc": " "}, {"type": "attribute", "name": "home", "desc": " Where to install gems (deprecated) "}, {"type": "attribute", "name": "path", "desc": " Where to look for gems (deprecated) "}, {"type": "attribute", "name": "sources", "desc": " sources to look for gems "}, {"type": "attribute", "name": "ssl_ca_cert", "desc": " Path name of directory or file of openssl CA certificate, used for remote https connection "}, {"type": "attribute", "name": "ssl_client_cert", "desc": " Path name of directory or file of openssl client certificate, used for remote https connection with client authentication "}, {"type": "attribute", "name": "ssl_verify_mode", "desc": " openssl verify mode value, used for remote https connection "}, {"type": "attribute", "name": "update_sources", "desc": " True if we want to update the SourceInfoCache every time, false otherwise "}, {"type": "attribute", "name": "verbose", "desc": " Verbose level of output:  false \u2013 No output  true \u2013 Normal output  :loud \u2013 Extra output  "}, {"type": "public class method", "name": "new(args)", "desc": "Create the config file object.  args is the list of arguments from the command line."}, {"type": "public instance method", "name": "[](key)", "desc": "Return the configuration information for key."}, {"type": "public instance method", "name": "[]=(key, value)", "desc": "Set configuration option key to value."}, {"type": "public instance method", "name": "api_keys()", "desc": "Hash of RubyGems.org and alternate API keys"}, {"type": "public instance method", "name": "backtrace()", "desc": "True if the backtrace option has been specified, or debug is on."}, {"type": "public instance method", "name": "check_credentials_permissions()", "desc": "Checks the permissions of the credentials file.  If they are not 0600 an error message is displayed and RubyGems aborts."}, {"type": "public instance method", "name": "config_file_name()", "desc": "The name of the configuration file."}, {"type": "public instance method", "name": "credentials_path()", "desc": "Location of RubyGems.org credentials"}, {"type": "public instance method", "name": "each(&block)", "desc": "Delegates to @hash"}, {"type": "public instance method", "name": "handle_arguments(arg_list)", "desc": "Handle the command arguments."}, {"type": "public instance method", "name": "load_api_keys()", "desc": ""}, {"type": "public instance method", "name": "load_file(filename)", "desc": ""}, {"type": "public instance method", "name": "really_verbose()", "desc": "Really verbose mode gives you extra output."}, {"type": "public instance method", "name": "rubygems_api_key()", "desc": "Returns the RubyGems.org API key"}, {"type": "public instance method", "name": "rubygems_api_key=(api_key)", "desc": "Sets the RubyGems.org API key to api_key"}, {"type": "public instance method", "name": "set_api_key(host, api_key)", "desc": "Set a specific host's API key to api_key"}, {"type": "public instance method", "name": "unset_api_key!()", "desc": "Remove the +~/.gem/credentials+ file to clear all the current sessions."}, {"type": "public instance method", "name": "write()", "desc": "Writes out this config file, replacing its source."}]}