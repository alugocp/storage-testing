{"entries": [{"type": "attribute", "name": "headers", "desc": " "}, {"type": "public class method", "name": "fetcher()", "desc": "Cached RemoteFetcher instance."}, {"type": "public class method", "name": "fetcher=(fetcher)", "desc": ""}, {"type": "public class method", "name": "new(proxy=nil, dns=nil, headers={})", "desc": "Initialize a remote fetcher using the source URI and possible proxy information."}, {"type": "public instance method", "name": "cache_update_path(uri, path = nil, update = true)", "desc": "Downloads uri to path if necessary. If no path is given, it just passes the data."}, {"type": "public instance method", "name": "close_all()", "desc": ""}, {"type": "public instance method", "name": "download(spec, source_uri, install_dir = Gem.dir)", "desc": "Moves the gem spec from source_uri to the cache dir unless it is already there.  If the source_uri is local the gem cache dir copy is always replaced."}, {"type": "public instance method", "name": "download_to_cache(dependency)", "desc": "Given a name and requirement, downloads this gem into cache and returns the filename. Returns nil if the gem cannot be located."}, {"type": "public instance method", "name": "fetch_file(uri, *_)", "desc": "File Fetcher. Dispatched by fetch_path. Use it instead."}, {"type": "public instance method", "name": "fetch_http(uri, last_modified = nil, head = false, depth = 0)", "desc": "HTTP Fetcher. Dispatched by fetch_path. Use it instead."}, {"type": "public instance method", "name": "fetch_https(uri, last_modified = nil, head = false, depth = 0)", "desc": ""}, {"type": "public instance method", "name": "fetch_path(uri, mtime = nil, head = false)", "desc": "Downloads uri and returns it as a String."}, {"type": "public instance method", "name": "fetch_s3(uri, mtime = nil, head = false)", "desc": ""}, {"type": "public instance method", "name": "fetch_size(uri)", "desc": "Returns the size of uri in bytes."}, {"type": "public instance method", "name": "https?(uri)", "desc": ""}, {"type": "public instance method", "name": "request(uri, request_class, last_modified = nil)", "desc": "Performs a Net::HTTP request of type request_class on uri returning a Net::HTTP response object.  request maintains a table of persistent connections to reduce connect overhead."}, {"type": "public instance method", "name": "s3_uri_signer(uri)", "desc": "we have our own signing code here to avoid a dependency on the aws-sdk gem"}, {"type": "alias", "name": "fetch_https(uri, last_modified = nil, head = false, depth = 0)", "desc": "             Alias for: fetch_http "}]}