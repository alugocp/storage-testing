{"entries": [{"type": "attribute", "name": "always_install", "desc": " Array of gems to install even if already installed "}, {"type": "attribute", "name": "dependencies", "desc": " "}, {"type": "attribute", "name": "development", "desc": " "}, {"type": "attribute", "name": "development_shallow", "desc": " Set to true if you want to install only direct development dependencies. "}, {"type": "attribute", "name": "errors", "desc": " Errors fetching gems during resolution. "}, {"type": "attribute", "name": "ignore_dependencies", "desc": " When true, dependency resolution is not performed, only the requested gems are installed. "}, {"type": "attribute", "name": "prerelease", "desc": " If true, allow dependencies to match prerelease gems. "}, {"type": "attribute", "name": "remote", "desc": " When false no remote sets are used for resolving gems. "}, {"type": "attribute", "name": "soft_missing", "desc": " Treat missing dependencies as silent errors "}, {"type": "attribute", "name": "source_set", "desc": " The set of source gems imported via load_gemdeps. "}, {"type": "public class method", "name": "new(*deps)", "desc": "Creates a RequestSet for a list of Gem::Dependency objects, deps.  You can then resolve and install the resolved list of dependencies."}, {"type": "public instance method", "name": "gem(name, *reqs)", "desc": "Declare that a gem of name name with reqs requirements is needed."}, {"type": "public instance method", "name": "import(deps)", "desc": "Add deps Gem::Dependency objects to the set."}, {"type": "public instance method", "name": "install(options)", "desc": "Installs gems for this RequestSet using the Gem::Installer options."}, {"type": "public instance method", "name": "install_from_gemdeps(options, &block)", "desc": "Installs from the gem dependencies files in the :gemdeps option in options, yielding to the block as in install."}, {"type": "public instance method", "name": "install_hooks(requests, options)", "desc": "Call hooks on installed gems"}, {"type": "public instance method", "name": "install_into(dir, force = true, options = {})", "desc": ""}, {"type": "public instance method", "name": "load_gemdeps(path, without_groups = [], installing = false)", "desc": "Load a dependency management file."}, {"type": "public instance method", "name": "resolve(set = Gem::Resolver::BestSet.new)", "desc": "Resolve the requested dependencies and return an Array of Specification objects to be activated."}, {"type": "public instance method", "name": "resolve_current()", "desc": "Resolve the requested dependencies against the gems available via Gem.path and return an Array of Specification objects to be activated."}, {"type": "public instance method", "name": "sorted_requests()", "desc": ""}, {"type": "public instance method", "name": "specs()", "desc": ""}, {"type": "public instance method", "name": "specs_in(dir)", "desc": ""}]}