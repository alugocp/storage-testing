{"entries": [{"type": "constant", "name": "Conflict", "desc": "A conflict that the resolution process encountered @attr [Object]\nrequirement the requirement that immediately led to the conflict @attr [{String,Nil=>}] requirements the requirements that caused\nthe conflict @attr [Object, nil] existing the existing spec that was in\nconflict with\nthe {#possibility}\n@attr [Object] possibility the spec that was unable to be activated due\nto a conflict\n\n@attr [Object] locked_requirement the relevant locking requirement. @attr\n[Array<Array<Object>>] requirement_trees the different\nrequirement\ntrees that led to every requirement for the conflicting name.\n@attr [{String=>Object}] activated_by_name the already-activated specs."}, {"type": "attribute", "name": "base", "desc": " @return [DependencyGraph] the base dependency graph to which dependencies should be 'locked'  "}, {"type": "attribute", "name": "original_requested", "desc": " @return [Array] the dependencies that were explicitly required "}, {"type": "attribute", "name": "resolver_ui", "desc": " @return [UI] the UI that knows how to communicate feedback about the resolution process back to the user  "}, {"type": "attribute", "name": "specification_provider", "desc": " @return [SpecificationProvider] the provider that knows about dependencies, requirements, specifications, versions, etc. "}, {"type": "public class method", "name": "new(specification_provider, resolver_ui, requested, base)", "desc": "Initializes a new resolution. @param [SpecificationProvider] #specification_provider"}, {"type": "public instance method", "name": "resolve()", "desc": "Resolves the {#original_requested} dependencies into a full dependency"}]}