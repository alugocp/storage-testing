{"entries": [{"type": "public class method", "name": "do_not_reverse_lookup => true or falseclick to toggle source", "desc": "Gets the global ::do_not_reverse_lookup flag."}, {"type": "public class method", "name": "do_not_reverse_lookup = boolclick to toggle source", "desc": "Sets the global ::do_not_reverse_lookup flag."}, {"type": "public class method", "name": "for_fd(fd) => basicsocketclick to toggle source", "desc": "Returns a socket object which contains the file descriptor, fd."}, {"type": "public instance method", "name": "close_read => nilclick to toggle source", "desc": "Disallows further read using shutdown system call."}, {"type": "public instance method", "name": "close_write => nilclick to toggle source", "desc": "Disallows further write using shutdown system call."}, {"type": "public instance method", "name": "connect_address()", "desc": "Returns an address of the socket suitable for connect in the local machine."}, {"type": "public instance method", "name": "do_not_reverse_lookup => true or falseclick to toggle source", "desc": "Gets the ::do_not_reverse_lookup flag of basicsocket."}, {"type": "public instance method", "name": "do_not_reverse_lookup = boolclick to toggle source", "desc": "Sets the ::do_not_reverse_lookup flag of basicsocket."}, {"type": "public instance method", "name": "getpeereid => [euid, egid]click to toggle source", "desc": "Returns the user and group on the peer of the UNIX socket. The result is a two element array which contains the effective uid and the effective gid."}, {"type": "public instance method", "name": "getpeername => sockaddrclick to toggle source", "desc": "Returns the remote address of the socket as a sockaddr string."}, {"type": "public instance method", "name": "getsockname => sockaddrclick to toggle source", "desc": "Returns the local address of the socket as a sockaddr string."}, {"type": "public instance method", "name": "getsockopt(level, optname) => socketoptionclick to toggle source", "desc": "Gets a socket option. These are protocol and system specific, see your local system documentation for details. The option is returned as a Socket::Option object."}, {"type": "public instance method", "name": "local_address => addrinfoclick to toggle source", "desc": "Returns an Addrinfo object for local address obtained by getsockname."}, {"type": "public instance method", "name": "recv(maxlen[, flags[, outbuf]]) => mesgclick to toggle source", "desc": "Receives a message."}, {"type": "public instance method", "name": "recv_nonblock(maxlen [, flags [, buf [, options ]]]) => mesgclick to toggle source", "desc": "Receives up to maxlen bytes from socket using recvfrom(2) after O_NONBLOCK is set for the underlying file descriptor. flags is zero or more of the MSG_ options. The result, mesg, is the data received."}, {"type": "public instance method", "name": "recvmsg(maxmesglen=nil, flags=0, maxcontrollen=nil, opts={}) => [mesg, sender_addrinfo, rflags, *controls]click to toggle source", "desc": "recvmsg receives a message using recvmsg(2) system call in blocking manner."}, {"type": "public instance method", "name": "recvmsg_nonblock(maxdatalen=nil, flags=0, maxcontrollen=nil, opts={}) => [data, sender_addrinfo, rflags, *controls]click to toggle source", "desc": "recvmsg receives a message using recvmsg(2) system call in non-blocking manner."}, {"type": "public instance method", "name": "remote_address => addrinfoclick to toggle source", "desc": "Returns an Addrinfo object for remote address obtained by getpeername."}, {"type": "public instance method", "name": "send(mesg, flags [, dest_sockaddr]) => numbytes_sentclick to toggle source", "desc": "send mesg via basicsocket."}, {"type": "public instance method", "name": "sendmsg(mesg, flags=0, dest_sockaddr=nil, *controls) => numbytes_sentclick to toggle source", "desc": "sendmsg sends a message using sendmsg(2) system call in blocking manner."}, {"type": "public instance method", "name": "sendmsg_nonblock(mesg, flags=0, dest_sockaddr=nil, *controls, opts={}) => numbytes_sentclick to toggle source", "desc": "#sendmsg_nonblock sends a message using sendmsg(2) system call in non-blocking manner."}, {"type": "public instance method", "name": "setsockopt(level, optname, optval)click to toggle source", "desc": ""}, {"type": "public instance method", "name": "shutdown([how]) => 0click to toggle source", "desc": "Calls shutdown(2) system call."}]}