{"entries": [{"type": "constant", "name": "EVENT_SYMBOL", "desc": "Symbol table used for displaying trace information"}, {"type": "constant", "name": "Single", "desc": "Reference to singleton instance of Tracer"}, {"type": "constant", "name": "VERSION", "desc": ""}, {"type": "constant", "name": "display_c_call", "desc": ""}, {"type": "constant", "name": "display_process_id", "desc": ""}, {"type": "constant", "name": "display_thread_id", "desc": ""}, {"type": "constant", "name": "stdout", "desc": ""}, {"type": "constant", "name": "verbose", "desc": ""}, {"type": "attribute", "name": "display_c_call", "desc": " display C-routine calls in trace output (defaults to false) "}, {"type": "attribute", "name": "display_c_call?", "desc": " display C-routine calls in trace output (defaults to false) "}, {"type": "attribute", "name": "display_process_id", "desc": " display process id in trace output (defaults to false) "}, {"type": "attribute", "name": "display_process_id?", "desc": " display process id in trace output (defaults to false) "}, {"type": "attribute", "name": "display_thread_id", "desc": " display thread id in trace output (defaults to true) "}, {"type": "attribute", "name": "display_thread_id?", "desc": " display thread id in trace output (defaults to true) "}, {"type": "attribute", "name": "stdout", "desc": " output stream used to output trace (defaults to STDOUT) "}, {"type": "attribute", "name": "stdout_mutex", "desc": " mutex lock used by tracer for displaying trace output "}, {"type": "attribute", "name": "verbose", "desc": " display additional debug information (defaults to false) "}, {"type": "attribute", "name": "verbose?", "desc": " display additional debug information (defaults to false) "}, {"type": "public class method", "name": "add_filter(p = nil, &b)", "desc": "Used to filter unwanted trace output"}, {"type": "public class method", "name": "off()", "desc": "Disable tracing"}, {"type": "public class method", "name": "on()", "desc": "Start tracing"}, {"type": "public class method", "name": "set_get_line_procs(file_name, p = nil, &b)", "desc": "Register an event handler p which is called every time a line in file_name is executed."}]}