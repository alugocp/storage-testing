{"entries": [{"type": "constant", "name": "ARGV", "desc": "After invoking OLE methods with reference arguments, you can access the\nvalue of arguments by using ARGV.\nIf the method of OLE(COM) server written by C#.NET is following:\nvoid calcsum(int a, int b, out int c) {\n    c = a + b;\n}\nthen, the Ruby OLE(COM) client script to retrieve the value of argument c\nafter invoking calcsum method is following:\na = 10\nb = 20\nc = 0\ncomserver.calcsum(a, b, c)\np c # => 0\np WIN32OLE::ARGV # => [10, 20, 30]\n\nYou can use WIN32OLE_VARIANT object to\nretrieve the value of reference arguments instead of referring WIN32OLE::ARGV."}, {"type": "constant", "name": "CP_ACP", "desc": "ANSI code page. See ::codepage and ::codepage=."}, {"type": "constant", "name": "CP_MACCP", "desc": "2"}, {"type": "constant", "name": "CP_OEMCP", "desc": "OEM code page. See ::codepage\nand ::codepage=."}, {"type": "constant", "name": "CP_SYMBOL", "desc": "symbol code page. See ::codepage and ::codepage=."}, {"type": "constant", "name": "CP_THREAD_ACP", "desc": "current thread ANSI code page. See ::codepage and ::codepage=."}, {"type": "constant", "name": "CP_UTF7", "desc": "UTF-7 code page. See ::codepage and ::codepage=."}, {"type": "constant", "name": "CP_UTF8", "desc": "UTF-8 code page. See ::codepage and ::codepage=."}, {"type": "constant", "name": "LOCALE_SYSTEM_DEFAULT", "desc": "default locale for the operating system. See ::locale and ::locale=."}, {"type": "constant", "name": "LOCALE_USER_DEFAULT", "desc": "default locale for the user or process. See ::locale and ::locale=."}, {"type": "constant", "name": "VERSION", "desc": "Version string of WIN32OLE."}, {"type": "public class method", "name": "codepageclick to toggle source", "desc": "Returns current codepage."}, {"type": "public class method", "name": "codepage = CPclick to toggle source", "desc": "Sets current codepage. The ::codepage is initialized according to Encoding.default_internal. If Encoding.default_internal is nil then ::codepage is initialized according to Encoding.default_external."}, {"type": "public class method", "name": "connect( ole ) -\u2192 aWIN32OLEclick to toggle source", "desc": "Returns running OLE Automation object or WIN32OLE object from moniker. 1st argument should be OLE program id or class id or moniker."}, {"type": "public class method", "name": "const_load( ole, mod = WIN32OLE)click to toggle source", "desc": "Defines the constants of OLE Automation server as mod's constants. The first argument is WIN32OLE object or type library name. If 2nd argument is omitted, the default is WIN32OLE. The first letter of Ruby's constant variable name is upper case, so constant variable name of WIN32OLE object is capitalized. For example, the 'xlTop' constant of Excel is changed to 'XlTop' in WIN32OLE. If the first letter of constant variable is not [A-Z], then the constant is defined as CONSTANTS hash element."}, {"type": "public class method", "name": "create_guidclick to toggle source", "desc": "Creates GUID."}, {"type": "public class method", "name": "locale \u2192 locale id.click to toggle source", "desc": "Returns current locale id (lcid). The default locale is WIN32OLE::LOCALE_SYSTEM_DEFAULT."}, {"type": "public class method", "name": "locale = lcidclick to toggle source", "desc": "Sets current locale id (lcid)."}, {"type": "public class method", "name": "new(server, [host]) \u2192 WIN32OLE objectclick to toggle source", "desc": ""}, {"type": "public class method", "name": "ole_free(aWIN32OLE) -\u2192 numberclick to toggle source", "desc": "Invokes Release method of Dispatch interface of WIN32OLE object. You should not use this method because this method exists only for debugging WIN32OLE. The return value is reference counter of OLE object."}, {"type": "public class method", "name": "ole_reference_count(aWIN32OLE) -\u2192 numberclick to toggle source", "desc": "Returns reference counter of Dispatch interface of WIN32OLE object. You should not use this method because this method exists only for debugging WIN32OLE."}, {"type": "public class method", "name": "ole_show_help(obj [,helpcontext])click to toggle source", "desc": "Displays helpfile. The 1st argument specifies WIN32OLE_TYPE object or WIN32OLE_METHOD object or helpfile."}, {"type": "public instance method", "name": "WIN32OLE[a1,a2,...]click to toggle source", "desc": "Returns the value of Collection specified by a1, a2,.\u2026"}, {"type": "public instance method", "name": "WIN32OLE[a1, a2, ...]=valclick to toggle source", "desc": "Sets the value to WIN32OLE object specified by a1, a2, \u2026"}, {"type": "public instance method", "name": "WIN32OLE#_getproperty(dispid, args, types)click to toggle source", "desc": "Runs the early binding method to get property. The 1st argument specifies dispatch ID, the 2nd argument specifies the array of arguments, the 3rd argument specifies the array of the type of arguments."}, {"type": "public instance method", "name": "WIN32OLE#_invoke(dispid, args, types)click to toggle source", "desc": "Runs the early binding method. The 1st argument specifies dispatch ID, the 2nd argument specifies the array of arguments, the 3rd argument specifies the array of the type of arguments."}, {"type": "public instance method", "name": "WIN32OLE#_setproperty(dispid, args, types)click to toggle source", "desc": "Runs the early binding method to set property. The 1st argument specifies dispatch ID, the 2nd argument specifies the array of arguments, the 3rd argument specifies the array of the type of arguments."}, {"type": "public instance method", "name": "WIN32OLE#each {|i|...}click to toggle source", "desc": "Iterates over each item of OLE collection which has IEnumVARIANT interface."}, {"type": "public instance method", "name": "WIN32OLE#invoke(method, [arg1,...])  => return value of method.click to toggle source", "desc": "Runs OLE method. The first argument specifies the method name of OLE Automation object. The others specify argument of the method. If you can not execute method directly, then use this method instead."}, {"type": "public instance method", "name": "WIN32OLE#method_missing(id [,arg1, arg2, ...])click to toggle source", "desc": "Calls #invoke method."}, {"type": "public instance method", "name": "methods(*args)", "desc": "By overriding Object#methods, WIN32OLE might work well with did_you_mean gem. This is experimental."}, {"type": "public instance method", "name": "WIN32OLE#ole_activex_initialize() \u2192 Qnilclick to toggle source", "desc": "Initialize WIN32OLE object(ActiveX Control) by calling IPersistMemory::InitNew."}, {"type": "public instance method", "name": "WIN32OLE#ole_freeclick to toggle source", "desc": "invokes Release method of Dispatch interface of WIN32OLE object. Usually, you do not need to call this method because Release method called automatically when WIN32OLE object garbaged."}, {"type": "public instance method", "name": "WIN32OLE#ole_func_methodsclick to toggle source", "desc": "Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE object."}, {"type": "public instance method", "name": "WIN32OLE#ole_get_methodsclick to toggle source", "desc": "Returns the array of WIN32OLE_METHOD object . The element of the array is property (gettable) of WIN32OLE object."}, {"type": "public instance method", "name": "WIN32OLE#ole_method_help(method)click to toggle source", "desc": "Returns WIN32OLE_METHOD object corresponding with method specified by 1st argument."}, {"type": "public instance method", "name": "ole_method_help(p1)", "desc": ""}, {"type": "public instance method", "name": "WIN32OLE#ole_methodsclick to toggle source", "desc": "Returns the array of WIN32OLE_METHOD object. The element is OLE method of WIN32OLE object."}, {"type": "public instance method", "name": "ole_obj_help()", "desc": ""}, {"type": "public instance method", "name": "WIN32OLE#ole_put_methodsclick to toggle source", "desc": "Returns the array of WIN32OLE_METHOD object . The element of the array is property (settable) of WIN32OLE object."}, {"type": "public instance method", "name": "WIN32OLE#ole_query_interface(iid) \u2192 WIN32OLE objectclick to toggle source", "desc": "Returns WIN32OLE object for a specific dispatch or dual interface specified by iid."}, {"type": "public instance method", "name": "WIN32OLE#ole_respond_to?(method) \u2192 true or falseclick to toggle source", "desc": "Returns true when OLE object has OLE method, otherwise returns false."}, {"type": "public instance method", "name": "WIN32OLE#ole_typeclick to toggle source", "desc": "Returns WIN32OLE_TYPE object."}, {"type": "public instance method", "name": "WIN32OLE#ole_typelib \u2192 The WIN32OLE_TYPELIB objectclick to toggle source", "desc": "Returns the WIN32OLE_TYPELIB object. The object represents the type library which contains the WIN32OLE object."}, {"type": "public instance method", "name": "setproperty('property', [arg1, arg2,...] val)click to toggle source", "desc": "Sets property of OLE object. When you want to set property with argument, you can use this method."}, {"type": "alias", "name": "ole_method_help(p1)", "desc": "             Alias for: ole_method "}, {"type": "alias", "name": "ole_obj_help()", "desc": "             Alias for: ole_type "}]}