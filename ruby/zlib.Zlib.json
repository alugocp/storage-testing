{"entries": [{"type": "constant", "name": "ASCII", "desc": "Represents text data as guessed by deflate.\nNOTE: The underlying constant Z_ASCII was deprecated in favor of Z_TEXT in\nzlib 1.2.2.  New applications should not use this constant.\nSee Zlib::ZStream#data_type."}, {"type": "constant", "name": "BEST_COMPRESSION", "desc": "Slowest compression level, but with the best space savings."}, {"type": "constant", "name": "BEST_SPEED", "desc": "Fastest compression level, but with the lowest space savings."}, {"type": "constant", "name": "BINARY", "desc": "Represents binary data as guessed by deflate.\nSee Zlib::ZStream#data_type."}, {"type": "constant", "name": "DEFAULT_COMPRESSION", "desc": "Default compression level which is a good trade-off between space and time"}, {"type": "constant", "name": "DEFAULT_STRATEGY", "desc": "Default deflate strategy which is used for normal data."}, {"type": "constant", "name": "DEF_MEM_LEVEL", "desc": "The default memory level for allocating zlib deflate compression state."}, {"type": "constant", "name": "FILTERED", "desc": "Deflate strategy for data produced by a\nfilter (or predictor). The effect of FILTERED is to force more Huffman codes and\nless string matching; it is somewhat intermediate between DEFAULT_STRATEGY and HUFFMAN_ONLY. Filtered data consists\nmostly of small values with a somewhat random distribution."}, {"type": "constant", "name": "FINISH", "desc": "Processes all pending input and flushes pending output."}, {"type": "constant", "name": "FIXED", "desc": "Deflate strategy which prevents the use of\ndynamic Huffman codes, allowing for a simpler decoder for specialized\napplications."}, {"type": "constant", "name": "FULL_FLUSH", "desc": "Flushes all output as with SYNC_FLUSH,\nand the compression state is reset so that decompression can restart from\nthis point if previous compressed data has been damaged or if random access\nis desired. Like SYNC_FLUSH, using FULL_FLUSH too often can seriously degrade\ncompression."}, {"type": "constant", "name": "HUFFMAN_ONLY", "desc": "Deflate strategy which uses Huffman codes\nonly (no string matching)."}, {"type": "constant", "name": "MAX_MEM_LEVEL", "desc": "The maximum memory level for allocating zlib deflate compression state."}, {"type": "constant", "name": "MAX_WBITS", "desc": "The maximum size of the zlib history buffer.  Note that zlib allows larger\nvalues to enable different inflate modes.  See Zlib::Inflate.new for details."}, {"type": "constant", "name": "NO_COMPRESSION", "desc": "No compression, passes through data untouched.  Use this for appending\npre-compressed data to a deflate stream."}, {"type": "constant", "name": "NO_FLUSH", "desc": "NO_FLUSH is the default flush method and\nallows deflate to decide how much data to accumulate before producing\noutput in order to maximize compression."}, {"type": "constant", "name": "OS_AMIGA", "desc": "OS code for Amiga hosts"}, {"type": "constant", "name": "OS_ATARI", "desc": "OS code for Atari hosts"}, {"type": "constant", "name": "OS_CODE", "desc": "The OS code of current host"}, {"type": "constant", "name": "OS_CPM", "desc": "OS code for CP/M hosts"}, {"type": "constant", "name": "OS_MACOS", "desc": "OS code for Mac OS hosts"}, {"type": "constant", "name": "OS_MSDOS", "desc": "OS code for MSDOS hosts"}, {"type": "constant", "name": "OS_OS2", "desc": "OS code for OS2 hosts"}, {"type": "constant", "name": "OS_QDOS", "desc": "OS code for QDOS hosts"}, {"type": "constant", "name": "OS_RISCOS", "desc": "OS code for RISC OS hosts"}, {"type": "constant", "name": "OS_TOPS20", "desc": "OS code for TOPS-20 hosts"}, {"type": "constant", "name": "OS_UNIX", "desc": "OS code for UNIX hosts"}, {"type": "constant", "name": "OS_UNKNOWN", "desc": "OS code for unknown hosts"}, {"type": "constant", "name": "OS_VMCMS", "desc": "OS code for VM OS hosts"}, {"type": "constant", "name": "OS_VMS", "desc": "OS code for VMS hosts"}, {"type": "constant", "name": "OS_WIN32", "desc": "OS code for Win32 hosts"}, {"type": "constant", "name": "OS_ZSYSTEM", "desc": "OS code for Z-System hosts"}, {"type": "constant", "name": "RLE", "desc": "Deflate compression strategy designed to be\nalmost as fast as HUFFMAN_ONLY, but\ngive better compression for PNG image data."}, {"type": "constant", "name": "SYNC_FLUSH", "desc": "The SYNC_FLUSH method flushes all\npending output to the output buffer and the output is aligned on a byte\nboundary. Flushing may degrade compression so it should be used only when\nnecessary, such as at a request or response boundary for a network stream."}, {"type": "constant", "name": "TEXT", "desc": "Represents text data as guessed by deflate.\nSee Zlib::ZStream#data_type."}, {"type": "constant", "name": "UNKNOWN", "desc": "Represents an unknown data type as guessed by deflate.\nSee Zlib::ZStream#data_type."}, {"type": "constant", "name": "VERSION", "desc": "The Ruby/zlib version string."}, {"type": "constant", "name": "ZLIB_VERSION", "desc": "The string which represents the version of zlib.h"}, {"type": "public class method", "name": "adler32(string, adler)click to toggle source", "desc": "Calculates Adler-32 checksum for string, and returns updated value of adler. If string is omitted, it returns the Adler-32 initial value. If adler is omitted, it assumes that the initial value is given to adler."}, {"type": "public class method", "name": "adler32_combine(adler1, adler2, len2)click to toggle source", "desc": "Combine two Adler-32 check values in to one.  alder1 is the first Adler-32 value, adler2 is the second Adler-32 value.  len2 is the length of the string used to generate adler2."}, {"type": "public class method", "name": "crc32(string, crc)click to toggle source", "desc": "Calculates CRC checksum for string, and returns updated value of crc. If string is omitted, it returns the CRC initial value. If crc is omitted, it assumes that the initial value is given to crc."}, {"type": "public class method", "name": "crc32_combine(crc1, crc2, len2)click to toggle source", "desc": "Combine two CRC-32 check values in to one.  crc1 is the first CRC-32 value, crc2 is the second CRC-32 value.  len2 is the length of the string used to generate crc2."}, {"type": "public class method", "name": "crc_table()", "desc": "Returns the table for calculating CRC checksum as an array."}, {"type": "public class method", "name": "deflate(string[, level])click to toggle source", "desc": ""}, {"type": "public class method", "name": "gunzip(src) \u2192 Stringclick to toggle source", "desc": "Decode the given gzipped string."}, {"type": "public class method", "name": "gzip(src, level: nil, strategy: nil) \u2192 Stringclick to toggle source", "desc": "Gzip the given string. Valid values of level are Zlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION, Zlib::DEFAULT_COMPRESSION (default), or an integer from 0 to 9."}, {"type": "public class method", "name": "inflate(string)click to toggle source", "desc": ""}, {"type": "public class method", "name": "zlib_version()", "desc": "Returns the string which represents the version of zlib library."}]}